         L I B R A R Y . T X T  -  DAS NEUE LIBRARY-CODE-FORMAT 
         ======================================================

Die neueste Version liegt nun auch im  LIBRARY CODE Format vor,  sodaû das 
lÑstige Nachladen Åber  MERGE  entfÑllt. Auch das bisher sehr nÅtzliche 
Utility MY_LIB brauchen Sie bei der Verwendung der "  .LIB"-Version nicht
mehr. Die ASCII-Datei ist weiterhin auf der Diskette vorhanden, sodaû Sie 
falls Sie Interesse haben, Einblick in die Library nehmen kînnen.

W I C H T I G: Der COMPILER ab V 3.03 kÅrzt automatisch nicht benîgtigte Pro-
zeduren und Funktionen aus der Library, sodaû ein kompakter Zielcode ent-
steht, der nur noch das enthÑlt, was auch wirklich gebraucht wird.
Dadurch wird die Programmentwicklung noch ein weiteres StÅck komfortabler,
da das relative aufwendige und zeitintensive Aussortieren der unnîtigen Pro-
grammteile entfÑllt.
 

                Was Sie im Umgang mit Libraries beachten mÅssen
                ===============================================

- OMIKRON.BASIC-Libraries haben die Endung ".LIB". Die GEM-Library heiût auf 
  Diskette z.B.  "GEM.LIB".

- Libraries lÑdt man mit dem Befehl LIBRARY. Beispiel: LIBRARY Gem,"A:\GEM.LIB".
  Zuerst wird der Name der Library angegeben, dann der Dateiname, unter dem die
  Library abgelegt ist. Die LIBRARY-Befehle stehen am Anfang des Programms.

- Bei der ersten AusfÅhrung des Programms lÑdt der LIBRARY-Befehl die Library 
  automatisch nach. Das Laden kann einige Zeit benîtigen (bei einer 50 Kbyte
  groûen Library etwa 10 bis 15 Sekunden).

- Die Libraries stehen nach dem Laden in der letzten Zeile (65534) als LIBRARY
  CODE. Wenn Sie die Zeile 65534 lîschen, lîschen Sie damit die gesamte Libra-
  ry. Da beim Speichern eines OMIKRON.BASIC-Programmes unbenutzte Variablen 
  entfernt werden, kann das Speichern nach dem Lîschen der Library ebenfalls
  etwas lÑnger dauern. Wenn also genÅgend Diskettenplatz zur VerfÅgung steht,
  sichern Sie das Programm am besten zusammen mit der Library, ansonsten ohne.

- zum Compilieren eines Programmes muû sich die Library im Programm befinden.
  Der OMIKRON.BASIC-Compiler kann ab der Version 3.03 unbenutzte Prozeduren 
  aus Libraries herauskÅrzen; Sie mÅssen also nicht erst unbenutzte Teile im
  Source-Code lîschen.

- Einige Prozeduren benîtigen globale Variablen. Globale Variablen der Library
  haben einen Unterstrich (Shift-Minus, "_") am Ende des Namens. In Ihrem Pro-
  gramm sollten Sie also keine Variablen-, Label-, Funktions- und Prozedurnamen
  verwenden, die mit einem Unterstreichungszeichen enden.

- Bei der Dimensionierung von Feldern achten Sie bitte auf folgende Reihenfolge:
  1. DIM eigener String-Felder
  2. Library-Initialisierung (z.B.: Appl_Init)
  3. DIM eigener Nicht-String-Felder
  Beim Umdimensionieren von String-Feldern ist zu beachten, daû nur das letzte 
  Feld umdimensioniert werden kann, und das auch nur fÅr den Fall,  daû  die 
  Library kein String-Feld benîtigt.

- Einige Library-Prozeduren oder -Funktionen rufen selbst wieder Teile Ihres 
  Programmes auf, z.B. die Redraw-Routine fÅr Userfenster in EasyGEM oder die 
  Schnittstellenfunktionen der Numerik-Library. Wenn der aufrufenden Library-
  Funktion ein Feld oder mehrere Felder Åbergeben wurden, dann darf in der 
  Schnittstellenfunktion kein DIM, OPEN oder CLOSE ausgefÅhrt werden.

- Wenn Sie Programme, die die Library verwenden, weitergeben wollen, mÅssen 
  Sie dafÅr sorgen, daû die Library gegen Miûbrauch geschÅtzt ist. Dies er-
  reichen sie auf verschiedene Weise:
  1. Sie compilieren das Programm
  2. Sie schÅtzen Ihr Programm mit PROTECT.BAS von der Demodiskette gegen 
     auflisten.
  3. Sie entfernen die Library aus dem Quelltext.
  GEM-Programme mÅssen in der INFO-Box auf die Verwendung der Library hin-
  weisen.


Birkenfeld, den 21.09.89     
                                         Das OMIKRON.Team

