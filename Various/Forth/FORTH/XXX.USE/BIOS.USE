( BIOS.use)

======== Fill in a  memory manager parameter block =========

0 getMPB (addr-- ) addr will be filled in with the following structure:

(4)	Memory free list
(4)	Memory allocated list
(4)	roving pointer

each of those is a pointer to the following type of structure:

(4)	pointer to next block
(4)	starting address of the block
(4)	length of the block in bytes
(4)	process descriptor

============ get input device status ===========

1 bconstat (dev--status)

dev:	0 PRT: centronics interface
	1 AUX: RS-232 interface
	2 CON: keyboard and screen
	3 MIDI: Midi interface
	4 IKBD: intelligent keyboard port

status:	0 no chars ready
	-1 at least one char is ready

'1 call bconstat' returns 0 or 1 depending if there's a char at the serial prt

========= read a character from device ===========

2 bconin (dev--char) dev is the same. If dev is CON: then the keyboard
	scan code is included in bits 8-15 of the returned character.

'2 call bconin' will wait for the next key press and return the ASCII code
(and the keyscan code in the second byte)

========== write a character to a device =============

3 bconout (dev,char-- )

'2 ascii Q call bconout' will write a 'Q' to the screen

======== read and write disk sectors ==========

4 rwabs (rwflag,buffer,number,recno,dev--result)

rwflag:	0 read sector
	1 write sector
	2 read sector, ignore disk change
	3 write sector, ignore disk change

buffer:	should be on an even address or transfer will be slow

dev:	0 drive A
	1 drive B
	2 hard disk

result:	0 if all OK, else negative error code

'variable ReadBuffer 1020 vallot
1 ReadBuffer 2 12 0 call rwabs drop' will write two sectors to sector
12 of drive A using whatever data is in ReadBuffer area.

======== get the BIOS parameter block for disk drives ===============

7 getBPB (dev--BPB)

dev: 0 drive A
     1 drive B

BPB is the addr of the following (or 0 is an error):
(2)	sector size in bytes
(2)	cluster size in sectors
(2)	cluster size in bytes
(2)	directory length in sectors
(2)	File Allocation Table size in sectors
(2)	sector number of the 2nd FAT
(2)	sector number of the first data cluster
(2)	number of data clusters on the disk
(2)	various flags

======== get output device status =============

8 bcostat (dev--status)

dev:	0 PRT: centronics interface
	1 AUX: RS-232 interface
	2 CON: keyboard and screen
	3 MIDI: Midi interface
	4 IKBD: intelligent keyboard port

status:	0 device not ready
	-1 device is ready

'0 call bcostat' returns 0 or 1 depending if the printer's ready

========= see if the media has changed ========

9 mediach (dev--status)

dev:	0 drive A
	1 drive B

status:	0 diskette definitely wasn't changed
	1 diskette may have been changed
	2 disk definitely was changed

============ get the drive map ===========

10 drvmap ( --map)

map is a bit-map of the drives in use. bit  0 is drive A etc. up to bit 15.

3 is returned if only one  drive since two logical drives are always assumed.

'call drvmap' will leave a 3 on the stack if drives A and B are the only ones
connected

=============== read or change the keyboard status ==========

11 kbshift (mode--state)

mode:	-1 return status
	positve then becomes the status

state:	bit 0 right shift key
	bit 1 left shift key
	bit 2 contorl key
	bit 3 ALT key
	bit 4 caps lock on
	bit 5 right mouse button (CLR/HOME)
	bit 6 left mouse button (INSERT)
	bit 7 not used

'-1 CALL KBSHIFT' should return a 1 if the left shift key is being held



