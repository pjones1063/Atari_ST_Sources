Kludge.RPN
Here's why we took the time to write a standard assembler. These are
various words written in other Forth's assemblers.

CODE CMOVE
	SP )+ D0 LONG MOVE,
	SP )+ A1 LONG MOVE,
	SP )+ A0 LONG MOVE,
	 BEGIN,  D0 01 LONG SUBQ,
	   PL  WHILE
	      A0 )+ A1 )+ BYTE MOVE,
	      D0 01 LONG SUBQ,
	 REPEAT,
	NEXT
END-CODE

CODE 0=
	SP () LONG TST,
	NE IF,   SP () LONG CLR,
	   ELSE, SP () 01 LONG SUBQ,
	   THEN, NEXT END-CODE
CODE U<
	1 DR 1 DR SUB .L  0 DR S )+ MOVE .L
	0 S ) CMP .L  HI IF  1 DR 1 SUBQ .L THEN
	S ) 1 DR MOVE .L NEXT

Here's a good one that someone sent us, the text is cramped because
it was written on a blocks-oriented system.

CODE WORD  >IN U) A0 W. MOVE S )+ A0 ADD
  H U) D7 MOVE   5 #Q D7 ADD   0 # D7 BCLR   D7 A1 MOV
      D7 W MOVE   A1 )+ W. CLR   9602 #W A1 ) MOV  D3 CLR
      S )+ RL MMOV D0 D1 \\   >IN U) DO W. SUB   0= NOT IF
  1 #Q DO SUB   BEGIN   A0 )+  D1 B. CMP   D0 0= DBCC
  0= NOT IF   1 #Q A1 SUB   1 #Q A0 SUB   BEGIN
     A0 )+ A1 ) B. MOV   A1 )+ D1 B. CMP   0= NOT IF
     1 #Q W ( B, ADD   SWAP D0 DBRA   1 #Q A1 ADD
     THEN   THEN   THEN   W S-) MOV   32 #B A1 -) MOV
  -8 S) A0 SUB   A0 >IN  U> W. MOV   EXIT EA JMP