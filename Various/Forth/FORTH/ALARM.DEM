( Alert.demo)
( How to:
======= Display an alert box and error boxes ==========

52 FormAlert (string,defbutton--exitbutton)

string-- address of the string which 'is' the alert box
about the string:
	There may be three items in an alert box,
	[icon#][text][info on the buttons]
	items are delimited with [..]
	the first item holds the number of the icon to be displayed
	 0 - no icon
	 1 - NOTE icon
	 2 - WAIT icon
	 3 - STOP icon
	The second item holds the text to be displayed
	There can be 5 lines of text, no more than 40 chars/line
	Lines are separated with '|''s.
	There can be 1-3 exit buttons, each with no more than 20 chars text
	
defButton-- for the default button
	0 no default exit button
	1 first exit button is default
	2 2nd is default exit
	3 3rd is the default exit button

	
exbutton-- identifies which button in the string was selected (1,2,or 3)

How to invoke:
)
also assembler	( that's where dc.x's are)
create AlarmBox
	dc.b	'[1][This|is|a warning'
	dc.b	'...............]'
	dc.b	'[Key 1|Key 2|Key 3]'
	dc.b	0,0	( ?)

: DoAlarm
AlarmBox 0 call FormAlert cr .
1 call vswrmode drop ;		( try it at home)

( Error boxes are easy. GEM supplies all the text, you supply the
error number)

: DoErrors ( just shows some of the error boxes)
10 call FormError drop
34 call FormError drop
1 call vswrmode drop ;

cr .( type 'DoAlarm' to see an alarm box)
cr .( type 'DoErrors' to see error boxes)
cr