( Handle.evt)
( A simple example showing a bit of CALL's and how to vector event-handlers)
( This will handle the BUTTON message by drawing a red square wherever
  you click the mouse. Just load this file in.)

( First change colorIndex number three to be red)

hex
2 700 call setColor drop	( set colors with a 3-digit hex number
				where each digit is 0-7 and are in red-
				green-blue order. Drop result)

3 call vswrmode	drop	( this sets the writing mode to XOR, just for fun)
1 call vsfInterior drop	( this sets fill mode to solid)
2 call vsfColor	drop	( this sets the fill color to number2=red)

: drawReset	3 call vswrmode drop
		1 call vsfInterior drop	
		2 call vsfColor	drop ;
create Rect
0 0 w, w,
10 10 w, w,	( create a rectangle record to store the mouse coords in)

decimal
176 user xy	( the output array IntOut(1)-IntOut(6) is always placed at
		the user locations named W3-W8. From any book on GEM, the
		xy result of a button press in an EvntMulti call will be
		returned in IntOut(1) and (2), hence, they'll be placed by
		Mach1 into W3 and W4. I've just renamed these user locations.)

116 user Button	( this is where you put the address of a routine to handle
		button-down events.)
hex
( Now I'll define a word which, using the locations at xy, will draw a 
rounded rectangle on the screen at those locations)

: box	drawReset		( make sure all your writing modes are okay)
	xy @ Rect !		( store the xy coords fo rthe rect)
	xy @ 00300030 + Rect 4 + !	( and give it some width and height)
	Rect call vrfBox ;	( draw the rectangle)

' box button !		( install the routine. Now, whenever you press
			the mouse button, a red rectangle will be drawn.)

( if you pause during any event-handler, you risk crashing the system
if too many events get built up and you have a lot on the stack. To have
Mach1 ignore that event, install a zero in the event slot -button in this
case- until you're done processing the event. For instance, to make sure
what's going on when a button is pressed, you might define a word
: test xy ? cr ;  to print whatever's passed to those user locations. If
you hold the button down, Mach1 will crash. With this event-handler, you
can just hold the button down and watch things go.)
