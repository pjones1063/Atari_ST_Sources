DEFINITION MODULE Runtime;             (* Juergen Mueller 26.3.85, 25.10.86 *)

veraltete Version!

(* Runtime Support fuer Megamax Modula-2   /3.5/  V#022
   
   Real-/LongInt-/LongCard-/Set-Arithmetik,
   Zuweisung fuer strukturierte Datentypen,
   Standard-Prozeduren.
   
   Alle Prozeduren koennen mit 'JSR name' auch von Assemblerteilen
   aus aufgerufen werden. Die Identifier werden automatisch in alle
   Module, auch lokale, importiert.
*)

FROM SYSTEM IMPORT WORD, ADDRESS;

EXPORT PERVASIVE
    CAP, CHR, FLOAT, TRUNC, HALT,
    @IMUL, @CMUL, @IDIV, @CDIV, @IMOD, @CMOD, @STAS, @ASGN, @REEQ,
    @RENE, @REGT, @REGE, @RELT, @RELE, @RNEG, @RADD, @RSUB, @RMUL,
    @RDIV, @EXCL, @INCL, @SAND, @SXOR, @SSUM, @SDIF, @SMEM, @SEQL,
    @SNEQ, @SLEQ, @SGEQ, @COPY, @COPS, @SCAS,
    @RES1, @RES2, @RES3, @RES4, @RES5, @RES6, @RES7, @RES8, @RES9,
    @FPDIV, @PRIO, @LSTN, @NEWP, @TRAN, @IOTR, @IOCA;

(* Standard-Identifier *)

PROCEDURE CAP (ch: CHAR): CHAR;
PROCEDURE CHR (c: WORD): CHAR;
PROCEDURE HALT;
PROCEDURE FLOAT (i: LONGCARD): LONGREAL; (* s. auch MathLib0.real() *)
PROCEDURE TRUNC (r: LONGREAL): LONGCARD; (* s. auch MathLib0.entier() *)

(* Real- und Long-Arithmetik *)

PROCEDURE @REEQ (a,b: LONGREAL): BOOLEAN;      (*  "a = b"    *)
PROCEDURE @RENE (a,b: LONGREAL): BOOLEAN;      (*  "a # b"    *)
PROCEDURE @RELE (a,b: LONGREAL): BOOLEAN;      (*  "a <= b"   *)
PROCEDURE @REGE (a,b: LONGREAL): BOOLEAN;      (*  "a >= b"   *)
PROCEDURE @RELT (a,b: LONGREAL): BOOLEAN;      (*  "a < b"    *)
PROCEDURE @REGT (a,b: LONGREAL): BOOLEAN;      (*  "a > b"    *)

PROCEDURE @RNEG (a  : LONGREAL): LONGREAL;     (*  "  - a"    *)
PROCEDURE @RMUL (a,b: LONGREAL): LONGREAL;     (*  "a * b"    *)
PROCEDURE @RDIV (a,b: LONGREAL): LONGREAL;     (*  "a / b"    *)
PROCEDURE @RADD (a,b: LONGREAL): LONGREAL;     (*  "a + b"    *)
PROCEDURE @RSUB (a,b: LONGREAL): LONGREAL;     (*  "a - b"    *)

PROCEDURE @IMUL (a,b: LONGINT ): LONGINT;  (*  "a * b"    *)
PROCEDURE @CMUL (a,b: LONGCARD): LONGCARD; (*  "a * b"    *)
PROCEDURE @IDIV (a,b: LONGINT ): LONGINT;  (*  "a div b"  *)
PROCEDURE @CDIV (a,b: LONGCARD): LONGCARD; (*  "a div b"  *)
PROCEDURE @IMOD (a,b: LONGINT ): LONGINT;  (*  "a mod b"  *)
PROCEDURE @CMOD (a,b: LONGCARD): LONGCARD; (*  "a mod b"  *)

PROCEDURE @ASGN;
PROCEDURE @STAS;
PROCEDURE @SCAS;
PROCEDURE @COPY;
PROCEDURE @COPS;
PROCEDURE @RES1;
PROCEDURE @RES2;
PROCEDURE @RES3;
PROCEDURE @RES4;
PROCEDURE @RES5;
PROCEDURE @RES6;
PROCEDURE @RES7;
PROCEDURE @RES8;
PROCEDURE @RES9;
PROCEDURE @FPDIV;

(* Set-Manipulation:
   Parameter-Uebergabe auf dem Evaluation Stack.
   In der Parameter-Beschreibung steht 'Set' fuer ein Set beliebiger
   Laenge, 'Element' fuer dessen Basistyp.
   Ist /D0/ vermerkt, so muss in D0.W die Laenge des (der) Sets
   in Bytes uebergeben werden.                                     *)

PROCEDURE @INCL;      (*  (VAR s: Set; e: element)   "incl (s,e)"  *)
PROCEDURE @EXCL;      (*  (VAR s: Set; e: element)   "excl (s,e)"  *)

PROCEDURE @SAND;      (*  (s, t: Set): Set      "s * t"       /D0/ *)
PROCEDURE @SXOR;      (*  (s, t: Set): Set      "s / t"       /D0/ *)
PROCEDURE @SSUM;      (*  (s, t: Set): Set      "s + t"       /D0/ *)
PROCEDURE @SDIF;      (*  (s, t: Set): Set      "s - t"       /D0/ *)
PROCEDURE @SMEM;      (*  (e: Element; s: Set): BOOL "e IN s" /D0/ *)
PROCEDURE @SEQL;      (*  (s, t: Set): BOOLEAN  "s = t"       /D0/ *)
PROCEDURE @SNEQ;      (*  (s, t: Set): BOOLEAN  "s # t"       /D0/ *)
PROCEDURE @SLEQ;      (*  (s, t: Set): BOOLEAN  "s <= t"      /D0/ *)
PROCEDURE @SGEQ;      (*  (s, t: Set): BOOLEAN  "s >= t"      /D0/ *)

(* Coroutinen-Unterstuetzung *)

PROCEDURE @NEWP ( p: PROC; wspAddr: ADDRESS; wspSize: LONGCARD; VAR prc: ADDRESS);
PROCEDURE @TRAN ( VAR resumed, new: ADDRESS );
PROCEDURE @IOTR ( VAR resumed, new: ADDRESS; addr: ADDRESS );
PROCEDURE @IOCA ( addr: ADDRESS );
PROCEDURE @LSTN;
PROCEDURE @PRIO;

END Runtime.
