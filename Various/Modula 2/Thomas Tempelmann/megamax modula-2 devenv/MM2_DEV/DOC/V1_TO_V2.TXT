
Hinweise zum Anpassen von Programmen, die mit dem System der Version 1
(Compiler Version 3) erstellt wurden.


Hier erfahren Sie, wie Sie Ihre alten Modula-Programme auf das neue System
der Version 2 (Compiler Version 4) Åbertragen.

Sie sind leider gezwungen, alle ihre alten Module neu zu Åbersetzen.
Machen Sie sich zuvor mit der Bedienung von 'ModRef' (Kap. 2.7) vertraut,
das Programm kann Ihnen dabei eine groûe Hilfe sein.

Auf die meisten notwendigen énderungen wird Sie der Compiler selbst hinweisen.
Sie mÅssen dann nur die entsprechenden Korrekturen vornehmen. Meist mÅssen
Sie eine Funktion nun aus einem anderen Modul importieren oder einen
Parameter ergÑnzen.

Schwierig wird es, wenn Sie Funktionen der Megamax-Bibliothek in Assembler
aufgerufen haben und sich dort nun Parameter geÑndert haben. In diesem
Fall kann Ihnen der Compiler nicht helfen - Sie mÅssen die betroffenen
Stellen selbst finden und anpassen.


1. énderungen am Compiler von Version 3 auf Version 4.


Folgende énderungen werden vom Compiler nicht als Fehler angezeigt, mÅssen
aber angepaût werden, damit die Programme wie bisher laufen:

Bei eingeschaltetem Range-Check ($R+) wird nun nein Laufzeitfehler angezeigt,
wenn bei einer CASE-Anweisung keine der Selektionen zutrifft und auch kein
ELSE-Zweig besteht. Abhilfe: Entweder die Module mit $R- Åbersetzen
("-R" in der Direktiven-Zeile der Compiler-Box) oder leere ELSE-Zweige
einfÅgen.

Ebenso werden nun öber-/UnterlÑufe bei INC und DEC bei $R+ erkannt.
Normalerweise ist das sicher auch erwÅnscht, sodaû hierauf kaum geachtet
werden muû.

Die Compiler der Version 3 kannten nur einen Real-Typ (64 Bit) namens REAL.
Dieser heiût nun LONGREAL. Bei alten Programmen sollten Sie deshalb alle
Vorkommen von REAL durch LONGREAL ersetzen. Analog muû auch FLOAT nach
LFLOAT umbenannt werden!

SETs mit mehr als 8 Elementen werden nun anders angeordnet. FÅr Zugriffe auf
externe Sets (Hardware-Bits, GEM-Sets) mÅssen die Set-Definitionen entweder
angepaût oder mit der Option $U- (s. Compiler-Direktiven) Åbersetzt
werden. Vorsicht auch mit dem Operieren auf diesen Sets in Assembler!

Die Elemente von RECORDs werden nun immer in ihrer Deklarationsfolge
abgelegt, auch wenn sie mit Kommata aufgezÑhlt werden. Die alte,
umgekehrte Reihenfolge kînnen Sie mit der Direktive $T- wiedererlangen.


Die weiteren FÑlle werden vom Compiler erkannt, sodaû nach ihnen nicht
extra gesucht werden braucht:

Was frÅher VAL war, heiût nun CAST. Wurde VAL benutzt, muûte es aus SYSTEM
importiert werden. Da VAL nun nicht mehr in SYSTEM ist, wird der Compiler
den Import sofort bemÑkeln. Ersetzen Sie dann einfach alle Vorkommen
von VAL durch CAST. In wenigen FÑllen kann es vorkommen, daû auch CAST
nicht mehr erlaubt ist - informieren Sie sich dann im Kapitel des Compiler
Åber CAST.

Strings ungleicher LÑnge sind nicht mehr zuweisungskompatibel. Benutzen Sie
Assign aus dem Strings-Modul!

Laufvariablen fÅr FOR unterliegen nun einigen EinschrÑnkungen. Mehr dazu
im Kapitel zum Compiler. Abhilfe lÑût sich meist durch EinfÅhren einer
neuen lokalen Variable leisten.

ASSEMBLER muû nun aus SYSTEM importiert werden.


2. énderungen in der Bibliothek von Systemversion 1 auf Version 2.

Betrifft nur diejenigen, die das M2Init-Modul (fÅr die Grundinitiali-
sierung eines gelinkten Programms) selbst ersetzen: In Version 1 wurde
in A0 ein Zeiger auf die base page Åbergeben - nun geschieht dies
nur noch bei Accessories; ist der Wert Null, ist es kein Accessory-Start
und man erhÑlt den Zeiger auf die base page Åber die Adressierung 4(A7).
Auûerdem wird nun in A2 der Zeiger auf den PDB Åbergeben, dieser lag
bisher immer bei einem konstanten Abstand vom Codebeginn aus.


Modul Directory

Der Eintrag path bei DirQueryProc ist nun ein REF-Parameter. Wenn Sie
DirQuery benutzen, muû demnach die angegebene Prozedur das SchlÅsselwort
"REF" beim path-Parameter erhalten.

Das AufzÑhlungselement writtenAndClosedAttr wurde in archiveAttr umbenannt.

Die Typen Drive und DriveSet befinden sich nun im Modul MOSGlobals.

Die Funktionen SplitPath und SplitName sind nun im Modul FileNames.


Modul Loader

CallModule wurde um zwei Parameter erweitert: In env kann ein Zeiger auf
ein selbstdefiniertes "Environment" Åbergeben werden; hier braucht
dazu einfach NIL Åbergeben werden.

Der Parameter driver hat noch keine Funktion; fÅr ihn ist NoDrivers
aus dem Loader-Modul zu Åbergeben.


Modul Clock

Die Typen Time und Date befinden sich nun im Modul MOSGlobals.


Modul Paths

Die Definitionen von PathList und PathEntry stehen nun im Modul MOSGlobals.

Die Funktionen StdPaths, SetPaths, New- und PrevStdPaths wurden entfernt,
stattdessen muû nun eine eigene Variable fÅr die entsprechende Liste
deklariert werden.

Der FileSelector fÅr SearchFile wird nun im Modul PathEnv definiert.


Modul KbdCtrl

Das Conterm-Bit muû nun von auûen gesetzt
werden, z.B. mit der dortigen Funktion ExtendedMode (TRUE).


Modul XBIOS

SuperExec hat nun einen PROC- statt ADDRESS-Parameter. Damit entfÑllt
das lÑstige Typwandeln, wenn eine Modula-Prozedur darÅber aufgerufen
werden soll.


Modul GemEnv

Die Funktion SuspendedProcess wurde entfernt, da sie unbrauchbar war.

Die FileSelect-Routine befindet sich nun im Modul PathEnv.


Modul Timeconvert

Die Funktion TimeToString hat nun einen optionalen Format-Parameter.
Zur Anpassung ist hier ein Leerstring anzugeben.


Modul VT52

Die Sequenzen sind nun Konstanten.


Modul Calls

CallSystem und CallExternal wurden entfernt, stattdessen kînnen nun
CALLSYS und CALLEXT aus SYSTEM verwendet werden.


Diverse Module

FileBase.ErrMsgField heiût nun MOSConfig.FileErrMsg;
ErrBase.MsgField heiût nun MOSConfig.RuntimeErrMsg.

Die Funktionen WriteNum, ConvNum und NumToStr erlauben nun am Ende die
Angabe des FÅll-Zeichens. Zur Anpassung ist hier "0" anzugeben.

ReadReal liest nun den 4-Byte Datentyp REAL, fÅr LONGREAL muû ReadLReal
verwendet werden.

Ende.
