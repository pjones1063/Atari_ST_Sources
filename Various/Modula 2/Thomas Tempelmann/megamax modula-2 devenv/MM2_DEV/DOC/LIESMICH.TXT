-------------------------------------------------------------------------------
               Aktuelle Informationen zum vorliegenden System
-------------------------------------------------------------------------------

                                                                 Stand: 8.6.94
                                                    (Shell 2.3g, Compiler 4.3d)

InhaltsÅbersicht
----------------
 1. Installation des Systems
     a) Installation eines Updates
     b) Installation auf Harddisk
     c) Installation ohne Harddisk
     d) Installation bei wenig Speicher (Tiny-Shell)
     e) Komprimierte Dateien
     f) Zusammenarbeit mit NEODESK
     g) Das Megamax-Icon
     h) Sonstige Tips
 2. énderungen in der Bibliothek - Portierung der alten Programme
 3. Besonderheiten und Fehler in Bibliothek & Shell
 4. Fehler bei Benutzung der FPU (Mathe-Coprozessor)
 7. énderungen am GME (Editor)
 8. Hinweise zum Compiler
 9. Hinweise zum Linker
10. Hinweise zum Make
11. Erweiterungen in der Shell
12. MM2CLink - Der Linker fÅr Turbo-C & Pure-C
13. Die aktuellen Nummern der MAUS-Mailboxen
14. Korrekturen zum Handbuch
15. Weiterer Support & Vertrieb


1. Installation des Systems
---------------------------

  a) Installation eines Updates

Wann immer sie ein neues System - in der Regel auf vier Disketten - bekommen,
sollten Sie ALLE Dateien ersetzen. Gehen Sie also wie bei einer Neuinstallation
vor und retten Sie vorher Ihre verÑnderten Dateien, wie "MM2SHELL.M2B" und
"MM2SHELL.M2P". Die anderen Dateien des MM2-Systems mÅssen Sie vor einer
Neuinstallation mit HD_INST lîschen, da das Programm sonst bei den erneuerten
Dateien Fehler meldet.

Wenn Sie auf Version 2.3 updaten, kînnen Sie Ihre alten "M2P"-Dateien nicht
ohne weiteres Åbernehmen, da sich deren Format geÑndert hat. Installieren
Sie erstmal dieses System und Åbersetzen Sie dann das Modul "Conv_M2P" aus
dem UTILITY-Ordner. Folgen Sie den Anweisungen im Quelltext, um damit Ihre
alten M2P-Dateien automatisch auf das neue System anpassen zu lassen.

In der beiliegenden Datei REPORT.TXT finden Sie Åbrigens Informationen
Åber die bisherigen Korrekturen am System.

  b) Installation auf Harddisk

Wie im Handbuch beschrieben, installieren Sie das System bequem mit
dem Programm "HD_INST.PRG". Wollen Sie das System aber nur mal schnell
ausprobieren, kînnen Sie auch eine der Shells (MM2SHELL.PRG und
MM2TINYS.PRG) direkt von der Diskette starten. Wenn die Editor (GME)
und Compiler (MM2COMP) geladen sind, kînnen Sie die Diskette mit dem
USER-Ordner einlegen und dann beispielsweise die Beispielprogramme
aus dem DEMO-Ordner Åbersetzen und starten.

  c) Installation ohne Harddisk

Sie kînnen mit dem Modula-System arbeiten, ohne weitere Installationen
vorzunehmen: Starten Sie die Shell von der Startdiskette und legen
Sie danach die Arbeitsdisk (die mit dem USER-Ordner) ein. Darauf sind
alle Dateien enthalten, um Module Åbersetzen und starten zu kînnen. Um
mehr Platz zu erhalten, kînnen Sie auch einiges von der Arbeitsdisk
lîschen, beispielsweise MM2CL1.TOS und den SRC-Ordner. Wenn Sie Åber
mehr als ein Megabyte Speicher verfÅgen, richten Sie sich mit Hilfe der
"MAXIDISK" (s. entspr. Ordner) eine RAM-Disk ein und lassen sich die
Dateien im SYS-Ordner der Arbeitsdisk auf die RAM-Disk kopieren. Erweitern
Sie dann die Pfadlisten im Shell-Batch (MM2SHELL.M2B bzw. MM2TINYS.M2B) um
diese Verzeichnisse in der RAM-Disk.

  d) Installation bei wenig Speicher (Tiny-Shell)

Das Programm "MM2TINYS.PRG" ist eine vereinfachte Version der "normalen"
"MM2Shell". Sie verzichtet auf alle Desktop-Symbol und -Fenster und
spart dadurch ca. 100 KB Speicher ein. Wenn Sie nur 1 MB Speicher im
Rechner haben, sollten Sie in der Regel auf diese Shell zurÅckgreifen.
Die weiteren Dateien, die mit "MM2TINYS" beginnen, gehîren alle zu
dieser Shell - die mit "MM2SHELL" beginnenden Dateien gehîren entsprechend
zur groûen Shell.

Verwenden Sie als Editor mîglichst den GEP_ED statt des GME (einzustellen
in den Editor-Parametern; entfernen Sie zudem die entspr. Load-Anweisung
im Shell-Batch!).

Laden Sie Compiler und Editor nicht resident sondern lassen Sie sie
jedesmal von Disk laden, indem Sie die Load-Anweisungen aus dem Shell-
Batch entfernen (wenn Sie keine Harddisk haben, mÅssen Sie die Module
in den SYS-Ordner der Arbeitsdisk kopieren).

Wenn Sie nur kurzzeitig viel Speicher brauchen, beispielsweise, um die
Shell neu zu linken, kînnen Sie durch DrÅcken der "Esc"-Taste wÑhrend
des Starts der Shell das AusfÅhren der "Load"-Anweisungen der Shell-
Batch-Datei verhindern. Oder starten Sie den Batch "UNLOAD.M2B" - er
gibt die evtl. geladenen Module "MM2Comp", "GME" und "GEP_ED" frei.

Beachten Sie auûerdem die Hinweise im Handbuch im Abschnitt
"Speicherplatzmangel?" unter Kapitel 2.

  e) Komprimierte Dateien

Trotz vier doppelseitig bespielter Disketten muûten viele Dateien
komprimiert werden, um sie alle darauf unterbringen zu kînnen.
Wir haben aber darauf geachtet, daû Sie den Groûteil des Systems
trotzdem erstmal ohne weitere Arbeiten benutzen kînnen.

Die beiden Shell-Programme und das RCP (NRSC_ASH.PRG) sind komprimiert,
entpacken sich aber bei jedem Start selbstÑndig im Speicher. Das dauert
allerdings eine kurze Zeit. WÑhrend das beim RCP nicht stîren sollte,
kînnen Sie bei Bedarf unkomprimierte Versionen der Shells erzeugen,
indem Sie sie einfach neu linken, z.B. durch Verwendung der Batch-
Dateien "LINKSHEL.M2B" bzw. "LINKTINY.M2B". Allerdings mÅssen Sie zuerst
die Shell Åbersetzen. Sie finden die Quelltexte beider Shells in gepackter
Form in SRC\UTILITY (s. nÑchsten Absatz).

Weiterhin sind die Quelltexte der Definitionen, der MOS-Implementationen,
der Shells und der UTILITY-Programme gepackt. Die komprimierten Dateien
befinden sich in den Ordnern "SRC\D", "SRC\MOS" und "SRC\UTILITY". Sie
finden sich dort als ausfÅhrbare Programme - wenn Sie sie starten, beginnen
sie automatisch, sich zu entpacken. Allerdings muû ausreichend Platz
auf der Disk vorhanden sein (ca. die doppelte Grîûe der komprimierten
Datei). Deshalb mÅssen Sie u.U. die Dateien erst jeweils auf eine
leere, doppelseitig formatierte Disk kopieren. Sie kînnen die TOS-Dateien
auch mit der Endung LZH versehen und dann mit dem beigelegten Programm
LHARC.TTP die enthaltenen Quelltextdateien einzeln entpacken (starten
Sie ggf. dazu LHARC.TTP, um eine Kurzanleitung zu erhalten).

Die Dateien in MAXIDISK.4MB und TEMPLMON.V20 sind auf dieselbe Weise
gepackt. Einfach dort das jeweilige Programm START_ME.TOS starten.

Die Dateien wurden Åbrigens mit den Programmen "PFXPAK.PRG" sowie
"MAKESFX.PRG" von Thomas Quester und Markus Fritze komprimiert.
Vielen Dank dafÅr!

  f) Zusammenarbeit mit NEODESK

Wenn Sie NEODESK benutzen, mÅssen Sie die Modula-Shell dahingehend anpassen,
um einen Fehler in NEODESK zu umgehen. Laden Sie dazu den Quelltext der
von Ihnen verwendeten Shell (MM2SHELL.M oder MM2TINYS.M) und setzen Sie
die darin befindliche Konstante 'DoShellWrite' auf FALSE. öbersetzen und
Linken Sie dann die Shell (zum Linken kînnen Sie einfach "LINKSHEL.M2B"
bzw. "LINKTINY.M2B" starten).

  g) Das Megamax-Icon

Die Datei MM2ICON.RSC ist eine GEM-Resource-Datei, die Icons mit dem Megamax-
Symbol enthÑlt. Sie kînnen es bei Programmen verwenden, bei denen Sie den
Dateien individuelle Icons zuordnen kînnen, z.B. Gemini, Neodesk, Opaque
oder dem Desktop des Atari TT.

  h) Sonstige Tips

Damit Sie das Make nutzen kînnen, sollten Sie nicht vergessen, das Programm
"SetTime" aus dem UTILITY-Ordner zu Åbersetzen, zu linken (s. Quelltext)
und in Ihren AUTO-Ordner zu kopieren, wenn Sie keine Echtzeituhr im
Rechner haben.


2. énderungen in der Bibliothek - Portierung der alten Programme
----------------------------------------------------------------

Neben den im Anhang 11 des Handbuchs beschriebenen énderungen der
Bibliothek gegenÅber dem alten System 1.0 und 1.1 sind noch zwei
weitere Punkte zu beachten:

* Wenn Sie in Ihren Programmen andere Module mit "Loader.CallModule"
  nachstarten kînnen, sollten Sie alle Ihre eingebundenen Module
  mit der Direktive "$Y+" versehen, da dies beim alten System praktisch
  die Standard-Einstellung war.

* Modul Excepts: 'InstallExc' und 'InstallSupvExc' wurden zu
  'InstallPreExc' zusammengefaût - die Unterscheidung trifft nun
  ein zusÑtzlicher BOOLEAN-Parameter. Wenn Sie 'InstallExc'
  verwendet haben, passen Sie den Namen an und fÅgen als neues
  drittes Argument "TRUE" ein.

* Das Feld 'year' im Record 'Date' (nun im Modul 'MOSGlobals') hat
  nun den Typ INTEGER, vormals CARDINAL.


3. Besonderheiten und Fehler in Bibliothek und Shell
----------------------------------------------------

Wichtige neue Regel:

Wollen Sie das Modula-Programm vorzeitig beenden (z.B. aufgrund eines
Fehlers, der ein weiterlaufen des Programms unmîglich macht), sollten
Sie nicht die GEMDOS-Funktion Pterm() dazu aufrufen sondern stattdessen
immer die Funktion PrgCtrl.TermProcess benutzen. Wenn Sie Pterm direkt
aufrufen, passiert zwar nichts Schlimmes, aber es kann unter bestimmten
UmstÑndenden passieren, daû dann ein falscher Exit-Code anstatt des bei
Pterm angegebenen Wertes an das aufrufende Programm zurÅckgegeben wird.


Folg. Funktionen sind noch nicht implementiert:

Modul Excepts:     InstallPostExc.
Modul Files:       Abort.
Modul InOut:       ReadToken, ReadFromLine, ReadLn und EndOfLine.
Modul LibFiles:    CopyLib.
Modul Textwindows: Abortread.


Folgende Macken/Fehler sind zur Zeit bekannt:

* FÅr unsere Schwizer User: Die Tastenbelegung in der Shell ist teilweise
  verwirrend: So werden die Tasten Åber ihren Scan-Code (und nicht etwa,
  wie es dann sein sollte, Åber die Funktionen des Keyboard-Moduls - grrr)
  direkt abgefragt, was dazu fÅhrt, daû Sie zum öbersetzen&Starten nicht
  die Plus- sondern die Taste drÅcken mÅssen, die rechts und unterhalb
  von der Return-Taste umrungen ist.

* Werden Dateien geladen, die keine vom neuen Compiler erzeugten Module und
  auch keine normalen Programmdateien sind, kommt die Fehlermeldung
  "Unerlaubtes Layout von ..." und danach ist fast aller Speicher belegt.
  Dies liegt an einem Fehler im TOS. Sie mÅssen daraufhin die Shell bzw.
  das Programm, von dem Sie aus geladen haben, verlassen und neu starten,
  um den Speicher wieder frei zu bekommen.

* Beide Shells laufen unter MultiGEM. Ist allerdings das GDOS "AMCLIGHT"
  installiert, darf die Shell dann nicht mehr verlassen werden, weil sonst
  das System abstÅrzt! Der Fehler ist bekannt aber kann leider nicht so
  einfach behoben werden.

* Die groûe Shell MM2SHELL hat Probleme unter MultiTOS. So kommt es oft
  vor, daû beim Verlassen der Shell oder beim Ende des Linker-Aufrufs
  das ganze System stehenbleibt. Wenn Sie wissen sollten, woran das liegt,
  oder nach den Fehlern suchen wollen, melden Sie sich doch bitte bei
  Thomas Tempelmann. Ggf. kînnen Sie auch die notwendigen Quelltexte zum
  Testen/Korrigieren erhalten.
  Programme, die mit dem Modula-System erzeugt wurden, laufen jedoch
  in der Regel unter MultiTOS. Wahrscheinlich ist nur die Shell selbst
  die Ursache fÅr die bekannten Probleme.
  Mit Mag!X gibt es seit der Shell V2.3e Åbrigens keine bekannten Probleme
  mehr.


4. Fehler bei Benutzung der FPU (Mathe-Coprozessor)
---------------------------------------------------

Im Handbuch ist beschrieben, daû Sie sich eine neue Shell linken
mÅssen, wenn Sie die FPU benutzen wollen. Wenn Sie ein Programm
erzeugen, das die FPU benutzt (auch die Shell) und Sie dies Programm
auf einem Rechner ohne die benîtigte FPU starten, liefert es einen
Exitcode, der den Desktop veranlaût, "TOS-Fehler #46" anzuzeigen.

Wenn Sie eine Beschleunigerkarte zusammen mit der ST-FPU (SFP004 von
Atari oder kompatible) einsetzen, kann es sein, daû die Fehlermeldung
"Protokollverletzung" auftritt oder der Rechner in Endlosschleifen
verweilt. So beispielsweise bei der 68030er-Karte "hyperCACHE 030"
von proVME.
Schalten Sie dann vorher den/die Daten-Cache(s) ab. Der Fehler sollte
dann nicht mehr auftreten.

Siehe auch Hinweis zu den Konstanten pi und e im Kap. 8.


5. (nicht mehr vorhanden)

6. (hat sich erledigt)


7. énderungen am GME (Editor)
-----------------------------

Es ergaben sich noch einige Umbelegungen der Tastenbefehle.
Sie kînnen nun je nach Belieben nach Word-Star- oder McIntosh-Art
Blîcke kopieren und verschieben:

Wenn Sie einen Block mit der Maus (rechte und linke Maustasten fÅr
Blockanfang und -ende) oder durch ^KB und ^KK markiert haben,
kînnen Sie ihn entweder mit ^KC sofort kopieren bzw. mit ^KV
verschieben oder Sie kînnen ihn mit ^C ins "Klemmbrett" kopieren
bzw. mit ^X ausschneiden und dann mit ^V an anderer Stelle wieder
einfÅgen.

Wenn Sie "EinfÅgen" (^V) im Block-MenÅ benutzen und Sie unmittelbar
zuvor einen Block markiert haben, wird der markierte Bereich durch
den EinzufÅgenden ersetzt.

ACHTUNG: Wenn Sie das Blockende setzen, beachten Sie, daû der Block
nur bis zu dem Zeichen VOR dem Cursor markiert wird!

Leider kommt der GME noch nicht korrekt mit Accssories klar. Wenn Sie
beispielsweise das Kontrollfeld im GME aufrufen, wird sein Fenster
bei der ersten Editor-Operation Åberschrieben und kann nicht mehr
angesprochen werden. Achten Sie also darauf, daû Sie Accessory-Fenster
nach der Benutzung sofort wieder schlieûen.


8. Hinweise zum Compiler
------------------------

ISO-Erweiterung:
  Prozeduren kînnen unter anderem Namen redefiniert werden Åber die
  CONST-Anweisung. So kann z.B. mittels
    CONST Wr = InOut.WriteString;
  in Zukunft 'Wr' statt 'InOut.WriteString' geschrieben werden. Solche
  sog. Alias-Prozeduren kînnen natÅrlich auch aus Definitionsmodulen
  exportiert werden.

öbersetzte Definitionsmodule erhalten nun die Kennung 6 (bisher 5), d.h.,
  Def-Module, die mit Compiler ab V4.3c Åbersetzt werden, kînnen nicht mehr
  von Ñlteren Compilerversionen importiert werden!

Z-Direktive und Assembler:
  Wird $Z+ verwendet, wird das Resultat von Funktionen in D0 geliefert,
  solange das Datum dort hinein paût. Sonst wird es wie Åblich auf dem
  A3-Stack Åbergeben.
  Wird solch eine Funktion von Assembler aus aufgerufen, muû direkt
  hinter den Funktionsnamen ein "/" gesetzt werden, um damit zu
  bestÑtigen, daû man sich der besonderen öbergabe in D0 bewuût ist.
  Andernfalls meldet der Compiler/Assembler einen diesbezÅglichen
  Fehler.

T-Direktive:
  Beachten Sie dazu die zweite Seite im Anhang 11 des Handbuchs.

Kapitel A.11: Weiterer Hinweis zum Portieren alter MM2-Programme:
  FrÅher (PIM 1 und 2) erlaubte N.Wirth, auch Subrange-Variable als
  VAR-Parameter an andere Subrange bzw. den Basistyp zu Åbergeben.
  So war z.B. folgendes mîglich:
    VAR subrange: [1..10];
    BEGIN
      ReadCard (subrange)
  Da hier aber gar nicht ÅberprÅft werden kann, ob wirklich nur ein
  Wert von 1 bis 10 in "subrange" eingelesen wurde, hat Wirth in PIM-3
  festgelegt, daû nur noch >>identische<< Typen an VAR-Parameter
  Åbergeben werden dÅrfen - Sie mÅssen nun also z.B. eine echte CARDINAL-
  Variable an ReadCard Åbergeben!

TABLEs:
  Die Adressen von TABLEs kînnen nun mit der Funktion SYSTEM.CADR ermittelt
  werden.
  TABLEs sind eine einfache Art, um >>unverÑnderliche<< Daten in Tabellen-
  form im Code (TEXT-Segment, daher nicht verÑndern!) abzulegen. Die
  Syntax:
    TABLE [.B|.W|.L] ident ":" integer { "," integer } ";"
  Das heiût: Nach "TABLE" kann optional eine Grîûenangabe folgen (B:Byte,
  W:Word, L:Longword, bei keiner Angabe wird Word angenommen), dann der
  Name der "Tabelle", dann ein Doppelpunkt und zuletzt die Daten, durch
  Kommata getrennt.
  Beispiel:
    TABLE.B Maske: $01,$03,$07,$0F,$1F,$3F,$7F,$FF;
  Ein weiteres Beispiel finden Sie in "TIEFE.M".

DEREF: Diese Funktion im SYSTEM-Modul bietet die Mîglichkeit, einen
Zeigerwert zu derefenzieren, wo es die Modula-Syntax nicht zulÑût,
beispielsweise den Wert einer Funktion. Alternativ kînnen Sie auch
die Direktive $A+ verwenden und dann das ^-Zeichen direkt anwenden.
DEREF ist eine Megamax-Erweiterung. Beispiele:
  Normales Modula:   p:= funktion(); x:= p^;
  Mit DEREF:         x:= DEREF (funktion());
  Erweiterte Syntax: x:= funktion()^;         (vorher $A+ verwenden!)

SHIFT/ROTATE: Diese Funktionen sind im Handbuch fehlerhaft beschrieben.
Sie haben keine VAR-Parameter sondern liefern ein Funktionsergebnis
vom selben Typ wie das Argument "x". Auûerdem sind diese Funktionen
noch nicht vollstÑndig implementiert: Wenn das SET nicht vollstÑndig
ein Byte, Word oder Longword belegt (SET OF BITNUM [0..n], n=7/15/31),
darf der 2. Parameter "n" fÅr die Anzahl der Verschiebungen nur eine
Konstante sein. Beispiele:
  set:= SHIFT (set, n);
  set:= ROTATE (set, -1);

Und noch eine Kleinigkeit: Der Compiler besteht zur Zeit aus zwei
Implementationsmodulen und nicht aus einem Hauptmodul. Die beiden
zusammengehîrenden Module heiûen "MM2COMP.IMP" und "MM2COMP2.IMP".

Weitere bekannte "Macken" und Fehler im Compiler:

* Module, die eine PrioritÑtsangabe im Modulkopf haben, laufen nicht auf
  dem Atari TT. Verwenden Sie dazu stattdessen "IRMask" und "SetIRMask"
  aus dem Modul "SysUtil2".

* ADDRESS ist immer noch zu allen POINTER-Typen kompatibel, obwohl das
  nach PIM (Programieren in Modula-2) nicht korrekt ist.

* Eine CASE-Anweisung erzeugt immer und ausschlieûlich eine Sprungtabelle.
  Ihre Grîûe ergibt sich aus der Differenz der kleinsten und grîûten Marke,
  fÅr die jeweils zwei Byte belegt werden. Dies wird wohl auch in Zukunft
  so bleiben. Beispiel:
    CASE cardinal OF
      1:    ... |
      3:    ... |
      1990: ... |
      2000: ... |
  Hierbei werden 4000 Byte fÅr die Sprungtabelle belegt, maximal ist die
  Sprungtabelle auf 32 KB beschrÑnkt.
  Ordnen Sie also bei solchen CASE-Anweisungen ggf. die Marken in zusammen-
  liegenden Gruppen, z.B. durch IF/ELSIF:
     IF cardinal < 1000 THEN
       CASE cardinal OF
         1: ...|
         3: ...|
       END
     ELSE
       CASE cardinal OF
         1990: ... |
         2000: ... |
       END
     END;

* Die Konstanten "pi" und "e" aus dem Modul MathLib0 haben nicht die
  exakten Werte, wenn sie in einem Modul verwendet werden, das im IEEE-
  Format, also fÅr eine der FPUs, Åbersetzt wird. Abhilfe ist z.Zt.
  nur so zu erreichen, daû Sie diese Konstanten nochmals im eigenen
  Modul neu deklarieren anstatt sie aus MathLib0 zu importieren.

* öbersicht Åber die Compiler-Optionen, die zur Konfiguration
  (Speicherverwaltung, In-/Ausgabe usw.) dienen.
  Sie kînnen in einem Batch Åbergeben oder in der Compiler-Direktiven-
  Zeile der Options-Box eingestellt werden.
  
  /A<Zahl>  (Default: /A20000)
     Bestimmt die Grîûe des sog. DATA-Puffers. In ihm werden
     seit V4.3 Konstanten gesammelt, die grîûer als 8 Byte
     sind oder als REF-Parameter Åbergeben werden. Bei
     Auftreten der Fehlermeldung 823 (DATA-Puffer-öberlauf)
     sollte dieser Wert vergrîûert werden.

  /I<Zahl>  (Default: /I2000)
     Bestimmt die Grîûe des Identifier-Stacks. Ist zu vergrîûern,
     wenn der Fehler 807 (öberlauf des Bezeichner-Stacks) auftritt.

  /><Zahl>  (Default: />32768)
     Bestimmt den Speicher, den der Compiler mindestens
     beim öbersetzen freizuhalten hat. Normalerweise
     reserviert der Compiler, der ja nicht wissen kann, wie
     groû das zu Åbersetzende Programm werden wird, allen
     verfÅgbaren Speicher abzÅglich dieses Wertes fÅr sich.
     Bei Multitask-Betriebssystemen bleibt dann aber kein
     Speicher mehr fÅr andere Programme Åbrig. Hierzu kann
     der Wert entsprechend vergrîûert werden, allerdings
     kann es dann passieren, daû groûe Programme vom Compiler
     mangels Speicher nicht mehr Åbersetzbar sind. Dazu kînnen
     verschiedene Fehler auftreten, die alle im Bereich von
     800-849 liegen.

  /<<Zahl>  (Default: /<3000000)
     Bestimmt den Speicher, den der Compiler maximal fÅr
     sich belegen soll. Siehe auch "/<"-Option, welche
     Vorrang hat.

  /O<Pfadname>  (Default: Erster Pfad aus aus entspr. Pfadliste)
     Bestimmt den Verzeichnisnamen, auf dem alle wÑhrend dieses
     Compilerlaufs Åbersetzten Code-Dateien abgelegt werden sollen.
  
  /L<Dateiname>  (Default: ShellMsg.DefLibName)
     Bestimmt den Namen der Library mit den Definitionsmodulen
     (hat Vorrang vor den einzelnen DEF-Dateien in den Suchpfaden).
     
  /P<Dateiname>
  /C<Zahl>
     Angaben fÅr Protokollausgabe. Siehe Handbuch.

  /Q
     UnterdrÅckt Ausgaben des Compilers auf den Bildschirm.

  /@<Zahl>
     Der Compiler erwartet den Text nicht in einer Datei
     sondern im Speicher mit Beginn der angegebenen Adresse.
  
  /^<Zahl>
     Der Compiler erwartet den Text nicht in einer Datei
     sondern ruft wiederholt die Prozedur auf, deren Adr.
     angegeben ist. Die Prozedur muû jew. einen Zeiger auf
     den Zeilenanfang jeder Zeile zurÅckgeben, und zwar,
     indem sie die Adresse entsprechend dem Assemblerbefehl
     "MOVE.L <Zeilenadr>,(A3)+" auf dem von MM2 verwendeten
     Parameterstack ablegt.


9. Hinweise zum Linker
----------------------

* Aufruf des Linkers Åber eine Batch-Datei

 Nicht alle Optionen des Linkers kînnen in der Shell Åber die Optionen-Box
 einstellt werden, sondern mÅssen ggf. dem Compiler Åber einen Batch in
 der Commandline Åbergeben werden. Hier werden alle Optionen aufgefÅhrt.
 Die restlichen Einstellungen sind Åber die anderen Batch-Befehle vorzu-
 nehmen oder werden aus den aktuellen Einstellungen der Linker-Optionen
 Åbernommen (z.B. die Init-Module).
 
 In der Batch-Datei wird der Linker mit "Link" aufgerufen. Dahinter sollte
 dann zuerst der Name des Hauptmoduls folgen, dann die Optionen.
 
 Jede Option muû mit einem "-" oder "/" eingeleitet werden dann folgt ein
 weiteres Zeichen:
 
   '0'..'9':
     Setzt genau jenes Bit im Flagfeld des "Header" im Programm. Dabei
     entsprechen folgende Bits den Optionen im Linker-Dialog der Shell:
       0: Fast Load, 1: Fast Code, 2: Fast Memory.
   'R':
     Grîûe d. Reloziertabelle. Siehe unten.
   'S':
     Erzeugen einer Symboldatei. Siehe unten.
     Nach dem 'S' kînnen - ohne Leerzeichen - Optionen angegeben werden,
     die an die Funktion OutputSymbols des im Quelltext mitgelieferten
     Moduls MM2LnkIO Åbergeben werden.
   'I':
     Erzeugt Initialisierungsliste. Siehe unten.
   'H', 'F', 'M':
     Bestimmt Optimierungsmodus. 'M': nur Prozedurnamen entfernen,
     'H': unbenutzte Prozeduren entfernen ("Prozedurnamen erhalten"),
     'F': vollstÑndige Optimierung.
   'V':
     Ruft die Funktion 'VerboseOutput' von MM2LnkIO auf.
   'O':
     Bestimmt den Pfad/Namen der zu erzeugenden Programms. Ansonsten wird
     der Name des Hauptmoduls mit passender Endung erzeugt.
   'D':
     Erzeugt ein DATA-Segment. Siehe unten. Zahl (DATA-Grîûe) oder Dateiname
     (Daten fÅr DATA-Segment) muû ohne Leerzeichen folgen.

* Fehlermeldung "Relocation table overflow"

 Sollten Sie bei einem umfangreichen Modul die Fehlermeldung "Relocation
 table overflow", dann haben Sie die kritische Grenze von 1000 zu
 relozierenden Adressen (globale Variablenzugriffe und Prozeduraufrufe)
 in einem Modul Åberschritten. Abhilfe schaffen Sie, indem Sie einen Batch
 zum Starten des Linkers erstellen und bei der LINK-Anweisung die Option
 "-R", gefolgt von einem neuen Wert, anfÅgen. So enthielte die Batch-Datei
 dann z.B. folgende Zeile: "LINK <name> -R2000"

* Erzeugen einer Symboldatei

 Der Linker erzeugt nun optional eine Symboldatei, in der alle Module und
 Prozeduren samt ihren Adressen im erzeugten Programm aufgefÅhrt werden.

 Weiterhin ist aus der Symboldatei ersichtlich, welche Module und Prozeduren
 durch das Optimieren entfernt wurden und von welchen Pfaden die Modulcodes
 geladen wurden.

 Um die Datei erzeugen zu lassen, ist in der Linker-Box der Shell der neue
 entsprechende Schalter zu aktivieren. Dann erzeugt der Linker eine Datei
 im selben Verzeichnis und mit selbem Namen wie die Ausgabedatei mit der
 Endung "M2S". D.h, neben einem erzeugten Programm "C:\USER\MOD\DECODE.PRG"
 finden Sie die Symboldatei "C:\USER\MOD\DECODE.M2S".

 Die Ausgabe der Symbole kann nach Belieben verÑndert werden, da die Ausgabe-
 prozedur im Modul MM2LnkIO enthalten ist, das im Quelltext vorliegt (Ordner
 SRC\MOS).

 Die Adressen der Symbole sind wie folgt zu interpretieren:
 
 - Der Wert des "Head" beim Modulnamen gibt die Anfangsadresse des Moduls
   relativ zum Codebeginn an.
 - Der Codebeginn ist der des TEXT-Segments und das findet man in der
   Base Page im Feld 'p_tbase' (s. Modul SysTypes). Die Adresse der Base Page
   kann z.B. im laufenden Programm durch 'PrgCtrl.GetBasePageAddr()' ermittelt
   werden.
 - Die Werte vor jeder Prozedur geben die Anfangsadresse relativ zum "Head"
   an. Allerdings ist diese Adresse nicht unbedingt die Einsprungsadresse
   des Prozedurcodes: Wenn die Prozedurnamen nicht aus dem Code wegoptimiert
   wurden, kommt zuerst der Prozedurname und dahinter erst der Programmcode.
 - Der Wert von "Var" beim Modulnamen gibt die Anfangsadresse der globalen
   Variablen des Moduls relativ zum BSS-Segment an. Die Adresse des BSS-
   Segments findet man in der Base Page im Feld 'p_bbase' (s. Modul SysTypes).
   Die Offsets der einzelnen Variablen eines Moduls kînnen Sie erfahren, wenn
   Sie beim öbersetzen des Moduls das Compilerprotokoll einschalten. Am Ende
   des Protokolls finden Sie die globalen Variablen aufgelistet. Wollen Sie
   kein Protokoll des ganzen Moduls, versehen Sie die erste Zeile mit der
   Direktive "(*$P-*)", die letzte vor dem END mit "(*$P+*)".

* Erzeugen einer Initialisierungsliste

 Der Linker erzeugt nun optional eine Datei, die die Module in der Reihenfolge
 auflistet, in der sie initialisiert werden. Dazu ist beim MM2Link-Aufruf
 die Option "-I" zu verwenden. Es wird dann eine Datei mit dem Namen
 des gelinkten Programms und der Endung "M2I" erzeugt.

* Erzeugen eines DATA-Segments

 Um z.B. CPX-Module erzeugen zu kînnen, muû das gelinkte Programm ein sog.
 DATA-Segment enthalten. Es ist ein Block von Daten, die Ñhnlich dem Code
 (TEXT-Segment) sind. Der Unterschied ist, daû die Daten im TEXT-Segment
 zur Laufzeit des Programms nicht verÑndert werden dÅrfen, wÑhrend das mit
 den Daten im DATA-Segment sehr wohl passieren darf. Wer also z.B. selbst-
 modifizierenden Code erzeugen mîchte, darf die nicht mit dem vom Compiler
 erzeugten Code im Speicher tun sondern muû den Code in einem anderen
 Speicherbereich (entw. in einer Variable (BSS-Segment), im allozierten
 Speicher oder im DATA-Segment) erzeugen. Umgekehrt kann man das DATa-Segment
 auch als einen fest reservierten Variablenbereich ansehen, der mit Werten
 vorbelegt werden kann.
 
 Um dies zu erreichen, gibt es 2 Mîglichkeiten:
 a) Es soll lediglich ein Bereich im DATa-Segment reserviert werden (reicht
 in der Regel fÅr CPX-Module aus). Dann muû dem Linker lediglich die Grîûe
 des Bereichs in Bytes mitgeteilt werden und er erzeugt ein entsprechend
 mit Null-Bytes gefÅlltes DATA-Segment.
 b) Das DATA-Segment soll mit bestimmten Werten vorbesetzt werden. Dazu
 ist eine Datei zu erzeugen, die diese Werte enthÑlt. Der Linker fÅgt dann
 genau diese Datei als DATA-Segment ins Programm ein.
 
 Dazu ist dem Linker die Option "-D" anzugeben, gefolgt (ohne Leerzeichen)
 von entweder (a) einer Zahl fÅr die Grîûe des DATAs oder einem Dateinamen,
 der als DATA einzufÅgen ist.
 Um die Option dem Linker zu Åbergeben, muû eine Batch-Datei erzeugt werden,
 die dann zum Linken gestartet wird (s.o.).
 
 Um im Programm auf das DATA-Segment zugreifen zu kînnen, muû der Zeiger aus
 der Base Page ermittelt werden. Beispiel:
    VAR bp: SysTypes.PtrBP; DATAStart: ADDRESS; DATALength: LONGCARD;
      PrgCtrl.GetBasePageAddr (bp);
      DATAStart:= bp^.p_dbase; DATALength:= bp^.p_dlen;
 
 Anmerkung: Konstanten, die der Modula-Compiler erzeugt, werden NICHT im
 DATA-Segment abgelegt!


10. Hinweise zum Make
---------------------

Zur besseren Kontrolle gibt das Make-Programm nun bei jeder zu Åbersetzenden
Datei an, aus welchem Grund sie Åbersetzt werden soll. Sie finden diese
Information in der Make-Datei, die im "Temp. Pfad" unter dem Name "MAKE.M2C"
abgelegt ist. Laden Sie diese Datei in den Editor, so sehen Sie dort am
Anfang jeder Zeile eine Include-Anweisung fÅr den Compiler ($I) gefolgt
vom Namen des zu Åbersetzenden Moduls. Dahinter steht dann nach "Out:" der
Pfad, auf dem der zugehîrige Code des Moduls gefunden wurde.
Am Ende der Zeile steht hinter "Reason:"...
 ˘ der Name des importierten Moduls, das ein jÅngeres Datum hat oder...
 ˘ "No Code", wenn das Modul noch nicht Åbersetzt wurde oder...
 ˘ "Modified", wenn die Quelldatei jÅnger als ihr Code ist, d.h. verÑndert
   wurde.


11. Erweiterungen in der Shell
------------------------------

Zwei neue Batch-Anweisungen POSTAMBLE1 und POSTAMBLE2 erlauben die Bestimmung
zweier Programmnamen incl. ihrer Parameter, die vor Verlassen der Shell
gestartet werden sollen. Damit ist es nun mîglich, im Shell-Batch eine
RAM-Disk (z.B. die aus dem Buch "Scheibenkleister") einrichten und beim
Shell-Ende wieder freigeben zu lassen. Das hat den Vorteil, daû die RAM-Disk
nur wÑhrend der Entwicklungszeit in der Shell Speicher belegt.

Die Datei-Information wirkt auch bei Ordnern, allerdings wird die >LÑnge<
immer Null anzeigen, auch der Schreibschutz-Knopf bleibt unberÅcksichtigt.
Sinn macht dies nur ab TOS 1.4, wo auf diese Weise zumindest der Name des
Ordners verÑndert werden kann.

Der Zeichensatz fÅr TextWindows und WindowLists (also alle Fenster mit
Textausgabe) kann bei der groûen Shell (MM2SHELL) gewÑhlt werden. Dazu
enthalten die Shell-Parameter neue Eingabefelder fÅr den Namen und die
Grîûe (in Punkt) des Zeichensatzes.
Gibt man keinen Namen an, wird der aktuelle Systemzeichensatz eingesetzt.
Der Name des normalen Systemfonts ist "6x6 system font". Seine Grîûen sind
8, 9, und 10. Andere Fonts werden nur verfÅgbar, wenn ein GDOS mit Fonts
geladen ist (im AUTO-Ordner). Wird ein anderer Name eingetragen, muû der
exakt mit Groû-/Kleinschreibung eingegeben werden, andernfalls kommt eine
Fehlermeldung.
Die Namen der vorhandenen Fonts kînnen ggf. mit dem Programm TextDemo.M
(DEMO-Ordner) ermittelt werden. Startet man es, zeigt es mit jedem
Tastendruck einen der vorhandenen Fonts an. Die Grîûen mÅssen ggf.
ausprobiert werden, sie rangieren in der Regel zw. 5 und 20.


12. MM2CLink - Der Linker fÅr Turbo-C & Pure-C
----------------------------------------------

Das im neuen MM2-Handbuch auf Seite 1-15 beschriebene MM2CLink-Paket ist
nun auf diesen Disketten enthalten. Es befindet sich in Form von zwei
selbstentpackenden Archiven MM2CL1.TOS und MM2CL2.TOS auf den MM2-Disketten.
Zum Ausprobieren muû man diese Dateien in das Verzeichnis der MM2-Shell
kopieren und dann starten. Es wird dann im Verzeichnis der Shell ein Ordner
MM2CLink erzeugt. Weitere Dokumentation findet man dann im Ordner MM2CLINK.
Dank der komfortablen GEM-Einbindung sollte die Bedienung kein Problem sein.

WICHTIG: Sind alle Dateien entpackt, mÅssen noch ein paar Ordner angelegt
werden, weil sonst bei der öbersetzung der Module vom Modula-Compiller
immer eine Fehlermeldung erscheint! Innerhalb des Ordners MM2CLINK befinden
sich die Ordner PC und TC. In PC mÅssen Sie die Ordner DEF, IMP und IMP.881
erzeugen, in TC die Ordner DEF und IMP.

O-Ton Autor Michael Seyfried:

  Bis jetzt konnte ich alle meine C-Sourcen und Objektcodes uneingeschrÑnkt
  in MM2-Module konvertieren. Darunter sind auch die Geiû-Bibliothek und das
  Deduktionssystem Otter 2.0.

  Dank Thomas Tempelmann kann man die eingebundenen C-Funktionen aus MM2-
  Programmen direkt aufrufen. Dazu wurde der TC-ParameterÅbergabemechanismus
  im neuen MM2-Compiler 4.0 implementiert.

  Ab der Version 2.0 kînnen mit MM2CLink erzeugte Implementationen uneinge-
  schrÑnkt gelinkt werden.

Das MM2CLink-Paket ist nun Shareware. Wenn Sie es einsetzen, sollten Sie
dafÅr 50 DM an den Autor zahlen. Damit macht sich die von ihm investierte
Arbeit zwar lÑngst nicht bezahlt, aber genau deswegen wÑre es nur fair,
ihn dafÅr wenigstens ein wenig zu belohnen. Und vielleicht hat er ja auch
noch eine verbesserte Version fÅr Sie...

Seine Adresse:

Michael Seyfried
Unterer Mauergarten 22
6520 Worms 24
Tel: 06241/54671
Bankverbindung: Sparkasse Worms BLZ 553 500 10 KNr: 580 630


13. Die aktuellen Nummern der MAUS-Mailboxen
--------------------------------------------

Nr KÅrzel   Name                 Nummer
-- --- ------------------------- -------------------
41 OTR MAUS MAUS On Tour         [nicht îffentlich]
92 K0  MAUS Usenet-Gateway       [nicht îffentlich]
52 A2W MAUS Wien-2               0043-1-4703022
51 A-W MAUS Wien/ôsterreich      0043-1-7984204
88 A-L MAUS Linz - ôsterreich    0043-732-315099
69 W   MAUS Wuppertal            0202-7387524
56 ME  QUARK Ratingen            02102-475669
80 KR2 MAUS Krefeld2             02151-307007
34 KR  MAUS Krefeld              [nicht îffentlich]
19 RS  MAUS Remscheid            02191-40828
11 K2  MAUS Kîln-Porz            02203-696379
 8 K   MAUS Kîln                 0221-1390008
74 SU  MAUS Rheinbach/Rhein-Sieg 02226-12326
65 BM  MAUS HÅrth/Erftkreis      02233-65194
 4 BN  MAUS Bonn                 0228-213230
82 HAL MAUS Halle                [nicht îffentlich]
39 UN  MAUS Unna                 02303-63102
68 UN2 MAUS Unna 2               02303-66232
17 DO  MAUS Dortmund             0231-125050
73 DO2 MAUS Dortmund 2           0231-617299
25 MK  MAUS Iserlohn             02371-14490
26 AC2 MAUS Aachen-2             0241-54080
33 AC3 MAUS Aachen-3             0241-54540
 2 AC  MAUS Aachen               0241-902002
 9 WAF MAUS Drensteinfurt        [nicht îffentlich]
24 MS3 MAUS MÅnster 3            0251-260324
 1 MS  MAUS MÅnster              [nicht îffentlich]
55 MS2 MAUS MÅnster 2            0251-77262
31 ST  MAUS Emsdetten/Steinfurt  02572-88881
63 DU2 MAUS Moers/Duisburg 2     02841-55275
37 DU  MAUS Moers/Duisburg       02841-953182
23 B   MAUS Berlin               030-6246510
70 B2  QUARK Berlin              030-7519443
86 L   QUARK Leipzig             034298-38577
81 CB  QUARK Cottbus             0355-539156
36 HRO MAUS Hansestadt Rostock   0381-696350
79 SN  MAUS Schwerin/Meckl.      0385-715917
14 HH  MAUS Hansestadt Hamburg   040-5381657
35 HH2 MAUS Hamburg 2            040-5478556
44 HH3 QUARK Hamburg             040-7209674
21 HB2 MAUS Hansestadt Bremen 2  0421-702569
 3 HB  MAUS Hansestadt Bremen    0421-86675
 6 KI  MAUS Kiel                 04322-6501
57 OL  MAUS Oldenburg            0441-691296
99 WHV MAUS Wilhelmshaven        04421-13435
72 HL  MAUS LÅbeck               0451-394722
32 FL  MAUS Flensburg            0461-13117
40 SL  MAUS Schleswig            04621-31820
83 NF  MAUS Nordfriesland        04671-2382
75 IZ  MAUS Itzehoe              04821-4691
98 H2  MAUS Hannover-2           [nicht îffentlich]
71 H   MAUS Hannover             0511-775260
27 BI  QUARK Bielefeld           0521-24222
66 PB2 MAUS Paderborn-2          05251-541578
42 PB  QUARK Paderborn           05251-71409
95 PB3 QUARK Paderborn 3         [nicht îffentlich]
89 PE2 MAUS FÅrstenau/Peine 2    [nicht îffentlich]
20 PE  MAUS FÅrstenau/Peine      05302-7313
85 WOB MAUS Wolfsburg-Reislingen 05363-40775
29 OS  MAUS OsnabrÅck            0541-597571
77 CLP MAUS Bunnen/Loeningen     05434-3797
87 Gô  MAUS Gîttingen            0551-7704464
45 WI  MAUS Wiesbaden            0611-721704
28 WI2 MAUS Wiesbaden 2          0611-9410986
62 HG  MAUS Bad Homburg          06172-36953
18 MTK MAUS Main-Taunus-Kreis    06196-81041
22 HD  MAUS Hemsbach/Heidelberg  06201-477275
15 LU  MAUS Ludwigshafen         0621-6296138
91 KL  MAUS Kaiserslautern       0631-17901
54 ZW  MAUS ZweibrÅcken          06332-16629
78 SB  MAUS SaarbrÅcken          0681-3904998
97 SB2 MAUS SaarbrÅcken-2        0681-9931317
10 F   MAUS Frankfurt            069-6313857
46 BB  MAUS Bîblingen            07031-275496
64 S3  MAUS Stuttgart 3          0711-2368367
38 S   MAUS Stuttgart            0711-5590396
43 S2  MAUS Stuttgart 2          0711-6364625
53 HN  QUARK Heilbronn           07131-507329
49 BB2 MAUS Weil/Bîblingen       07157-67371
76 KA2 MAUS Karlsruhe 2          [nicht îffentlich]
48 KA  MAUS Karlsruhe            0721-358887
59 BL  MAUS Albstadt/Balingen    07431-74069
90 KN  QUARK Konstanz            07531-72341
60 FR  QUARK Freiburg            0761-30032
67 OG  MAUS Offenburg            0781-38807
30 TBB MAUS Bad Mergentheim      07931-52567
12 MB  MAUS Bayrischzell         08023-332
84 RO  MAUS Rosenheim            08031-890496
16 LA  MAUS Landshut             0871-640321
58 M4  MAUS MÅnchen 4            089-1406018
 5 M   MAUS MÅnchen              089-6886705
96 M2  MAUS MÅnchen 2            089-983120
50 N   MAUS NÅrnberg             0911-405167
47 Fö  MAUS FÅrth                0911-7530280
61 WUN MAUS Wunsiedel            09232-70251
 7 Wö  MAUS WÅrzburg             0931-280269
13 R   MAUS Regensburg           0941-448518

Alle Boxen kînnen mit einem Modem mit 1200 oder 2400 Baud erreicht werden,
viele sogar mit 9600, 14400 oder 19200 Baud.

Wenn Sie von einer anderen Box als der MAUS M (Nr. 5) eine persînliche
Nachricht Thomas Tempelmann schicken wollen, kînnen Sie das nur, wenn
Sie dort einen Beitrag (ca. 30-50 DM jÑhrlich) bezahlt haben.
Wenn Sie wegen einer Frage dennoch nicht in der MAUS M anrufen wollen,
schicken Sie Ihre Abfrage in der Box Ihrer Wahl in der "Gruppe" MM2-FRAGEN
statt eine persînliche Nachricht zu senden.


14. Korrekturen zum Handbuch
----------------------------

* Seite 3-27/30: Die SYSTEM-Funktionen SHIFT/ROTATE haben keinen VAR-Parameter
  sondern liefern den verÑnderten Wert als Funktionsergebnis.

* Seite 3-32: In der untersten Zeile muû "GEMBase" statt "AESBase und "VDIBase"
  stehen.


15. Weiterer Support & Vertrieb
-------------------------------

Das Copyright liegt seit Herbst '93 nicht mehr exclusiv bei Application
Systems Heidelberg. Bei Fragen, Updates und NeukÑufen wenden Sie sich
bitte an:

Thomas Tempelmann
Schusterwolfstr. 13
D-81241 MÅnchen
Tel. (089) 8347394
FAX  (089) 8206981

(Sollte die Adr. nicht mehr stimmen, wenden Sie sich an ASH: 06221 302210)

Sie kînnen weiterhin jederzeit Updates des Systems erhalten.
Schicken Sie dazu wie gewohnt Ihre vier Original-Disketten (oder Kopien
davon) an die neue Adresse und legen Sie 30(!) DM in bar oder als Scheck
sowie einen adressierten RÅckumschlag bei.

Bevor Sie sich schriftlich wegen einer Neubestellung oder wegen Fragen an
mich wenden, kontaktieren Sie mich bitte zuerst telefonisch oder per FAX,
denn auf diese Weise erhalten Sie viel eher eine Antwort!


         Und nun viel Erfolg mit Ihrem Megamax Modula-2!

                          Die Autoren

                       Manuel Chakravarty
                         JÅrgen MÅller
                       Thomas Tempelmann
