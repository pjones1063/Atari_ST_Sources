short instructions

1. create the directories crystal\ and toolbox\ (on hard disk), e.g.
   as subdirectories to your modula directory

2. copy the "Modula-C" sources from ...\src\crystal\ to the above
   directory crystal\, from ...\src\toolbox\ to the above directory
   toolbox\

3. copy the C-preprocessor cpp from ...\bin\cpp\ and the beautifier
   x2d1 from ...\bin\x2d1\ to a directory where they can be found
   by your prefered shell

4. copy the file ...\include\crystal.m2h to a directory of your choice

5. fit the shell script c.mup from ...\bin\mupfel\ to your own
   environment. Explanation:

   sample call:

   c aes.mod HM2


   contents of c.mup:

   echo cpp $1 fÅr $2...
   cpp $1 -D$2 -P -imacros C:\USR\INCLUDE\CRYSTAL.M2H > temp
   x2d1 <temp >$1
   rm temp

   at this example aes.mod is the name of the source, HM2 is an
   abbreviation for a certain compiler, s. "Liste der Modula-
   Compiler" in crystal.tex

   echo prints the arguments of c.mup (at this example:
   "cpp aes.mod fÅr HM2..."), that means $1 is a variable
   for the source, $2 a variable for the compiler
   (for command.com %1and %2).
   cpp is the C-preprocessor.
   The option -D predefines the target system as a preprocessor
   constant,
   the option -P suppresses confusing comments within the
   output of the preprocessor,
   the option -imacros loads an include file at the calling
   level of the preprocessor. The path of the file crystal.m2h
   has to be fitted.
   The preprocessor writes its output to the temporary file
   named temp. x2d1 reads from temp, closing each line with
   cr lf, removing multiple empty lines and writes the result
   to $1.
   Finally temp is deleted.

6. fit the shell script c_all from ...\bin\mupfel\ to your
   environment

7. copy the shell scripts c and c_all to a directory where
   they can be found by your prefered shell

8. start your shell and change directory to that one where
   crystal\ and toolbox\ exist as subdirectories

9. call c_all with the target system as argument

10. make the above directories crystal\ and toolbox\ known
    to your modula system (perhaps copy all files to the
    "work" directory of your modula system)

11. read the patch instructions in ...\compiler\...,
    esp. for LPRM2

12. start your modula system and compile the files from
    toolbox\ and crystal\ by paying attention to the module
    hierarchy (according to your compiler there are prepared
    "make"-files in ...\compiler\...)

13. try to compile, link and test the module Hello.M2 from
    ...\test\hello\

Good luck!