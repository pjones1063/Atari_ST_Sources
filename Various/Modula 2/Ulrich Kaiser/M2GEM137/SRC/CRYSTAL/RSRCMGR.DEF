DEFINITION MODULE RsrcMgr;

(*
AES Resource Manager.

UK __DATE__ __TIME__
*)

(*DEF_SWITCHES*)

FROM PORTAB IMPORT ANYPOINTER;

IMPORT AES;

(* [R]e[s]ou[rc]e Manager: [Load] Resource, AES(110) ***********************)

TYPE RsrcLoadProc = PROCEDURE(ARRAY OF CHAR): BOOLEAN;

PROCEDURE RsrcLoad(Name: ARRAY OF CHAR): BOOLEAN;

(* [R]e[s]ou[rc]e Manager: [Free] Resource Memory, AES(111) ****************)

TYPE RsrcFreeProc = PROCEDURE();

PROCEDURE RsrcFree;

(* [R]e[s]ou[rc]e Manager: [G]et Resource [Addr]ess, AES(112) **************)

TYPE ResourceTypes = (RTree,
                      RObject,
                      RTEdInfo,
                      RIconBlk,
                      RBitBlk,
                      RString,
                      RImageData,
                      RObSpec,
                      RTEPText,
                      RTEPTmplt,
                      RTEPValid,
                      RIBPMask,
                      RIBPData,
                      RIBPText,
                      RBIPData,
                      RFrStr,     (* free string    *)
                      RFrImg);    (* free bit block *)

     TreeIndex       = AES.TreeIndex;
     StringIndex     = TreeIndex;
     FreeStringIndex = TreeIndex;
     FreeImageIndex  = TreeIndex;

     TreePtr       = AES.TreePtr;              (* by RTree   *)
     StringPtr     = AES.StringPtr;            (* by RString *)
     FreeStringPtr = POINTER TO AES.StringPtr; (* by RFrStr  *)
     FreeImagePtr  = POINTER TO AES.BitBlkPtr; (* by RFrImg  *)

TYPE RsrcGAddrProc = PROCEDURE(ResourceTypes,TreeIndex,VAR ANYPOINTER): BOOLEAN;

VAR RsrcGAddr: RsrcGAddrProc;

(* [R]e[s]ou[rc]e Manager: [S]et Resource [Addr]ess, AES(113) **************)

TYPE RsrcSAddrProc = PROCEDURE(ResourceTypes,TreeIndex,ANYPOINTER): BOOLEAN;

VAR RsrcSAddr: RsrcSAddrProc;

(* [R]e[s]ou[rc]e Manager: [Fix] [Ob]ject, AES(114) ************************)

TYPE ObjectIndex = AES.ObjectIndex;

TYPE RsrcObFixProc = PROCEDURE(TreePtr,ObjectIndex);

VAR RsrcObFix: RsrcObFixProc;

(* [R]e[s]ou[rc]e Manager: [Fix] [R]aster [C]oordinates, AES(115) **********)

TYPE RsPtr = AES.RsPtr;

TYPE RsrcRCFixProc = PROCEDURE(RsPtr);

VAR RsrcRCFix: RsrcRCFixProc;

(***************************************************************************)

PROCEDURE AddRsrcLoad(LoadProc: RsrcLoadProc);

PROCEDURE AddRsrcFree(FreeProc: RsrcFreeProc);

VAR rsrcgaddr: RsrcGAddrProc;

VAR rsrcsaddr: RsrcSAddrProc;

VAR rsrcobfix: RsrcObFixProc;

VAR rsrcrcfix: RsrcRCFixProc;

END RsrcMgr.