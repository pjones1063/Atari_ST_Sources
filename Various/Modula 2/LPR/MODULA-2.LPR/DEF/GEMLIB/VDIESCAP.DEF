DEFINITION MODULE VDIEscapes;


FROM GEMVDIbase IMPORT PxyArrayType, FilmNameType, FilmIndexType;


(* escapes *)

PROCEDURE InquireCharCells (Handle: INTEGER;
                            VAR rows, colums: INTEGER);

(* inquire addressable character cells *)


PROCEDURE ExitAlphaMode (Handle: INTEGER);

(* Exit alpha mode *)


PROCEDURE EnterAlphaMode (Handle: INTEGER);

(* enter alpha mode *)


PROCEDURE CursorUp (Handle: INTEGER);

(* alpha cursor up *)


PROCEDURE CursorDown (Handle: INTEGER);

(* alpha cursor down *)


PROCEDURE CursorRight (Handle : INTEGER);

(* alpha cursor right *)


PROCEDURE CursorLeft (Handle: INTEGER);

(* alpha cursor left *)


PROCEDURE CursorHome (Handle: INTEGER);

(* home alpha cursor *)


PROCEDURE EraseToEOS (Handle: INTEGER);

(* erase to end of alpha screen *)


PROCEDURE EraseToEOL (Handle: INTEGER);

(* erase to end of alpha text line *)


PROCEDURE CursorAddress (Handle, row, column: INTEGER);

(* direct alpha cursor address *)


PROCEDURE OutputText (Handle: INTEGER; VAR string: ARRAY OF CHAR);

(* output cursor addressable alpha text *)


PROCEDURE ReverseVideoOn (Handle: INTEGER);

(* reverse video on *)


PROCEDURE ReverseVideoOff (Handle: INTEGER);

(* reverse video off *)


PROCEDURE InquireCursorAddress (Handle: INTEGER; VAR row, column: INTEGER);

(* inquire current alpha cursor address *)


PROCEDURE InquireTabletStatus (Handle: INTEGER): INTEGER;

(* inquire tablet status *)


PROCEDURE HardCopy (Handle: INTEGER);

(* hard copy *)


PROCEDURE DisplayCursor (Handle, x, y: INTEGER);

(* place graphic cursor at location *)


PROCEDURE RemoveCursor (Handle: INTEGER);

(* remove last graphic cursor *)


PROCEDURE FormAdvance (Handle: INTEGER);

(* form advance *)


PROCEDURE OutputWindow (Handle: INTEGER; xyArray: PxyArrayType);

(* output window *)


PROCEDURE ClearDisplayList (Handle: INTEGER);

(* clear display list *)


PROCEDURE OutputBitImageFile (Handle: INTEGER;
                              VAR FileName: ARRAY OF CHAR;
                                  aspect, scaling, numPts: INTEGER;
                              VAR xyArray: PxyArrayType);

(* output bit image file *)

(* noch nicht implementiert *)



PROCEDURE SelectPalette (Handle, palette: INTEGER): INTEGER;

(* select palette *)

(* noch nicht implementiert *)



PROCEDURE InquirePaletteFilms (Handle: INTEGER;
                               VAR filmNames: FilmNameType);

(* inquire palette film types *)

(* noch nicht implementiert *)



PROCEDURE InquirePaletteState (Handle: INTEGER;
                               VAR port, filmName, 
                                   lightness,interlace,planes: INTEGER;
                               VAR indexes: FilmIndexType);

(* inquire palette driver state *)

(* noch nicht implementiert *)



PROCEDURE SetPaletteState (Handle, port, filmNum,
                               lightness, interlace, planes: INTEGER;
                           VAR indexes: FilmIndexType);

(* set palette driver state *)


PROCEDURE SavePaletteState (Handle: INTEGER);

(* save palette driver state *)

(* noch nicht implementiert *)



PROCEDURE SuppressPaletteMessages (Handle: INTEGER);

(* suppress palette messages *)

(* noch nicht implementiert *)



PROCEDURE PaletteErrorInquire (Handle: INTEGER): INTEGER;

(* palette error inquire *)

(* noch nicht implementiert *)



PROCEDURE UpdateMetafileExtents (Handle, minX, minY, maxX, maxY: INTEGER);

(* update metafile extents *)


PROCEDURE WriteMetafile (Handle, numIntin: INTEGER;
                         VAR intIn: ARRAY OF INTEGER;
                             numPtsin: INTEGER;
                         VAR ptsIn: ARRAY OF INTEGER);

(* write metafile item *)

(* noch nicht implementiert *)



PROCEDURE ChangeFileName (Handle: INTEGER; VAR fileName: ARRAY OF CHAR);

(* change gem vdi filename *)

(* noch nicht implementiert *)



END VDIEscapes.
