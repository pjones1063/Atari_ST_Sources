          RELEASE NOTES FOR M2/68 VERSION 1.0
          
          INTRODUCTION:
          
          The ana-systems Modula-2 Development System consists of the 
          M2/68 Compiler, Linker, libraries, and Development Shell.  
          The libraries and the Shell were written in Modula-2 and 
          compiled with the ana-systems M2/68 Compiler.
          
          PACKING LIST:
          
          You should find the following files in your package:
          
              ana_m2_1.arc:
                    m2sh.prg       Development Shell
                    m2sh.rsc       English resource file for Shell
                    m2sh_g.rsc     German resource file
                    m2sh.cfg       configuration file for Shell
                    utility.prg    disk utilities program
                    utility.rsc    English resource file for utility.prg
                    util_g.rsc     German resource file
                    readme         read this first
                    release.doc    this document
                    info.doc       product registration form
                    version.doc    the current version
                    copyrigh.doc   copyright message
                    license.doc    your SHAREWARE license
                    ana_prof.doc   profile of ana-systems
                    m2_desc.doc    general description of the M2/68 product
                    sample.ord     product ordering samples
              ana_m2_2.arc:
                    m2.tos         M2/68 Compiler
              ana_m2_3.arc:
                    m2.lnk         M2/68 Linker
              ana_m2_4.arc:
                    def.arc        library Definition files
                    sym.arc        library .SYM files
                    obj.arc        library .OBJ files
              ana_m2_5.arc:
                    emacs.tos      public domain editor
                    emacs.rc       emacs key binding resource
                    emacs.hlp      command list
                    emacs.key      default key binding
                    
          All archives also contain Copyright, License, and Version
          documents.

          SYSTEM REQUIREMENTS AND RESTRICTIONS:
          
          The minimum hardware requirements to use the M2/68 system are 
          a 520ST with 2 disk drives (single or double sided) or a 
          1040ST with 1 double sided drive.  What this boils down to is 
          minimum 1 meg and a double sided drive, or 1/2 meg and 2 
          drives.  (See 'Configurations' below for recommended setups.)
          
          The M2/68 Compiler needs about 300K of RAM to compile a small 
          to medium sized program.  If you are using a 512K machine,
          this means you can run the Compiler from the Development 
          Shell but you probably can't use many desk accessories and 
          you  definitely can't use a RAM disk to speed things up.  If 
          you are in this category and the Compiler issues an 'out of 
          memory' message, you must reduce your memory consumption.  You
          can do this by either removing desk accessories (including the 
          control panel) and/or reducing the size of the module you are 
          compiling.  If you have a megabyte of memory you can create a 
          RAM disk and load the libraries into it to speed up 
          compilation and linking.
          
          CONFIGURATIONS:
          
          The following files must always be in the same directory:
               M2SH.PRG       UTILITY.PRG
               M2SH.RSC       UTILITY.RSC
               M2SH.CFG
               
          UTILITY.PRG provides a number of disk utilities which are
          accessible from within M2SH.PRG.  It does not, however, need
          to be present.  When it is missing, the menu selections in
          M2SH.PRG which represent the utility routines are simply
          disabled.
          
          If you have a favorite editor you should use that instead of 
          microEmacs.  We recommend TEMPUS by Creative Computer Design; 
          it is an excellent GEM editor which interfaces closely with 
          the Development Shell (see 'Editor Interface' below).
          
          Setup for 520ST (1/2 meg) with 2 single sided drives:
          
          The disk you will leave in drive A should contain the M2SH 
          and UTILITY files along with your editor and source file.  
          You should prepare Compiler and Linker disks for use in your
          second drive.  The Compiler disk should hold M2.TOS, and a
          subdirectory called something like M2LIB containing all the 
          .SYM files.  The Linker disk should hold M2LNK.TOS, and a
          subdirectory called something like M2LIB containing all the 
          .OBJ files.  With this setup, just before you call the Compiler 
          you must insert the Compiler disk and just before you call the 
          Linker you must insert the Linker disk (into drive B).  If you 
          are using this setup you can use the M2SH.CFG configuration file 
          as supplied with the possible exception of changing the editor
          name (see 'M2SH.CFG' below).
          
          Setup for 1040St (1 meg) with 1 double sided drive:
          
          You should prepare a double sided disk like the one for drive 
          A in the 520ST setup and add to it M2.TOS and M2LNK.TOS.
          You should also prepare a disk with the complete M2LIB
          subdirectory (all .SYM and .OBJ files).  Then, upon bootup 
          you should create a 200-300k RAM disk and load these two 
          subdirectories onto it.  If you are using this set up you 
          will need to adjust some of your M2SH.CFG configuration 
          parameters (see 'M2SH.CFG' below).
          
          Setup for 1040St (1 meg) with 2 drives:
          
          If this is your hardware configuration you have, essentially, 
          your choice of the two configurations given above.  If you 
          want to run the Compiler and Linker from drive B, and if that 
          drive is double sided, you should include on it M2.TOS and
          M2LNK.TOS, along with the full M2LIB subdirectory.  Note
          however that using a RAM disk will improve development speed.
          
          Setup for a system with a hard disk:
          
          You should create a MODULA_2 subdirectory and load the 
          executables and library subdirectory into it.  You may then 
          use the Shell locate facilities to install the various system 
          programs (see 'M2SH.CFG' below).  This is of course the
          recommended set both in terms of speed and convenience.
          
          NOTE: As stated, it is possible to run the whole system from
          one double sided disk on 1/2 meg or more.  You must be careful, 
          however, to leave room for the Compiler and Linker temporary 
          files on the disk.  The amount of room needed depends on the size 
          of the program you are building, and only experimentation will 
          determine the limits.  (If you are sure you won't need any of the
          disk utilities you might leave the UTILITY files off the disk).
          Also, if you have a 1 meg (or greater) machine, you might ex-
          periment more with ram disks to find the fastest and most
          convenient setup.
          
          M2SH.CFG:
          
          The M2SH.CFG file contains a number of parameters which you 
          may set from within the Shell.  Choosing 'Save Config' while 
          in the Shell will alter M2SH.CFG to conform to the current 
          settings.  Each time the Shell is run it looks for this file.  
          If it is found, the Shell sets its parameters according to 
          the file.  The parameters include location of the Editor, 
          Compiler, and Linker among other things.  Most of the 
          parameters are explained in the Shell help screens (press 
          HELP when in the Shell).  
          
          Of interest here are the environment variable strings.  
          These are system variables which the Compiler and Linker use 
          to locate the Modula-2 libraries and to determine where to 
          place temporary files.  The M2TMP variable tells the Compiler
          and Linker where to put their temporary files (which are
          deleted before the compile or link is finished).  The default
          is the current directory.  The SYM and OBJ variables tell the
          Compiler and Linker respectively where to find the libraries.
          The default is, again, the current directory.  As supplied to
          you, the variables (which you can view and change by selecting 
          'Env Vars' from within the Shell) look like this: 
          
             SYM@B:\M2LIB\
             OBJ@B:\M2LIB\
             M2TMP=A:\
          
          The format of these strings is CRITICAL.  What they mean is
          this:    the .SYM and .OBJ files are located in B:\M2LIB\ .
          If you have merged all the .SYM and .OBJ files into one 
          directory (as recommended for certain setups) and placed the 
          directory on RAM drive D, you will need to change the 'B:\' 
          to 'D:\' in both places.  The M2TMP variable simply says
          that temperary files will be place on the root of drive B.
          
          If your libraries are in a deeper subdirectory, you might have
          some thing like   SYM@B:\LIB\M2LIB\ .
          If you want to put the Atari GEM libraries (aesvdi, aescalls, 
          vdicalls) in a separate subdirectory you might have something
          like  SYM@B:\LIB\M2LIB\@B:\LIB\M2GEMLIB\ .  Notice that there
          are essentially two paths specified here, each starting with
          the '@' symbol.

          LANGUAGE:
          
          The Shell loads the English version resource file by default.
          If you wish to use the German version simply remove or re-
          name the English version and the German version will be
          loaded.
          
          EDITOR INTERFACE:
          
          The Shell provides two features which an editor can take 
          advantage of to improve the ease and speed of development. 
          The first is that if the editor returns an integer value of 1 
          to the Shell when it terminates, the Shell will automatically 
          invoke the Compiler, passing it the name of the file that was 
          being edited.  (If you are using TEMPUS you would Quit and 
          Save via Alt-(keypad)1.)  The second feature is that if 
          syntax errors occur during compilation and you choose to 
          return to the editor (at the prompt), the editor will be 
          invoked with the names of the source file and the error file 
          (.lst) on the command line.  If the editor is able to open 
          multiple windows in response to commandline arguments you 
          will get both files for easy error correction.  (TEMPUS will 
          take advantage of this.)  The supplied version of microEmacs
          will open only the source file, but you may open the error
          listing by pressing (shift)F9 (see emacs.rc).
          
          LIBRARIES:
          
          The ana-systems Modula-2 libraries and the Atari specific
          libraries are supplied to you combined.  The Atari specific
          libraries are:
                            aesvdi.___
                            aescalls.___
                            vdicalls.___
                            gemdos.___
                            xbios.___
                            
          The Atari specific libraries have not yet been completed.
          The DEFINITION modules for all libraries are also supplied.
          Use these as a reference to the libraries.  In the case of 
          the Atari libraries you will probably need reference manuals 
          also (such as the excellent Compute's Technical Reference Guides). 
          YOU MUST NOT COMPILE THESE DEFINITION MODULES AND THEN USE THE 
          RESULTING .SYM FILES BECAUSE THE NEW TIME AND DATE STAMPS WILL 
          PREVENT LINKAGE WITH THE CORRESPONDING .OBJ FILES.
          
          NOTES ON USING THE SYSTEM:
          
          If your system doesn't have a built in real time clock you 
          should set the Control Panel clock on boot up in order to 
          maintain the file date and time stamps.
          
          You may obtain help on any menu item by holding the ALT key 
          while you click on the menu item.
          
          Items in the File and Execute menus may be selected via 
          keyboard commands in addition to mouse clicks.  They all use 
          control sequences -- you hold down the Control key while 
          pressing the indicated character key (upper or lower case).
          
          You can't really get into trouble by just experimentally 
          selecting menu items -- there is always a Cancel or Exit 
          button which you can use before anything actually happens
          (except in the case of 'Save config' -- no chance to cancel
          is given here).
          
          The public domain editor microEmacs is included for your
          convenience.  See the emacs.rc, .hlp, and .key files to
          get started.  Various versions of microEmacs, along with
          full documentation, are available on most bulletin boards.
          
          The Compiler and Linker may be run from a command line
          environment such as Micro C Shell.  Take a look at M2SH.CFG
          to see how you should set environment variables.  Full
          documentation on use of the command line (including option
          switches) is found in the Atari M2/68 User's Guide.
          
          When de-archiving with only single sided drives, put arc.ttp
          on one drive and the arc file on the other.  This will leave
          the necessary room.

