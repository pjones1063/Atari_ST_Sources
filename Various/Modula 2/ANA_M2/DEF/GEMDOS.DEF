DEFINITION MODULE GEMDOS;

(*
 *  Copyright (c) 1987,1988,1989 by
 *  ana-systems, Foster City, California.
 *  All Rights Reserved.
 *
 *  This software is furnished under a license and may be used and copied
 *  only  in accordance with  the  terms  of  such  license and  with the
 *  inclusion of the above copyright notice.  This software or  any other
 *  copies thereof may not be provided or otherwise made available to any
 *  other  person.   No title to and ownership of the  software is  herby
 *  transferred.
 *
 *  The information in this software is  subject to change without notice
 *  and  should  not be construed as a commitment by ana-systems.   No
 *  warranty is implied or expressed.
 *)

FROM SYSTEM IMPORT ADDRESS,CODE,REGISTER;

EXPORT QUALIFIED Pterm,Malloc,Mfree,Fopen,Fcreate,Fdelete,Fclose,
                 Fseek,Fread,Fwrite,Dcreate,Ddelete,Frename,
                 Pterm0,Cconin,Cconout,Dgetdrv,Dsetdrv,Dgetpath,
                 Dsetpath,Pexec,DFree,Cprnos,Cprnout,
                 Fsfirst,Fsnext,Fsetdta,Fgetdta,Super,
                 isatty,errno,ciPermissionNum,
                 ciORDONLY,ciOWRONLY,ciORDWR,ciONDELAY,ciOAPPEND,
                 ciOCREAT, ciOTRUNC, ciEXCLU,ciOCONTIG,ciSTDIN,
                 ciSTDOUT, ciSTDERR, ARGSTRING_OP;

CONST

 (* defines for ATARI calls *)
 (* open modes *)
  ciORDONLY =    0B;    (* open only *)
  ciOWRONLY =    1B;    (* open only *)
  ciORDWR   =    2B;
  ciONDELAY =    4B;
  ciOAPPEND =   10B;
  ciOCREAT  = 400B;     (* open only *)
  ciOTRUNC  = 1000B;    (* open only *)
  ciEXCLU   = 2000B;    (* open only *)
  ciOCONTIG = 4000B;    (* open only *)

  ciPermissionNum = 00H;

  ciSTDIN  = 0;                 (* For Gemdos Standard Input *)
  ciSTDOUT = 1;                 (* For Gemdos Standard Output *)
  ciSTDERR = 1;                 (* For Gemdos Standard error *)


VAR errno:INTEGER;

PROCEDURE isatty(lun:CARDINAL):BOOLEAN;

PROCEDURE Fclose(fd:CARDINAL):INTEGER;

PROCEDURE Fcreate(path:ADDRESS; attr:INTEGER):INTEGER;

PROCEDURE Pterm(Code:INTEGER);

PROCEDURE Mfree(addr:ADDRESS):INTEGER;

PROCEDURE Fseek(offset,fd,mode:INTEGER):INTEGER;

PROCEDURE Malloc(count:CARDINAL):ADDRESS;

PROCEDURE Dcreate(path:ADDRESS):INTEGER;

PROCEDURE Fwrite(fd,count:INTEGER; buffer:ADDRESS):INTEGER;

PROCEDURE Fread(fd,count:INTEGER; buffer:ADDRESS):INTEGER;

PROCEDURE Fopen(path:ADDRESS; attr:INTEGER):INTEGER;

PROCEDURE Fdelete(path:ADDRESS):INTEGER;

PROCEDURE Frename(oldpath,newpath:ADDRESS):INTEGER;

PROCEDURE Ddelete(path:ADDRESS):INTEGER;

PROCEDURE Pterm0;

PROCEDURE Cconin():INTEGER;

PROCEDURE Cconout(ch:CHAR);

PROCEDURE Dgetdrv():INTEGER;

PROCEDURE Dsetdrv(drive:INTEGER):INTEGER;

PROCEDURE Dgetpath(buff:ADDRESS; drive:INTEGER):INTEGER;

PROCEDURE Dsetpath(path:ADDRESS):INTEGER;

PROCEDURE Pexec(mode:INTEGER; path,cmdln,env:ADDRESS):INTEGER;

PROCEDURE DFree(buf:ADDRESS; drive:INTEGER);

PROCEDURE Cprnos():INTEGER;

PROCEDURE Cprnout(ch:CHAR):INTEGER;

PROCEDURE Fsfirst(path:ADDRESS; attr:INTEGER):INTEGER;

PROCEDURE Fsnext():INTEGER;

PROCEDURE Fsetdta(buffer:ADDRESS);

PROCEDURE Fgetdta():ADDRESS;

PROCEDURE Super(stack:INTEGER):INTEGER;

PROCEDURE ARGSTRING_OP(ac:CARDINAL):ADDRESS;

END GEMDOS.
