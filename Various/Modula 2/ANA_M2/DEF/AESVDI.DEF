DEFINITION MODULE AESVDI;

(*
 *  This module provides the stubs for AES and VDI calls.  It
 *  also sets up various arrays and gives GEM their addresses
 *  via the ApplInit call.  These arrays are used by the
 *  application, via AES and VDI calls, to communiate with
 *  GEM.
 *
 *  Note: GEM expects 2 byte INTEGERs, but M2/68 uses 4 byte
 *        INTEGERs.  Thus, GEM arrays of INTEGER are written
 *        here in terms of SHORTWORD, and all GEM interface
 *        library calls must do conversions between the
 *        application's INTEGERs and the GEM array's SHORTWORDs.
 *
 *
 *  Copyright (c) 1987,1988,1989 by
 *  ana-systems, Foster City, California.
 *  All Rights Reserved.
 *
 *  This software is furnished under a license and may be used and copied
 *  only  in accordance with  the  terms  of  such  license and  with the
 *  inclusion of the above copyright notice.  This software or  any other
 *  copies thereof may not be provided or otherwise made available to any
 *  other  person.   No title to and ownership of the  software is  herby
 *  transferred.
 *
 *  The information in this software is  subject to change without notice
 *  and  should  not be construed as a commitment by ana-systems.   No
 *  warranty is implied or expressed.
 *)
 
FROM SYSTEM IMPORT ADDRESS,SHORTWORD;

EXPORT QUALIFIED AES,VDI,contrl,global,intin,ptsin,intout,ptsout,addrin,
                 addrout,ApplInit;
TYPE 
   ParamArr128 = ARRAY [0..127] OF SHORTWORD;
   ParamArr15  = ARRAY [0..14]  OF SHORTWORD;
   ParamArr12  = ARRAY [0..11]  OF SHORTWORD;
   ParamArr2   = ARRAY [0..1]   OF ADDRESS;
VAR
   aespb   : ARRAY [0..5] OF ADDRESS;
   vdipb   : ARRAY [0..4] OF ADDRESS; 
   contrl  : ParamArr12;
   global  : ParamArr15;
   intin   : ParamArr128;
   intout  : ParamArr128;
   ptsin   : ParamArr128;
   ptsout  : ParamArr128;
   addrin  : ParamArr2;
   addrout : ADDRESS;
   
PROCEDURE AES;    (* Call AES trap 2. *)
PROCEDURE VDI;    (* Call VDI trap 2. *)
PROCEDURE ApplInit():INTEGER;
(*
 *  Returns apid number which must be >=0.
 *)

END AESVDI.
