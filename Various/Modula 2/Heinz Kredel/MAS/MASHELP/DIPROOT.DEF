
(* DIP Polynomial Ideal Real Root System Definition Module. *)

DEFINITION MODULE DIPROOT;


FROM MASSTOR IMPORT LIST;


PROCEDURE DIGBSI(P,T,A: LIST): LIST; 
(*Distributive polynomial system algebraic number G basis sign.
P is a goebner basis in inverse lexicographical term order
in r variables (non empty), with all neccessary refinements.
T=(t1,... ,ti) i le r, where tj=(vj,ij,pj) j=1,... ,i
and v is the character list for the j-th variable,
ij is a isolating intervall for a real root of the
univariate polynomial pjl.
A is a distributive rational polynomial depending
maximal on one variable.
s is the sign of A as element of an algebraic extension
of Q determined by P. *)


PROCEDURE DIITNT(T: LIST): LIST; 
(*Distributive polynomial system intervall tupel from norm tupel.
T is a refined normalized tupel of a zero set
with a final goebner basis of dimension 0.
TP is a list of intervall tupels for T. *)


PROCEDURE DIITWR(TP,EPS: LIST); 
(*Distributive polynomial system intervall tupels write.
TP is a list of intervall tupels of a zero set.
EPS is LOG10 of the desired precision. *)


PROCEDURE DINTWR(TP,EPS: LIST); 
(*Distributive polynomial system normalized tupels write.
TP is a list of normalized tupels of a zero set.
EPS is log10 of the desired precision. *)



PROCEDURE DIROWR(V,P,EPS: LIST); 
(*Distributive polynomial system real root write.
V is a variable list. P is a list (e,p). EPS is the desired
precision. e is the multiplicity of the root, and p is an
irreducible polynomial. *)


PROCEDURE GBZSET(V,PP,EPS: LIST); 
(*Groebner base real zero set of zero dimensional ideal. 
V is a variable list. PP is a list of distributive rational polynomials,
PP is a Groebner base. EPS is is LOG10 of the desired precision. *)


PROCEDURE RIRWRT(R,EPS: LIST); 
(*Rational intervall refinement write.
R=(v,i,p) where v is the variable character string,
i is a rational intervall containing only
one real root of the polynomial p.
EPS is the presicion epsilon. *)


END DIPROOT.

