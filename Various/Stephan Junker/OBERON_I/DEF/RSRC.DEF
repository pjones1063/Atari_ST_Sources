DEFINITION Rsrc; (* SJ *)


(* Rsrc not only contains the TOS routines for resource files but also
 * routines for using resource files included in the code. This is
 * necessary for accessories.
 * All resource files loaded will be disposed automatically on exit.
 *)

CONST
  RTREE*          = 0;
  ROBJECT*        = 1;
  RTEDINFO*       = 2;
  RICONBLK*       = 3;
  RBITBLK*        = 4;
  RSTRING*        = 5;
  RIMGDATA*       = 6;
  ROBJSPEC*       = 7;
  RTEPTEXT*       = 8;
  RTEPTMPLT*      = 9;
  RTEPVALID*      = 10;
  RIBPMASK*       = 11;
  RIBPDATA*       = 12;
  RIBPTEXT*       = 13;
  RBIPDATA*       = 14;
  RFRSTR*         = 15;
  RFRIMG*         = 16;


TYPE
  header* = RECORD
              Version*     : INTEGER;
              ObjectPos*   : INTEGER;
              TedinfoPos*  : INTEGER;
              IconblkPos*  : INTEGER;
              BitblkPos*   : INTEGER;
              FreeStrPos*  : INTEGER;
              StringPos*   : INTEGER;
              ImagePos*    : INTEGER;
              FreeImgPos*  : INTEGER;
              TreeTblPos*  : INTEGER;
              NumObjects*  : INTEGER;
              NumTrees*    : INTEGER;
              NumTedinfos* : INTEGER;
              NumIcons*    : INTEGER;
              NumBitblks*  : INTEGER;
              NumStrings*  : INTEGER;
              NumImages*   : INTEGER;
              RscSize*     : INTEGER;
            END(*RECORD*);


PROCEDURE Load* (Name : ARRAY OF CHAR) : BOOLEAN;


PROCEDURE Free* ();


PROCEDURE GetAddr* (Object : INTEGER) : LONGINT;


PROCEDURE ExtGetAddr* (Type : INTEGER; Object : INTEGER) : LONGINT;
(*
 * ExtGetAddr adds the parameter type to GetAddr. This enables the
 * getting of an address of certain object types. But a bug in AES
 * allows only trees and strings.
 *)

PROCEDURE SetAddr* (Object : INTEGER; Addr : LONGINT);


PROCEDURE Obfix* (Tree : LONGINT; Object : INTEGER);


PROCEDURE Init* (BaseAddr : LONGINT);

(* initializes an integrated resource file. BaseAddr is the address of
   the procedure containing the resource file :

   PROCEDURE Procedure;
    BEGIN
     SYSTEM.INLINE(...); (* the resource file *)
   END Procedure;
   ...
   Rsrc.Init(S.ADR(Procedure));
*)

PROCEDURE TreeAddr* (BaseAddr : LONGINT; Index : INTEGER) : LONGINT;

(* returns the tree address for an integrated resource file. Use it instead
   of GetAddr.
*)

END Rsrc.
