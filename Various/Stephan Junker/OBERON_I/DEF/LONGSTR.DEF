DEFINITION LongStr;

(*****************************************************************************)
(* M2-ISO-LongStr, STJ-Oberon-2-Version                                      *)
(* --------------------------------------------------------------------------*)
(* LONGREAL/string conversions                                               *)
(* --------------------------------------------------------------------------*)
(* 15-Okt-95, Holger Kleinschmidt                                            *)
(*****************************************************************************)

IMPORT ConvTypes;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

(* string formats *)
CONST
  strAllRight    = ConvTypes.strAllRight;
  strOutOfRange  = ConvTypes.strOutOfRange;
  strWrongFormat = ConvTypes.strWrongFormat;
  strEmpty       = ConvTypes.strEmpty;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

(* The string form of a signed fixed-point real number is:
      ["+" | "-"], decimal digit, {decimal digit}, [".", {decimal digit}]

   The string form of a signed floating-point real number is:
      signed fixed-point real number,
      "E" | "e" | "D" | "d", ["+" | "-"], decimal digit, {decimal digit}
                   ^     ^
                ---- O2 extension
 *)

PROCEDURE StrToReal ((* in / -- *)     str  : ARRAY OF CHAR;
                     (* -- /out *) VAR real : LONGREAL;
                     (* -- /out *) VAR res  : SHORTINT   );

(* Ignores leading spaces in <str>. If the subsequent characters in
   <str> are in the format of a signed real number, assigns a corresponding
   value to <real>.

   Assigns a value indicating the format of <str> to <res>:

   'strAllRight':    The remainder of <str> represents a complete signed
                     real number in the range of the type LONGREAL. <real>
                     contains its value.

   'strOutOfRange':  The remainder of <str> represents a complete signed
                     real number but its value is out of the range of the
                     type LONGREAL. <real> contains the maximum or minimum
                     value of the type LONGREAL according to the sign of
                     the number.

   'strWrongFormat': There are remaining characters in <str> but these are
                     not in the form of a complete signed real number. The
                     value of <real> is not defined.

   'strEmpty':       There are no remaining characters in <str>. The value
                     of <real> is not defined.
 *)


PROCEDURE RealToFloat ((* in / -- *)     real    : LONGREAL;
                       (* in / -- *)     sigFigs : INTEGER;
                       (* -- /out *) VAR str     : ARRAY OF CHAR );

(* Converts the value of <real> to floating-point string form, with
   <sigFigs> significant figures, and copies the possibly truncated
   result to <str>.

   A sign is included only for negative values.
   Exactly one significant digit is included in the whole number
   part.
   The signed exponent part is included only if the exponent value
   is not zero.
   If <sigFigs> is zero an implementation defined number of significant
   digits is included.
   The decimal point is not included if there are no significant
   digits in the fractional part.

   Examples:

   <real>       3923009    39.23009   0.0003923009
   <sigFigs>
   1               4E+6        4E+1           4E-4
   2             3.9E+6      3.9E+1         3.9E-4
   5          3.9230E+6   3.9230E+1      3.9230E-4
 *)


PROCEDURE RealToEng ((* in / -- *)     real    : LONGREAL;
                     (* in / -- *)     sigFigs : INTEGER;
                     (* -- /out *) VAR str     : ARRAY OF CHAR );

(* Behaves as "RealToFloat()", except that the number is scaled with
   one to three digits in the whole number part and with an exponent
   that is a multiple of three.

   Examples:

   <real>       3923009   39.23009   0.0003923009
   <sigFigs>
   1               4E+6         40         400E-6
   2             3.9E+6         39         390E-6
   5          3.9230E+6     39.230      392.30E-6
 *)


PROCEDURE RealToFixed ((* in / -- *)     real   : LONGREAL;
                       (* in / -- *)     places : INTEGER;
                       (* -- /out *) VAR str    : ARRAY OF CHAR );

(* Converts the value of <real> to fixed-point string form, rounded
   to the given <place> relative to the decimal point, and copies the
   possibly truncated result to <str>.

   A sign is included only for negative values.
   At least one digit is included in the whole number part.
   The decimal point is suppressed if <place> is less than zero.

   Examples:

   <real>        3923009   39.23009   0.0003923009
   <places>
   -5            3920000          0              0
   -2            3923010         40              0
   -1            3923009         39              0
    0           3923009.        39.             0.
    1          3923009.0       39.2            0.0
    4       3923009.0000    39.2301         0.0004
 *)


PROCEDURE RealToStr ((* in / -- *)     real : LONGREAL;
                     (* -- /out *) VAR str  : ARRAY OF CHAR );

(* Converts the value of <real> as "RealToFixed()" if the sign and
   magnitude can be shown within the capacity of <str>, or otherwise
   as "RealToFloat()", and copies the possibly truncated result to
   <str>. The number of places or significant digits depends on the
   capacity of <str>.
 *)

END LongStr.
