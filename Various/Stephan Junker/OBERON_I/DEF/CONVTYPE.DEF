DEFINITION ConvTypes;

(*****************************************************************************)
(* M2-ISO-ConvTypes, STJ-Oberon-2-Version                                    *)
(* --------------------------------------------------------------------------*)
(* Common types used in the string conversion modules.                       *)
(* --------------------------------------------------------------------------*)
(* 02-Sep-95, Holger Kleinschmidt                                            *)
(*****************************************************************************)

IMPORT SYSTEM;

CONST
  (* Classification of a string representation *)
  strAllRight = 0;
    (* The string format is correct for the corresponding conversion *)
  strOutOfRange = 1;
    (* The string is well-formed but the value cannot be represented *)
  strWrongFormat = 2;
    (* The string is in the wrong format for the conversion *)
  strEmpty = 3;
    (* The given string is empty (contains only spaces) *)


CONST
  (* Classification of the input to a finite state scanner *)
  padding = 0;
    (* A leading or padding character at this point in the scan - ignore it *)
  valid = 1;
    (* A valid character at this point in the scan - accept it *)
  invalid = 2;
    (* An invalid character at this point in the scan - reject it *)
  terminator = 3;
    (* A terminating character at this point in the scan (not part of token) *)

TYPE
  (* Type of lexical scanning control procedure (finite state scanner) *)
  ScanState =
    PROCEDURE(c:CHAR; VAR class:SHORTINT; VAR state:ARRAY OF SYSTEM.BYTE);

  (* Following ISO this should have been (recursive!):
   * PROCEDURE(c:CHAR; VAR class:SHORTINT; VAR state:ScanState);
   *)

END ConvTypes.

