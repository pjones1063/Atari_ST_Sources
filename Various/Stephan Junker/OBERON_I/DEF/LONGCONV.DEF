DEFINITION LongConv;

(*****************************************************************************)
(* M2-ISO-LongConv, STJ-Oberon-2-Version                                     *)
(* --------------------------------------------------------------------------*)
(* Low-level LONGREAL/string conversions                                     *)
(* --------------------------------------------------------------------------*)
(* 27-Okt-95, Holger Kleinschmidt                                            *)
(*****************************************************************************)

IMPORT S:=SYSTEM, ConvTypes;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

(* string formats *)
CONST
  strAllRight    = ConvTypes.strAllRight;
  strOutOfRange  = ConvTypes.strOutOfRange;
  strWrongFormat = ConvTypes.strWrongFormat;
  strEmpty       = ConvTypes.strEmpty;

(* input classes *)
CONST
  padding    = ConvTypes.padding;
  valid      = ConvTypes.valid;
  invalid    = ConvTypes.invalid;
  terminator = ConvTypes.terminator;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

PROCEDURE ScanReal ((* in / -- *)     inputCh   : CHAR;
                    (* -- /out *) VAR chClass   : SHORTINT;
                    (* -- /out *) VAR nextState : ARRAY OF S.BYTE );

(* Represents the start state of a finite state scanner for real numbers.
   Assigns class of input to <chClass> and a procedure representing
   the next state to <nextState>.

   state    | inputCh       | chClass    | nextState
   ---------+---------------+------------+----------
   ScanReal | space         | padding    | ScanReal
   ScanReal | sign          | valid      | RS
   ScanReal | decimal digit | valid      | P
   ScanReal | other         | invalid    | ScanReal
   ---------+---------------+------------+----------
   RS       | decimal digit | valid      | P
   RS       | other         | invalid    | RS
   ---------+---------------+------------+----------
   P        | decimal digit | valid      | P
   P        | "."           | valid      | F
   P        | "E"           | valid      | E
   P        | "e"           | valid      | E
   P        | "D"           | valid      | E        -- O2 extension
   P        | "d"           | valid      | E        -- O2 extension
   P        | other         | terminator | --
   ---------+---------------+------------+----------
   F        | decimal digit | valid      | F
   F        | "E"           | valid      | E
   F        | "e"           | valid      | E
   F        | "D"           | valid      | E        -- O2 extension
   F        | "d"           | valid      | E        -- O2 extension
   F        | other         | terminator | --
   ---------+---------------+------------+----------
   E        | sign          | valid      | SE
   E        | decimal digit | valid      | WE
   E        | other         | invalid    | E
   ---------+---------------+------------+----------
   SE       | decimal digit | valid      | WE
   SE       | other         | invalid    | SE
   ---------+---------------+------------+----------
   WE       | decimal digit | valid      | WE
   WE       | other         | terminator | --


   Example of usage:

     ...
     idx   := 0;
     state := RealConv.ScanReal;
     LOOP
       state(str[idx], class, state)
       CASE class OF
         RealConv.padding:  ...
        |RealConv.valid:    ...
        |RealConv.invalid,
         RealConv.terminator:
          EXIT;
       END;
       INC(idx);
     END;
     ...
*)


PROCEDURE FormatReal ((* in / -- *) str : ARRAY OF CHAR ): SHORTINT;

(* Returns the format of <str> for conversion to LONGREAL.
   Leading spaces are ignored.

   'strAllRight':    <str> represents a complete signed real number in the
                     range of the type LONGREAL.

   'strOutOfRange':  <str> represents a complete signed real number but its
                     value is out of the range of the type LONGREAL.

   'strWrongFormat': There are remaining characters in <str> but these are
                     not in the form of a complete signed real number.

   'strEmpty':       There are no remaining characters in <str>.
 *)


PROCEDURE ValueReal ((* in / -- *) str : ARRAY OF CHAR ): LONGREAL;

(* Returns the value corresponding to the real number string value <str>,
   if <str> is well-formed.
 *)


PROCEDURE LengthFloatReal ((* in / -- *) real    : LONGREAL;
                           (* in / -- *) sigFigs : INTEGER ): INTEGER;

(* Returns the number of characters in the floating-point string
   representation of <real> with <sigFigs> significant figures.
 *)


PROCEDURE LengthEngReal ((* in / -- *) real    : LONGREAL;
                         (* in / -- *) sigFigs : INTEGER ): INTEGER;

(* Returns the number of characters in the floating-point engineering
   string representation of <real> with <sigFigs> significant figures.
 *)


PROCEDURE LengthFixedReal ((* in / -- *) real  : LONGREAL;
                           (* in / -- *) place : INTEGER ): INTEGER;

(* Returns the number of characters in the fixed-point string
   representation of <real> rounded to the given <place> relative to the
   decimal point.
 *)

END LongConv.
