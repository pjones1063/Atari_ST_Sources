DEFINITION In;

(*****************************************************************************)
(* Oakwood-like In.                                                          *)
(* --------------------------------------------------------------------------*)
(* Simple, formatted input of characters, strings and numbers.               *)
(* --------------------------------------------------------------------------*)
(* 30-Okt-95, Holger Kleinschmidt                                            *)
(*****************************************************************************)

(* Basic character input is done through module IO. 'Char' uses 'IO.ReadChar',
   the other procedures use 'IO.ReadString'. Therefore every input operation,
   except 'Char', reads a complete line, which has to be terminated with CR
   right after the item to be read. Also there is no end-of-file condition.
   This is unlike the stream oriented ETH original, but is more suited
   for interactive input (in fact it's only suited for interactive input).

   'Open' only sets Done to TRUE.
   'Name' simply reads a sequence of characters.
   The syntax of the number input routines is somewhat relaxed.
   Beside these, the behaviour should conform to the Oakwood guidelines.
   For further information, please refer to OAKWOOD.TXT or have a look at
   the sources.
 *)

VAR
  Done- : BOOLEAN;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

PROCEDURE Open;

PROCEDURE Char ((* -- /out *) VAR ch : CHAR );

PROCEDURE String ((* -- /out *) VAR str : ARRAY OF CHAR );

PROCEDURE Name ((* -- /out *) VAR str : ARRAY OF CHAR );

PROCEDURE Int ((* -- /out *) VAR i : INTEGER );

PROCEDURE LongInt ((* - /out *) VAR li : LONGINT );

PROCEDURE Real ((* -- /out *) VAR r : REAL );

PROCEDURE LongReal ((* -- /out *) VAR lr : LONGREAL );

END In.
