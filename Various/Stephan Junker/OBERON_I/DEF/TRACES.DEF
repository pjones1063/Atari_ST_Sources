MODULE Traces;

(* Ausgabe von Traces
| Datum     Version Autor   Aktion
| -----     ------- -----   ------
| 14.05.94  1.00    Ra      Erste freigegebene Version
| 04.03.95  1.01    SJ      StrLn und Dump hinzugefÅgt
*)



PROCEDURE CR*  (* Ausgabe von CR *);

PROCEDURE I* (* Ausgabe einer Zahl *)
  (n   :  LONGINT             (* auszugebende Zahl *)
  );


PROCEDURE I1* (* Ausgabe einer Zahl mit ErlÑuterungstext *)
  ( t   :  ARRAY OF CHAR       (* ErlÑuterungstext *);
    n   :  LONGINT             (* auszugebende Zahl *)
  );


PROCEDURE I1cr* (* Ausgabe einer Zahl mit ErlÑuterungstext und CR *)
  ( t   :  ARRAY OF CHAR       (* ErlÑuterungstext *);
    n   :  LONGINT             (* auszugebende Zahl *)
  );

PROCEDURE XY* (* Ausgabe von 2 LongInt in Klammern *)
  ( k,l         :  LONGINT              (* auszugebende Zahlen *)
  );


PROCEDURE I2* (* Ausgabe von 2 LongInt mit ErlÑuterungstext *)
  ( t           :  ARRAY OF CHAR        (* ErlÑuterungstext *);
    k,l         :  LONGINT              (* auszugebende Zahlen *)
  );

PROCEDURE I2cr* (* Ausgabe von 2 LongInt mit ErlÑuterungstext und CR *)
  ( t           :  ARRAY OF CHAR        (* ErlÑuterungstext *);
    k,l         :  LONGINT              (* auszugebende Zahlen *)
  );


PROCEDURE I4* (* Ausgabe von 4 LongInt mit ErlÑuterungstext *)
  ( t           :  ARRAY OF CHAR        (* ErlÑuterungstext *);
    k,l,m,n     :  LONGINT              (* auszugebende Zahlen *)
  );


PROCEDURE I4cr* (* Ausgabe von 4 LongInt mit ErlÑuterungstext und CR *)
  ( t           :  ARRAY OF CHAR        (* ErlÑuterungstext *);
    k,l,m,n     :  LONGINT              (* auszugebende Zahlen *)
  );


PROCEDURE Str* (* Ausgabe eines Strings *)
  ( s           :  ARRAY OF CHAR        (* Auszugebender Text *));


PROCEDURE StrLn* (* Ausgabe eines Strings mit LineFeed *)
  ( s			:  ARRAY OF CHAR 		(* Auszugebender Text *));


PROCEDURE Dump*(t: ARRAY OF CHAR; dumpAd : S.PTR; bytes : LONGINT);
(*
 Dump bytes at dumpAd. Works with protected memory (i.e. memory which can
 only be accessed in supervisor mode).
 *)


END Traces.