MODULE ModelList; (* SJ 5.2.95 *)

(*
 LinkedList of Model.Ptr's.
 Used e.g. by WinView.
 *)


TYPE
  Desc* = RECORD(LinkedList.Desc)
  END;

  Element* = POINTER TO RECORD(LinkedList.ElemDesc)
    model-: Model.Ptr;
  END;

  DoProc* = PROCEDURE (m: Model.Ptr);



PROCEDURE AsElement*(m: Model.Ptr) : Element;
(*
 Answer an element storing m.
 *)


PROCEDURE (VAR self: Desc) FirstModel*() : Model.Ptr;
(*
 Answer the first model in the list, NIL if empty.
 *)


PROCEDURE (VAR self: Desc) LastModel*() : Model.Ptr;
(*
 Answer the last element in the list, NIL if empty.
 *)


PROCEDURE (VAR self: Desc) AddModel*(m: Model.Ptr);
(*
 Add m to the receiver.
 *)


PROCEDURE (VAR self: Desc) RemoveModel*(m: Model.Ptr);
(*
 Remove m from the receiver. Do nothing if not found.
 *)


PROCEDURE (VAR self: Desc) ModelsDo*(aBlock: DoProc);
(*
 Evaluate aBlock with every model stored in the receiver as argument.
 *)


END ModelList.