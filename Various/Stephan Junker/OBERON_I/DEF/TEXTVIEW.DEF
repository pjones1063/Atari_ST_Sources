DEFINITION TextViewer;


(*
 * TextViewer displays ASCII texts in windows. Such a text may have a mark,
 * which is displayed by a thin black bar between two characters.
 *)


IMPORT S:=SYSTEM, Modl:=Model, WinView;


TYPE
  Viewer*   = POINTER TO ViewDesc;
  ViewDesc* = RECORD(WinView.ViewDesc)
                mark-    : LONGINT;
                fontId-, fontHeight- : INTEGER;

                PROCEDURE(v : Viewer) Initialize*;
                (*
                 * Initializes a viewer for text display.
                 *)

                PROCEDURE(v : Viewer) SetModel*(m : Modl.Ptr);
                (*
                 Set the text to be displayed.
                 *)

                PROCEDURE(v : Viewer) SetMark*(pos : LONGINT);
                (*
                 * sets the mark at position pos in the text displayed in v. The displayed
                 * part is set so that the mark is visible. If v is opened, it will be
                 * updated immediately.
                 *)

                PROCEDURE(v : Viewer) SetFont*(fontId, fontHeight : INTEGER);
                (*
                 * sets the font and it's height for a viewer. If the viewer is opened,
                 * it is redrawn immediately. It's size, data size and offsets are
                 * recalculated.
                 *)

                PROCEDURE(v : Viewer) TextSelected*(lineAd, selAd : S.PTR);
                (*
                 * is called is a mouse click in the work area of a text window is
                 * done. Override if you want to react on that event.
                 *)

              END(*RECORD*);
  Model*    = POINTER TO ModelDesc;
  ModelDesc*= RECORD (MVC.ModelDesc)
                fileAdr- : S.PTR;
                fileLen- : LONGINT;

                PROCEDURE(m : Model) Initialize*;
                (*
                 * Initializes a model for text display.
                 *)

                PROCEDURE(m : Model) SetText*(begad : S.PTR; length : LONGINT);
                (*
                 * Sets the text data for model m. The text must start at address begad
                 * and have the length length. It must be terminated by a zero byte.
                 * All viewer displaying model m will be updated.
                 *)

                PROCEDURE(m : Model) LoadText*(name : ARRAY OF CHAR);
                (*
                 * Loads a text file with given name using File.Load and sets it's data
                 * in model m. If loading fails, m.fileAdr will not be changed
                 * (NIL after Init).
                 *)

              END;


END TextViewer.
