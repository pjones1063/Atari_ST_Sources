Compiler V1.17 :

- bei Zeigern auf offene Arrays konnte es vorkommen, daû ein Indexcheck
  erzeugt wurde. Ist behoben.
- SYSTEM.PTR ist flexibler geworden. Ein VAR-Parameter dieses Typs kann
  alle Zeiger aufnehmen.
- globale Records (nicht alloziert) haben jetzt auch einen Typdeskriptor.
- Fehler bei typgebundenen Prozeduren behoben: Eine Prozedur mit gleichem
  Namen, aber an einen Erweiterungstyp gebunden, hat jetzt den gleichen
  Offset im Typdeskriptor.
- der Aufbau der Symboldatei ist wieder erweitert worden. Eine 
  NeuÅbersetzung aller Module ist eigentlich nicht nîtig, da das alte
  Format noch gelesen werden kann. Trotzdem gibt der Compiler eine Meldung
  aus, wenn er ein altes Symbolfile liest.
- ein Fehler bei Feldelementen >= 512 Byte ist behoben.
- Die FOR-Konstruktion hatte einen Fehler, der jetzt behoben ist.
- Der Assembler stÅrzt nicht mehr ab, wenn ein Recordelement nicht existiert.
- JSR, JMP und LEA funktionieren jetzt auch mit absoluten Adressen.
- MOVE SR,... und MOVEP funktionieren jetzt richtig.
- FEHLER: Es kommt vor, das der Compiler NACH der Compilierung abstÅrzt.
  Ist nicht schîn, stîrt aber auch nicht. Schwer zu findender Fehler.

Make V1.02 :

- bei Fehlern bei der öbersetzung sollte jetzt aber wirklich abgebrochen
  werden ...

Compiler V1.16 :

- Zeiger auf offene Arrays (Oberon-2) sind implementiert.
- der Typ SYSTEM.PTR existiert jetzt.

Compiler V1.15 :

- der Aufbau der Symboldatei muûte mal wieder erweitert werden. Jetzt
  funktioniert auch wieder die Erweiterung eines Typs, der in einem anderen
  Modul definiert wurde ...
  éltere Symboldateien kînnen erkannt und weiterhin gelesen werden. Dort
  definierte Records dÅrfen aber nicht erweitert werden. Sicherheitshalber
  sollte man neu Åbersetzen.
- Prozeduren sollten jetzt auch an Zeiger auf Records gebunden werden
  kînnen. VorlÑufig darf man beim Aufruf einer so gebundenen Prozedur aber
  keinen NIL-Zeiger verwenden !
- Der Read-Only-Export sollte jetzt mîglich sein.
- Das variante WITH-Statement ist implementiert.

Linker V1.04 :

- Bugaboo sollte jetzt wieder besser mit der Symboltabelle eines Programms
  zurechtkommen.
- Die neue Environmentvariable "PRGPATH" gibt einen mit Backslash
  abgeschlossenen Pfad an, in den das erzeugte Programm geschrieben werden
  soll. Wenn die Variable nicht existiert, wird weiterhin dorthin 
  geschrieben, wo das Objektmodul stand.

ObnShell V1.1 :

- der Lader wurde vorlÑufig rausgeschmissen, da er nie richtig funktioniert
  hat. Daher muû man ein Programm normal linken, bevor man es testen kann.
  Dazu empfehle ich Bugaboo oder einen Ñhnlichen Debugger.
- Eine provisorische MenÅzeile ermîglicht den Zugang zu Accessories. Damit
  verschwindet auch die MenÅzeile eines nachgeladenen Programms.
- Der Start von TOS-Programmen sieht jetzt ein wenig schîner aus. Die Maus
  wird ausgeschaltet, der Bildschirm gelîscht und der Cursor eingeschaltet.
- Der Befehl dir gibt wieder mehr Informationen zu den Dateien an.
- Mit einem "-" hinter einem zu startenden Programm wird der Programmpfad
  nicht als Standardpfad gesetzt.

Make V1.01 :

- ist jetzt in der Lage, auch als Programm korrekt zu arbeiten. Der Compiler
  wird im selben Pfad erwartet, in dem auch MAKE.TTP steht. Bei einem
  Fehler bei der öbersetzung wird abgebrochen.

Compiler V1.14 :                    

- Die Suchpfade kînnen sowohl mit Semikolon als auch mit Komma getrennt
  werden. Es gibt mindestens eine Shell, die Semikolons als Trennungen
  von Befehlen interpretiert.
- ZusÑtzliche Kommandozeilenoptionen. Siehe DOC.

Linker V1.03 :

- Suchpfade wie bei Compiler geÑndert.
- ZusÑtzliche Kommandozeilenoptionen. Siehe DOC.

Compiler V1.13 :

- Zwei Fehler, die mir Michael Seyfried berichtet hat, sind behoben:
  Zum einen funktioniert jetzt der Zugriff auf die typgebundene Prozedur
  eines Basistyps, zum anderen werden bei einer Zuweisung eines Records
  nun auch die Typdeskriptoren Åbergeben.

ObnShell V1.04 :

- Fehler in IO korrigiert.
- Neu Åbersetzte Module enthalten.

Compiler V1.12 :

- Fehler im Assembler bei bedingter Assemblierung behoben.
- Der Aufruf von typgebundenen Prozeduren geht jetzt auch innerhalb von 
  Prozeduren. Sorry ...

Filename 20.6.93 :

- fullname verschwunden, path auf 200 Zeichen hochgesetzt. Das hatte einen
  neuen Symbolfile zur Folge, der viele NeuÅbersetzungen nach sich zog.

ObnShell V1.03 :

- Vor jedem Programmstart wird Task.Init aufgerufen, nach Programmende
  Task.Exit. Dies war nîtig, um automatisch die zuletzt angezeigte
  MenÅzeile zu restaurieren. Nebenbei bekommt man auch den Returncode
  angezeigt.

Compiler V1.11 :

- alle Checks sind jetzt defaultmÑûig eingeschaltet (Dirk Theisen hat 
  mich Åberzeugt).
- ein schwerer Fehler, der sich seltsamerweise nie bemerkbar gemacht
  hat, ist behoben. Genauso ein paar andere Kleinigkeiten, die Dirk Theisen
  gefunden hat.


Compiler V1.1 :

- kleinerer Fehler entdeckt und behoben (gab Probleme wenn ein Boolscher 
  Wert in den Flags in einen Zahlenwert gewandelt wurde)
- integrierter Makroassembler
- Oberon-2 Standard implementiert (FOR-Schleife, typgebundene Prozeduren)
- einige Optionen, z.B. Abbrechen nach der ersten Fehlermeldung


ObnShell V1.02 :

- call und batch gibts nicht mehr. Stattdessen wird jeder unbekannte
  Bezeichner getestet, ob es sich um ein Batchfile, ein Objektmodul oder
  ein Programm handelt.
- der Loader ist nicht mehr case-sensitiv bezÅglich der Modulnamen. Alle
  Modulnamen werden in Groûbuchstaben umgewandelt. Daher braucht man bei
  beim Laden oder Starten eines Moduls nicht mehr auf die Schreibweise zu
  achten.
  

Debugger V1.01 :

- jetzt sollte ein continue nach einem Breakpoint wohl funktionieren.
- Neuer Befehl regs gibt die zuletzt gespeicherten Werte von PC,SR,D0-D7
  und A0-A7 aus.
- Alle oben genannten Werte sind auch als Variablen ansprechbar, so daû
  sie in AusdrÅcken verwendet und verÑndert werden kînnen.
- Auflisten aller Breakpoints und lîschen aller Breakpoints mîglich.
- Befehl SOURCE zum Auffinden einer Position im Quelltext, wenn man nur
  die Adresse im Speicher kennt.
- Der Befehl IF bietet eine geringe Mîglichkeit, mit HALT(Nr) gesetzte
  Breakpoints zu maskieren. Wenn man jedoch eine selbstgeschriebene
  Prozedur einklinkt, ist jede Maskierung mîglich.


Linker V1.02 :

- muûte korrigiert werden, damit der SOURCE Befehl auch mit Modulen
  funktioniert, die in der Shell integriert sind.