DEFINITION Menus; (* SJ *)

(* Menus simplifies using menus with key shortcuts. It also supports
   multiple tasks.
*)


TYPE menuproc* = PROCEDURE ();


VAR Title*,Entry* : INTEGER;

(* contain the values of the selected menu item if a procedure stored
   with Menus.Set is called. This is also correct if the procedure was
   called via a keyboard shortcut.
*)

PROCEDURE Set*(MenuTree : LONGINT; Title,Entry : INTEGER; Proc : menuproc);

(* stores a procedure which is called if the desired menu item is
   selected. If the corresponding menu entry contains a key definition,
   the procedure is also called if the key is pressed. The character for
   shift is the arrow up (01X), for control is "^", for alternate is the
   fuller character (07X). Function keys have the character "F" with a
   number. The "#" character is used to define the separate numerical keys.
   If a key is detected, the procedure is assigned to that key using module
   Key, so use this module for key procedures.
*)

PROCEDURE Show*(MenuTree : LONGINT);

(* shows a menu bar. Different tasks may have there own menu bar. If a
   task is terminated, the menu bar of the previous task is shown
   automatically.
*)

PROCEDURE Hide*();

(* hide a menu (= disable) *)


PROCEDURE Selected*(Titl,Entr : INTEGER);

(* calls the procedure stored for this entry. The title is shown normal
   afterwards. Call this procedure when receiving a menu selected event.
*)

END Menus.
