MODULE Events; (* SJ 6.6.93 *)


IMPORT Event;


VAR AcOpen*,AcClose*,UnknMsg* : PROCEDURE;

(* these procedures are called if the according message event occurs and
   the procedure is not NIL (default).
*)
 
 
PROCEDURE Multi*(VAR e : Event.events);

(* Includes the bits for key and message event in e, sets the
   according procedure variables to internal routines and call Event.Multi.
   If a key event occurs, module Key will call the according key
   procedure. If no key procedure is assigned, module Window calls
   the key procedure linked to the top window. If a message event occurs,
   the reaction depends ono the message :
   MNSELECTED will call Menus.Selected,
   WMREDRAW to WMNEWTOP will be given to Window.CallMsg,
   ACOPEN calls AcOpen if AcOpen is not NIL,
   ACCLOSE calls AcClose if AcClose is not NIL and
   all the other message numbers call UnknMsg if UnknMsg is not NIL.
   The other events can be handled by procedures linked in e before
   calling Events.Multi. The key and message event often supplies all
   the needs of a program and e.Which can be set to {} so that no other
   event is recognized.
*)

PROCEDURE DistrKey*(Events : Event.evptr);

(* this is the procedure linked to e.KeyProc by Multi. It calls Key.Call
   and, if it fails, Window.Key.
*)

PROCEDURE DistrMsg*(Events : Event.evptr);

(* this is the procedure linked to e.MsgProc by Multi. It calls the 
   procedure according to the message type. This procedure can be used
   to link in an Event.events record as MsgProc and assign it to IO
   with SetEvents.
*)


END Events.