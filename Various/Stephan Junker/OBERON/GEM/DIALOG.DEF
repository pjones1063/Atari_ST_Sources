MODULE Dialog; (* SJ  30.1.93 *)

(* Dialog contains procedures for dialog box handling. You can assign
   procedures to exit buttons and call the dialog handler, the rest is
   done automatically.
*)

CONST 
  DESELECT* = 0; EXITONLY* = 1; DELETEBOX* = 2; NEWBOX* = 3; REDRAWBOX* = 4;
  REDRAWOBJ* = 5; EXITDIALOG* = 6;

(* these bits determine what Dialog.Do should do before and after calling
   the exit procedure :
   DESELECT   : deselect object before call
   EXITONLY   : delete box and exit dialog before call
   DELETEBOX  : delete box before call
   NEWBOX     : delete box before call, redraw box after call
   REDRAWBOX  : redraw box after call
   REDRAWOBJ  : redraw exit object after call
   EXITDIALOG : delete box and exit dialog after call
*)


PROCEDURE Show* (BoxAdr : LONGINT);

(* displays a dialog box in the center of the screen. Ment for messages
   without interaction of the user. Window update is switched on.
*)

PROCEDURE Delete* ;

(* deletes a dialog box that was placed with Show. Window update is
   switched off. Must be called before using Show a second time.
*)

PROCEDURE SetWork* (Tree : LONGINT; Object : INTEGER; Procedure : PROCEDURE;
                    WorkSet : SET);

(* stores the work that will be done if object Object in tree Tree is
   selected.
*)

PROCEDURE Do* (Tree : LONGINT; StartOb : INTEGER);

(* dialog with user. StartOb is the object to start edt with. If an exit
   object is selected, the corresponding actions defined with SetWork are 
   done. If nothing is set, the object is deselected, the box deleted and 
   Do terminated.
*)

END Dialog.
