DEFINITION Storage; (* SJ *)

(* basic memory management. Memory is allocated in blocks of 32 KB and then
   distributed in smaller parts. Therefore it is possible to allocate lots
   of small amounts of memory like is normally done with NEW().
*)

PROCEDURE Set*(Lev : INTEGER);

(* sets the level stored with every allocation. This offers the possibility
   to allocate several times and deallocate everything with FreeLevel.
   Lev should be higher than 100 or negative, because it is stored instead
   of the task number. Every Task.Init sets the level to the task number.
   If an allocation may not be deallocated on Task.Exit, the level can be
   changed to a negative number. This memory can only be deallocated by
   FreeLevel and program termination.
*)

PROCEDURE Reset*;

(* restores the level that was used before the last call of Set. Nesting
   allowed.
*)

PROCEDURE FreeRam* () : LONGINT;

(* Return amount of available (GEMDOS) memory *)


PROCEDURE FreeLevel*(Level : INTEGER);

(* free all memory allocated under Level *)


END Storage.
