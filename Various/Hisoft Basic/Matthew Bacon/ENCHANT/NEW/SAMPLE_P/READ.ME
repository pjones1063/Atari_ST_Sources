                     General notes on BASIC routines.
                     --------------------------------

SAMPLE play back.
-----------------
     The sound output of MASTER SOUND utilises all 3 sound channels of the 
computers  sound  chip.  This  gives a fairly high  quality  sound  output 
through most monitors.  The BASIC routines used within this folder ALL use
2 channels of the sound chip (channels 2 & 3).  This  means  that  samples 
played  back  with these routines will inevitably sound  inferior  to  the 
original recording.  However, for the sacrifice of sample quality, we gain 
some useful advantages :-

1) The computer generates the keyboard click with sound channel 1.  We now 
no  longer  have  to turn off the key click to  prevent  the  system  from 
corrupting our precious sound samples. The more observant will notice that 
this also means that we can be producing OTHER sounds or tunes at the same 
time as playing samples out through channels 2 & 3 !!!

2) The efficiency of the code required to 2 channels of sample is  greater 
than that of 3. Hence the execution speed of the code can be significantly 
faster.  This means that while a sample is playing,  we can also be  doing 
something else completely different, like moving sprites around the screen 
for example. However, other interrupts can cause our samples to slow down! 
This  usually happens when the mouse is moved and its effect can be  quite 
noticable.  The  emphasis  here is to record your samples  at  the  lowest 
possible speed,  ideally 5 KHz. This will prevent the sample playback from 
hogging the computers time and will allow the mouse,  screen scrolling and 
any sprite routines to run more effectively with minimal upset.

Extra Commands.
---------------
     Some  extra  BASIC commands have been added to enhance  control  over 
your sample playback.  In most cases,  the subroutines are called by name. 
The  name  refers to an offset address set up within  the  BASIC  program. 
Using  these  routines  in an off-hand fashion CAN be  dangerous  and  may 
result in you crashing the computer.  The method of passing data into  the 
routines  is usually performed by POKEing the data into the  machine  code 
itself.  These  addresses are also located via BASIC variable offsets  for 
your  convenience.  Please refer to the relevant example program for  more 
details of how to use the routines effectively. Please note that the names 
of  the  offsets might vary slightly from BASIC to BASIC due to  the  fact 
that the variable names might already be in use by that implementation.

CALL PLAY (START.L, LENGTH.L, LOOP on/off .W)
     Play sample starting at START,  finishing after LENGTH bytes. If LOOP 
     = 0 then looping is off, else it is on.

CALL BACK (START.L, LENGTH.L, LOOP on/off .W)
     Play sample backwards.  Note that the parameters are exactly the same 
     as those used in PLAY.  The routine automatically calculates the  end 
     of the sample and plays down towards the start.

CALL WAIT (no parameters)
     Will  suspend  operation of the BASIC program until the  end  of  the 
     sample being played is reached.  If looping is on,  WAIT will  return 
     before  the start of the next loop.  If the HEAR mode is being  used, 
     WAIT will return immediately.

CALL HALT (no parameters)
     To stop the current sample play action, issue a halt command.

CALL HEAR (no parameters)
     Plays the sound on the input of the cartridge through the monitor  or 
     TV speaker. Sound quality is likely to be a little dubious !

CALL RECORD (START.L, LENGTH.L)
     Record  a  sample into the defined  area  of  memory.  Again,  sample 
     quality is likely to poor due to the sound tables and the activity of 
     the rest of the computer system.
     
POKE SPEED (word)
     0 to 4 sets the interrupt speed. Its effect is not made evident until
     the issuing of a fresh command call.

POKE LOOP (word)
     A value of 0 sets looping off else looping is on.  The effect of this 
     poke is known at the end of the current operation.

POKE SAMPLESTART (long)
     The start address of the sample (+12 bytes for the sample header).

POKE LENGTH (long)
     The length of the sample in bytes is place here.

In this FOLDER.
---------------
     In  this folder are located the files,  SAMPLE.SAM (the demo  sample) 
and  BASCODE.EXE (the general purpose BASIC routine).  Also  located  with 
these  files  are demo programs for (the latest)  ATARI  BASIC,  (HISOFTs) 
POWER  BASIC and GFA BASIC.  Simply copy the sample, code and  appropriate 
demo program onto a disc containing the correct implementation of BASIC to 
be used.

The sample header.
------------------
     Master  Sound  samples have a 12 byte header saved at  the  start  of 
them.  The first six bytes are the ASCII letters 'MASTER'.  The lower byte 
of the next word contains the speed value (0-4) times 16.  The second byte 
of  the word is zero.  To ascertain the speed of the sample simply  PEEK.B 
(samplestart  + 7)/16.  The final 4 bytes are the long word value  of  the 
exact length of the sample in bytes.  Hence length = PEEK.L (samplestart + 
8).  The next byte is the first byte of the actual sample which is held in 
an un-signed straight binary format.

