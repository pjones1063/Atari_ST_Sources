DESKTOP x1k12                                 ษอออออออออออออป
                                 บ  MNEMONICS  บ
                                 ศอออออออออออออผ
MOVE    :MOVE                           MOVEQ   :MOVE Quick
MOVEA   :MOVE to an Address register    MOVEM   :MOVE Multiple registers
MOVEP   :MOVE Peripheral data           CLR     :CLeaR
AND     :logical AND                    ANDI    :logical AND Immediate
OR      :logical OR                     ORI     :logical OR Immediate
EOR     :logical Exclusive OR           EORI    :logical Exclusive OR Immediate
NOT     :NOT
BTST    :Bit TeST                       BCLR    :Bit test and CLeaR
BSET    :Bit test and SET               BCHG    :Bit test and CHanGe
Scc     :Set conditionnaly
LSL     :Logical Shift Left             LSR     :Logical Shift Right
ASL     :Arithmetical Shift Left        ASR     :Arithmetical Shift Right
ROL     :ROtate Left                    ROR     :ROtate Right
ROXL    :ROtate with X Left             ROXR    :ROtate with X Right
EXG     :EXchanGe registers
LEA     :Load Effective Address         PEA     :Push Effective Address
LINK    :LINK stack                     UNLK    :UNLinK
EXT     :sign EXTend                    SWAP    :SWAP register halves
ADD     :ADD                            ADDI    :ADD Immediate
ADDQ    :ADD Quick                      ADDA    :ADD to an Address register
ADDX    :ADD with X                     ABCD    :Add in Binary Coded Decimal
SUB     :SUBtract                       SUBI    :SUBtract Immediate
SUBQ    :SUBtract Quick                 SUBA    :SUBtract to an Address regist.
SUBX    :SUBtract with X                SBCD    :Subtract in Binary Coded Dec.
NEG     :NEGate                         NEGX    :NEGate with X
NBCD    :NEGate in Binary Coded Decimal
CMP     :CoMPare                        CMPI    :CoMPare Immediate
CMPA    :CoMPare to an Address register CMPM    :CoMPare Memory
TST     :TeST
MULU    :MULtiply Unsigned              MULS    :MULtiply Signed
DIVU    :DIVide Unsigned                DIVS    :DIVide Signed
NOP     :No OPeration                   JMP     :JuMP
JSR     :Jump to SubRoutine             BSR     :Branch to SubRoutine
RTS     :ReTurn of Subroutine           RTR     :ReTurn and Restore
Bcc     :Branch conditionnaly
DBcc    :test condition Decrement data register and Branch if different of -1
-T      :True                           -F      :False
-HI     :HIgher                         -LS     :Lower or Same
-CC     :Carry Clear                    -CS     :Carry Set
-HS     :Higher or Same                 -LO     :LOwer
-NE     :Not Equal                      -EQ     :EQual
-VC     :oVerflow Clear                 -VS     :oVerflow Set
-PL     :PLus                           -MI     :MInus
-GE     :Greater or Equal               -LT     :Lesser Than
-GT     :Greater Than                   -LE     :Lesser or Equal
-RA     :bRAnch always                  
TRAP    :TRAP exception                 TRAPV   :TRAP on oVerflow exception
CHK     :CHecK reg. against boundaries  ILLEGAL :ILLEGAL exception
RTE     :ReTurn of Exception            
TAS     :Test And Set
RESET   :RESET external devices         STOP    :STOP

.B      :Byte                           .W      :Word
.L      :Long word                      .S      :Short

Dn      :Data register #n               An      :Address register #n
Rn      :Register #n                    PC      :Program Counter
USP     :User Stack Pointer             SSP     :Supervisor Stack Pointer
SP      :Stack Pointer                  SR      :Status Register
CCR     :Code Condition Register        #k      :constant
d       :displacement                   ( )     :indirect
+       :post-incremented               -       :pre-decremented
, :separator character for source and destination
/ :separator character used with MOVEM for indicate a jump in the list register
- :separator character used with MOVEM for indicate a link in the list register
