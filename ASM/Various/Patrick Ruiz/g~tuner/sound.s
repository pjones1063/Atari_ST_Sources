****************************************
***   Peripheral   Pilot   Program   ***
****************************************
***		 SOUND		     ***
****************************************
	OUTPUT	SOUND.PPP
; Relative PC routine
; Supervisor mode
; Parameters on the stack
; D0-D2/A0-A2 used

*ENTER/EXIT			0
;		  MemoryAddress.L 1 KB

*SET				1
;			     Type b0:PPP_SND_CR-PPP_SND_FREQ
;				  b1:PPP_SND_BH-PPP_SND_EL (READ)
;				  b2:PPP_SND_BH-PPP_SND_EL (WRITE)
;				  b3:PPP_SND_XBARIN-PPP_VID_XBAROUT
;				  b4:PPP_SND_INPUT-PPP_SND_OUTPUT
;		PPPTableAddress.L

; Memory (1 KB)
PPPTable0=0			;DS.W 20
SETType=PPPTable0+40		;DS.W 1
PPPTableAddress=SETType+2	;DS.L 1

; PPP Table
PPP_SND_CR	=0
PPP_SND_MODE1	=PPP_SND_CR+2
PPP_SND_MODE2	=PPP_SND_MODE1+2
PPP_SND_FREQ	=PPP_SND_MODE2+2
PPP_SND_BH	=PPP_SND_FREQ+2
PPP_SND_BM	=PPP_SND_BH+2
PPP_SND_BL	=PPP_SND_BM+2
PPP_SND_EH	=PPP_SND_BL+2
PPP_SND_EM	=PPP_SND_EH+2
PPP_SND_EL	=PPP_SND_EM+2
; and for WRITE: 6 Words
PPP_SND_XBARIN	=PPP_SND_EL+2+12
PPP_SND_XBAROUT =PPP_SND_XBARIN+2
PPP_SND_INPUT	=PPP_SND_XBAROUT+2
PPP_SND_OUTPUT	=PPP_SND_INPUT+2

SOUND:	LEA	(SP,4),A0
	MOVE	(A0)+,D0
	BMI.S	.x
	CMPI	#1,D0
	BHI.S	.x
	MOVE.B	INITInd(PC),D1
	BNE.S	.1
	TST	D0
	BNE.S	.x
.1	LEA	FunctionTable(PC),A1
	MOVE	(A1,D0.W*2),D0
	LEA	ENTER_EXIT(PC),A1
	JMP	(A1,D0) ;A0=Parameters
.x	RTS

ReadSOUND:
	ORI	#$0700,SR
	MOVEA.L M_Address(PC),A2
	LEA	PPPTable0(A2),A0
	LEA	SND_CR,A1
	MOVE	(A1),D0
	MOVE	D0,(A0)+
	ANDI	#$FFDD,D0	;No loops
	MOVE	D0,(A1)
.teol	MOVE	(A1),D1
	ANDI	#$0011,D1
	BNE	.teol		;End of loops
	MOVE	SND_MODE1,(A0)+
	MOVE	SND_MODE2,(A0)+
	MOVE	SND_FREQ,(A0)+
	MOVEQ	#0,D0
	BCLR	#7,(A1,1)	;READ
	MOVE.B	SND_BH+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_BM+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_BL+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_EH+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_EM+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_EL+1,D0
	MOVE	D0,(A0)+
	BSET	#7,(A1,1)	;WRITE
	MOVE.B	SND_BH+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_BM+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_BL+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_EH+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_EM+1,D0
	MOVE	D0,(A0)+
	MOVE.B	SND_EL+1,D0
	MOVE	D0,(A0)+
	MOVE	SND_XBARIN,(A0)+
	MOVE	SND_XBAROUT,(A0)+
	MOVE	SND_INPUT,(A0)+
	MOVE	SND_OUTPUT,(A0)+
	ANDI	#$FBFF,SR
	RTS

WriteSOUND:
	ORI	#$700,SR
	MOVEA.L M_Address(PC),A2
	MOVEA.L PPPTableAddress(A2),A0
	MOVE	SETType(A2),D2
	BEQ	.x
.tb0	LSR	#1,D2
	BCS.S	.b0
	ADDA	#PPP_SND_BH-PPP_SND_CR,A0
	BRA.S	.tb1
.b0	MOVE	(A0)+,D1 ;SND_CR the last
	MOVE	(A0)+,SND_MODE1
	MOVE	(A0)+,SND_MODE2
	MOVE	(A0)+,SND_FREQ
.tb1	LSR	#1,D2
	BCS.S	.b1
	ADDA	#12,A0
	BRA.S	.tb2
.b1	BCLR	#7,SND_CR+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_BH+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_BM+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_BL+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_EH+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_EM+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_EL+1
.tb2	LSR	#1,D2
	BCS.S	.b2
	ADDA	#12,A0
	BRA.S	.tb3
.b2	BSET	#7,SND_CR+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_BH+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_BM+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_BL+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_EH+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_EM+1
	MOVE	(A0)+,D0
	MOVE.B	D0,SND_EL+1
.tb3	LSR	#1,D2
	BCS.S	.b3
	ADDA	#PPP_SND_INPUT-PPP_SND_XBARIN,A0
	BRA.S	.tb4
.b3	MOVE	(A0)+,SND_XBARIN
	MOVE	(A0)+,SND_XBAROUT
.tb4	LSR	#1,D2
	BCC.S	.cr
.b4	MOVE	(A0)+,SND_INPUT
	MOVE	(A0)+,SND_OUTPUT
.cr	BTST	#0,SETType+1(A2)
	BEQ.S	.x
	MOVE	D1,SND_CR
.x	ANDI	#$FBFF,SR
	RTS

ENTER:	LEA	M_Address(PC),A2
	MOVE.L	(A0),(A2)
	BSR	ReadSOUND
	LEA	INITInd(PC),A0
	ST	(A0)
	RTS

EXIT:	MOVEA.L M_Address(PC),A2
	PEA	PPPTable0(A2)
	PW	#-1
	PW	#1
	BSR	SOUND
	ADDQ	#8,SP
	LEA	INITInd(PC),A0
	SF	(A0)
	RTS

ENTER_EXIT:
	MOVE.B	INITInd(PC),D0
	BEQ	ENTER
	BRA	EXIT

SET:	MOVEA.L M_Address(PC),A2
	MOVE	(A0)+,SETType(A2)
	MOVE.L	(A0)+,PPPTableAddress(A2)
	BSR	WriteSOUND
	RTS

	D_
INITInd DC.B 0
	EVEN
FunctionTable:
	DC.W	ENTER_EXIT-ENTER_EXIT
	DC.W	SET-ENTER_EXIT
M_Address	DS.L	1

	END
