*************************
* SYSTEM / ATARI COMBEL *
********************************************************************************

R/W $FFFF8006 B  b7-b6= M1-M0 Monitor interface
			%00: Atari monochrom monitor
			%01: Atari color monitor
			%10: Color monitor
			%11: Television

R/W $FFFF8007 B  b5-b0= Bus control
			b5= ON/OFF Atari STE Bus
			b3= Blitter flag
			b2= 8/16 MHz Blitter clock
			b0= 8/16 MHz CPU clock

R/W $FFFF800C W ?

***********************
* VIDEO / ATARI VIDEL *
********************************************************************************

R/W $FFFF8201 B  b7-b0= Begin	address of video memory frame b23-b16
R/W $FFFF8203 B  b7-b0= Begin	address of video memory frame b15-b8
R/W $FFFF820D B  b7-b0= Begin	address of video memory frame b7-b0 (b1-b0= %00)
R/W $FFFF8205 B  b7-b0= Current address of video memory frame b23-b16
R/W $FFFF8207 B  b7-b0= Current address of video memory frame b15-b8
R/W $FFFF8209 B  b7-b0= Current address of video memory frame b7-b0 (b1-b0= %00)

R/W $FFFF820A B  b1=	?
		 b0=	Intern/Extern Synchronization

R/W $FFFF8264 B  b3-b0= Horizontal scroll offset shadow
?			(No actualisation of Line Width needed)

R/W $FFFF8265 B  b3-b0= Horizontal scroll offset

R/W $FFFF8240 W b11-b0= Color register $0
R/W $FFFF82xx W b11-b0= Color register $x
R/W $FFFF825E W b11-b0= Color register $F
			RED.b4b1-b3 GREEN.b4b1-b3 BLUE.b4b1-b3

R/W $FFFF9800 L b31-b0= Color register $00
			RED.b1-6 %?? GREEN.b1-6 %?? $?? BLUE.b1-6 %??

R/W $FFFF98xx L b31-b0= Color register $xx
R/W $FFFF98FC L b31-b0= Color register $FF

R/W $FFFF820E W b8-b0?= Offset to next line (in words)

R/W $FFFF8210 W b9-b0?= Line width (in words)

R/W $FFFF8260 B  b1-b0= ST Color mode
			%00: 4 bit color look up table mode
			%01: 2 bit color look up table mode
			%10: 1 bit color look up table mode
			(64~ offset)
			(Write before Line width and VMode)

R/W $FFFF8266 W b10-b0= FALCON030 Color mode
			b10/b8/b4= Color mode
				   %000:  4 bit color look up table mode
				   %001:  8 bit color look up table mode
				   %010: 16 bit color mode
				   %100:  1 bit color look up table mode
			b9=	   Overlay mode
			b7=	   ?
			b6=	   External Horizontal SYNC
			b5=	   External Vertical   SYNC
			b3-b0=	   Current 4 bit color look up table

R/W $FFFF82C0 W  b8-b0= CO (RCO ?)
			b8=	Horizontal offset
				0:128~
				1:64~
			b7=	16b/32b Video data bus (32b only ?)
			b6=	Horizontal synchronization polarity
				0:	"-"
				1:	"+"
			b5=	Vertical   synchronization polarity
				0:	"-"
				1:	"+"
			b4=	5 HBlank delay
			b3=	15 Horizontal Halves-lines delay when changing mode
				Overwrite interlace mode/Normal interlace mode
			b2=	Video clock
				0:	32     MHz
				1:	25.175 MHz
			b1=	1 for 4 clock cycles per pixel
			b0=	0 for 4 clock cycles per pixel

R/W $FFFF82C2 W  b3-b0= VMODE (VCO: Video Control)
		 b3-b2= Clock cycles per pixel
			%00:	4
			%01:	2
			%10:	1    (2 in VGA ? ...)
			%11:	nute (Videosystem wird nicht getaktet)

			STE-Kompatibilit„tsmodus,egal welche Video-Mode-
			Control-Bits gesetzt sind:
			%00:	16
			%01:	16
			%10:	16
			%11:	nute
		    b1= Interlace
		    b0= Double scan

R   $FFFF8280 W  b9-b0= HHC: Horizontal Hold Counter

R/W $FFFF8282 W  b9-b0= HHT: Horizontal Hold Timer
			     (HorizontalFrequency=
			      VideoClock/ClockCyclesPerPixel*2*(HHT+1))

R/W $FFFF8284 W  b9-b0= HBB: Horizontal Blanking Begin
				 |RightBorderInUsec * ClockFrequency|
			HHT+1-int|----------------------------------|
				 |	    Divider		    |

R/W $FFFF8286 W  b9-b0= HBE: Horizontal Blanking End
			   |OffsettInUsec * ClockFrequency|
			int|------------------------------|
			   |		Divider 	  |

R/W $FFFF8288 W  b9-b0= HDB: Horizontal Display Begin
		    b9= Offset
			0: 1 halfline
			1: 2 halflines
		 b8-b0=
			In plane mode:
			    |	    | 8 words	    |		|
			    |Offset+|----------+16+2|*PixelWidth|
			    |	    |PlaneCount     |		|
			 int|-----------------------------------|+1
			    |		  Divider		|
			In ST mode:
			    |	       | 8 words    |		|
			    |64+Offset+|----------+2|*PixelWidth|
			    |	       |PlaneCount  |		|
			 int|-----------------------------------|+1
			    |		  Divider		|
			In true color mode:
			    |Offset+16 pixel*PixelWidth|
			 int|--------------------------|+1
			    |	      Divider	       |

R/W $FFFF828A W  b9-b0= HDE: Horizontal Display End
			In plane mode:
			    || 8 words	  |	      |
			    ||----------+2|*PixelWidth|
			    ||PlaneCount  |	      |
			 int|-------------------------|
			    |	     Divider	      |
			In true color mode: 0

R/W $FFFF828C W  b9-b0= HSS: Horizontal Synchro Start
				 |HSyncInUsec*ClockFrequency|
			HHT+1-int|--------------------------|
				 |	    Divider	    |

R/W $FFFF828E W  b8-b0= HFS

R/W $FFFF8290 W  b8-b0= HEE

R   $FFFF82A0 W b10-b0= VFC: Vertical Frame Counter (In halfline)

R/W $FFFF82A2 W b10-b0= VFT: Vertical Frame Timer
			(VerticalFrequency=VideoClock/2*(VFT+1))

R/W $FFFF82A4 W b10-b0= VBB: Vertical Blanking Begin
			VFT-int|BorderInMs*HorizFreq*2|

R/W $FFFF82A6 W b10-b0= VBE: Vertical Blanking End

R/W $FFFF82A8 W b10-b0= VDB: Vertical Display Begin
			LineCount*2+1
				    ^0 if interlaced

R/W $FFFF82AA W b10-b0= VDE: Vertical Display End

R/W $FFFF82AC W b10-b0= VSS: Vertical Synchro Start
			VFT-int|VSyncInMsec*HorizontalFreqInHz*2|

********************************
* ACSI / ATARI DMA	       *
* FDC / WESTERN DIGITAL WD1772 *
********************************************************************************
    $FFFF8600 W ?
    $FFFF8602 W ?

R/W $FFFF8604 W FDCaccess/SectorCount

R   $FFFF8606 W  b2-b0= DMAMode/Status
			b2= Condition of FDC DATA REQUEST signal
			b1= Sector count not null
			b0= DMA error

  W $FFFF8606 W  b8-b1= DMAMode/Status
			b8= R/W to FDC-HDC
			b7= HDC/FDC
			b6= 0:DMA
			    1:NO DMA
			b5= ?
			b4= FDC/SectorCount
			b3= FDC/HDC
			b2= A1
			b1= A0

R/W $FFFF8609 B  b7-b0= DMABeginMemoryAddress/DMACurrentMemoryAddress b23-b16
R/W $FFFF860B B  b7-b0= DMABeginMemoryAddress/DMACurrentMemoryAddress b15-b8
R/W $FFFF860D B  b7-b0= DMABeginMemoryAddress/DMACurrentMemoryAddress b7-b0 (b0= %0)

    $FFFF860E W ?

*******************
* SCSI / NCR 5380 *
********************************************************************************
R/W $FFFF8781 B  b7-b0= Output data register

R/W $FFFF8783 B  b7-b0= Initiator command register
			b7=	assert /rst
			Rb6=	arbitration in progress
			Wb6=	test mode
			Rb5=	lost arbitration
			Wb5=	-
			b4=	assert /ack
			b3=	assert /bsy
			b2=	assert /sel
			b1=	assert /atn
			b0=	assert data bus

R/W $FFFF8785 B  b7-b0= Mode register
			b7=	block dma mode
			b6=	target mode
			b5=	enable parity checking
			b4=	enable parity interrupt
			b3=	enable end of dma interrupt
			b2=	monitor busy line
			b1=	dma mode
			b0=	arbitrate

R/W $FFFF8787 B  b7-b0= Target command register
			b7=	last byte sent
			b3=	assert /req
			b2=	assert /msg
			b1=	assert /c/d
			b0=	assert /i/o

R/W $FFFF8789 B  b7-b0= ID status/Select register
			Rb7=	//rst
			Wb7-b0= id select register
			Rb6=	//bsy
			Rb5=	//req
			Rb4=	//msg
			Rb3=	//c/d
			Rb2=	//i/o
			Rb1=	//sel
			Rb0=	//parity

R/W $FFFF878B B  b7-b0= Bus and status register / Start DMA send register
			Rb7=	end of dma
			Rb6=	dma request
			Rb5=	parity error
			Rb4=	interrupt request
			Rb3=	phase match
			Rb2=	busy error
			Rb1=	//atn
			Rb0=	//ack
			Wb7-b0= start dma send

R/W $FFFF878D B  b7-b0= Input data register / Start DMA target receive
			Rb7-b0= Input data register
			Wb7-b0= Start DMA target receive

R/W $FFFF878F B  b7-b0= Reset error-Interrupt / Start DMA initiator receive
			Rb7-b0= Reset error / Interrupt
			Wb7-b0= Start DMA initiator receive

*************************
* SOUND / YAMAHA YM2149 *
********************************************************************************
  $8800|byte |Read data/Register select 		  |R/W
  $8802|byte |Write data				  |W
       |     |Port A (register 14)     BIT 7 6 5 4 3 . 1 0|
       |     |IDE reset -------------------' | | | |   | ||
       |     |Internal Speaker On/Off -------' | | |   | ||
       |     |Centronics strobe ---------------' | |   | ||
       |     |DSP reset -------------------------' |   | ||
       |     |RS232 RTS output --------------------'   | ||
       |     |Drive select 0 --------------------------' ||
       |     |Drive side select -------------------------'|
       |     |Port B - (register 15) Parallel port	  |

****************
* SOUND / SDMA *
********************************************************************************
R/W $FFFF8900 W b11-b0= DMA Sound Control
			b11= TimerA Interrupt at end of record buffer
			b10= TimerA Interrupt at end of replay buffer
			b9=  MFP-GPIPb7 at end of record buffer
			b8=  MFP-GPIPb7 at end of replay buffer
			b7=  Select replay/record register
			b5=  Loop record buffer
			b4=  DMA Record on
			b1=  Loop replay buffer
			b0=  DMA Replay on

R/W $FFFF8903 B  b7-b0= Begin	address of sound memory frame b23-b16
R/W $FFFF8905 B  b7-b0= Begin	address of sound memory frame b15-b8
R/W $FFFF8907 B  b7-b0= Begin	address of sound memory frame b7-b0 (b0= 0)
R   $FFFF8909 B  b7-b0= Current address of sound memory frame b23-b16
R   $FFFF890B B  b7-b0= Current address of sound memory frame b15-b8
R   $FFFF890D B  b7-b0= Current address of sound memory frame b7-b0 (b0= 0)
R/W $FFFF890F B  b7-b0= End	address of sound memory frame b23-b16
R/W $FFFF8911 B  b7-b0= End	address of sound memory frame b15-b8
R/W $FFFF8913 B  b7-b0= End	address of sound memory frame b7-b0 (b0= 0)

R/W $FFFF8920 W b14-b0= Sound mode
			b14-b13= Track connected with the DAC
			b12=	 ?
			b10-b9=  Play Track count select
				 %00:	1
				 %01:	2
				 %10:	3
				 %11:	4
			b7-b6=	 Format
				 %00:  8 bit Stereo
				 %01: 16 bit Stereo
				 %10:  8 bit Mono
			b1-b0=	 Frequency
				 %00: See Frequency register
				 %01: 12517 Hz
				 %10: 25033 Hz
				 %11: 50066 Hz
				 (Samples are signed, Left-Right arranged)

R/W $FFFF8930 W b15-b0= Crossbar IN
			b15=	(ADC Disconnect/Connect)
			b14-b13= ADC Clock
				     %00: 25.175 MHz
				     %01: External
				     %10: 32 MHz
			b12=	 ADC Internal/External Clock
			b11=	(DSP Inteface Disconnect/Connect)
			b10-b9=  DSP Interface Clock
			b8=	 DSP Interface ON/OFF Handshake
			b7=	 DSP SSI Disconnect/Connect
			b6-b5=	 DSP SSI Clock
			b4=	 DSP SSI ON/OFF Handshake
			b3=	 DMA Read connected to DMA Write/Other
			b2-b1=	 DMA Read Clock
			b0=	 DMA Read ON/OFF Handshake

R/W $FFFF8932 W b15-b0= Crossbar OUT
			b15=	(DAC Disconnect/Connect)
			b14-b13= DAC Source
				     %00: DMA Read
				     %01: DSP SSI
				     %10: DSP Interface
				     %11: ADC
			b12=	(DAC ON/OFF Handshake)
			b11=	(DSP Interface Disconnect/Connect)
			b10-b9=  DSP Interface Source
			b8=	 DSP Interface ON/OFF Handshake
			b7=	 DSP SSI Disconnect/Connect
			b6-b5=	 DSP SSI Source
			b4=	 DSP SSI ON/OFF Handshake
			b3=	 DMA Write connected to DMA Read/Other
			b2-b1=	 DMA Write Source
			b0=	 DMA Write ON/OFF Handshake

R/W $FFFF8934 W b11-b0= Frequency dividers
			b11-b8= External clock frequency divider
				$0:    STE divider
				$1-$F: 256*ThisValue
			b3-b0=	Internal clock frequency divider-1
				 0: STE divider
				 1: 49170 Hz
				 2: 32780 Hz
				 3: 24585 Hz
				 4: 19668 Hz
				 5: 16390 Hz
				 7: 12292 Hz
				 9:  9834 Hz
				11:  8195 Hz

  W $FFFF8936 B  b1-b0= Record track count select
			%00: 1
			%01: 2
			%10: 3
			%11: 4

R/W $FFFF8937 B  b3-b0= CODEC Input source from 16b adder
			b3=	?
			b1=	Crossbar
			b0=	ADC

R/W $FFFF8938 B  b1-b0= CODEC ADC-Input
			b1=	Left Channel
				0: Microphone
				1: Soundchip
			b0=	Right Channel
				0: Microphone
				1: Soundchip

R/W $FFFF8939 B  b7-b0= Input volume amplification
			+[b7-b4]*1.5= Left  input volume amplification (in dB)
			+[b3-b0]*1.5= Right input volume amplification (in dB)

R/W $FFFF893A W b11-b4= Output volume reduction
			-[b11-b8]*1.5= Left  output volume reduction (in dB)
			 -[b7-b4]*1.5= Right output volume reduction (in dB)

R/W $FFFF893C B  b1-b0= CODEC-Status
			b1= Left Channel Overflow
			b0= Right Channel Overflow

R/W $FFFF8941 B  b2-b0= GP2-GP0 DSP Interface data direction
			%0: In
			%1: Out

R/W $FFFF8943 B  b2-b0= GP2-GP0 DSP Interface data

*****************
* ATARI BLITTER *
********************************************************************************
R/W $FFFF8A00 W Halftone-RAM, Word 0
R/W $FFFF8Axx W Halftone-RAM, Word x
R/W $FFFF8A1E W Halftone-RAM, Word 15
R/W $FFFF8A20 W Source X Increment Register
R/W $FFFF8A22 W Source Y Increment Register
R/W $FFFF8A24 L Source Address Register
R/W $FFFF8A28 W Endmask 1
R/W $FFFF8A2A W Endmask 2
R/W $FFFF8A2C W Endmask 3
R/W $FFFF8A2E W Destination X Increment Register
R/W $FFFF8A30 W Destination Y Increment Register
R/W $FFFF8A32 L Destination Address Register
R/W $FFFF8A36 W Words per Line in Bit-Block
R/W $FFFF8A38 W Lines per Bit-Block
R/W $FFFF8A3A W Halftone Operation Register
R/W $FFFF8A3B W Logical Operation Register
R/W $FFFF8A3C W Line Number Register
R/W $FFFF8A3D W SKEW Register

*************************
* LAN / SCC ZILOG Z8530 *
********************************************************************************
$FFFF8C81 B R/W  b7-b0= Channel A Control Register
$FFFF8C83 B R/W  b7-b0= Channel A Data Register
$FFFF8C85 B R/W  b7-b0= Channel B Control Register
$FFFF8C87 B R/W  b7-b0= Channel B Data Register

***************************
* Joystick/Lightpen Ports *
********************************************************************************
R   $FFFF9210 ? Paddle 0 Position
R   $FFFF9212 ? Paddle 1 Position
R   $FFFF9214 ? Paddle 2 Position
R   $FFFF9216 ? Paddle 3 Position
R   $FFFF9220 ? Lightpen X-Position
R   $FFFF9222 ? Lightpen Y-Position

**************************
* DSP / MOTOROLA MC56001 *
********************************************************************************

R/W $FFFFA200 B Interrupt Control Register
		b4=	Flag 1
		b3=	Flag 0
		b1=	Transmit data empty interrupt
		b0=	Receive  data full  interrupt

R/W $FFFFA201 B Command Vector Register
		b7=	Command
		b4-b0=	Vector

R   $FFFFA202 B Interrupt Status Register
		b7=	Request
		b4=	Flag 3
		b3=	Flag 2
		b2=	Transmitter ready
		b1=	Transmit data empty
		b0=	Receive Data Register Full

R/W $FFFFA203 B Interrupt Vector Register

R/W $FFFFA204 B 0
R/W $FFFFA205 B Data b23-b16
R/W $FFFFA206 B Data b15-b8
R/W $FFFFA207 B Data b7-b0

**************************
* MFP / MOTOROLA MC68901 * 2457600 Hz
********************************************************************************

R/W $FFFFFA01 B GPIP
		b7= DMA Sound Interrupt
		b6= RS232 Ring Indicator
		b5= FDC/HDC Interrupt
		b4= ACIA Keyboard or MIDI Interrupt
		b3= Blitter
		b2= RS232 CTS
		b1= RS232 DCD
		b0= Parallel port busy

R/W $FFFFFA03 B Active Edge Register
		Same configuration bit as GPIP
		(When port bits are used for input only:)
		(0: Interrupt on pin high-low conversion)
		(1: Interrupt on pin low-high conversion)

R/W $FFFFFA05 B Data Direction
		Same configuration bit as GPIP
		(0: Pin becomes an input)
		(1: Pin becomes an output)

R/W $FFFFFA07 B Interrupt Enable Register A
		b7= GPIPb7
		b6= GPIPb6
		b5= Timer A (Sound Frame)
		b4= Receive buffer full
		b3= Receive buffer empty
		b2= Sender buffer empty
		b1= Sender error
		b0= Timer B (HBL)
		(0: Disable Interrupt)
		(1: Enable Interrupt)

R/W $FFFFFA0B B Interrupt Pending Register A
		Same configuration bit as IERA

R/W $FFFFFA0F B Interrupt In Service Register A
		Same configuration bit as IERA

R/W $FFFFFA13 B Interrupt Mask Register A
		Same configuration bit as IERA

R/W $FFFFFA09 B Interrupt Enable Register B
		b7= GPIPb5
		b6= GPIPb4
		b5= Timer C
		b4= Timer D
		b3= GPIPb3
		b2= GPIPb2
		b1= GPIPb1
		b0= GPIPb0
		(0: Disable Interrupt)
		(1: Enable Interrupt)

R/W $FFFFFA0D B Interrupt Pending Register B
		Same configuration bit as IERB

R/W $FFFFFA11 B Interrupt In Service Register B
		Same configuration bit as IERB

R/W $FFFFFA15 B Interrupt Mask Register B
		Same configuration bit as IERB

R/W $FFFFFA17 B Vector Register
		b7-b4= Vector
		b3= Interrupt Mode
		    (0: Automatic End)
		    (1: Software End)

R/W $FFFFFA19 B Timer A Control Register
		b3-b0= Mode
		       %0000: Timer stop, no function executed
		       %0001: Delay mode, divide by 4
		       %0010:	  .	      .     10
		       %0011:	  .	      .     16
		       %0100:	  .	      .     50
		       %0101:	  .	      .     64
		       %0110:	  .	      .     100
		       %0111: Delay mode, divide by 200
		       %1000: Event count mode
		       %1xxx: Pulse extension mode, divide as above

R/W $FFFFFA1B B Timer B Control
		Same as TACR

R/W $FFFFFA1F B Timer A Data

R/W $FFFFFA21 B Timer B Data

R/W $FFFFFA1D B Timer C & D Control
		b6-b4= Timer C mode
		       %000: Timer stop
		       %001: Delay mode, divide by 4
		       %010:	  .	      .    10
		       %011:	  .	      .    16
		       %100:	  .	      .    50
		       %101:	  .	      .    64
		       %110:	  .	      .    100
		       %111: Delay mode, divide by 200
		b2-b0= Timer D mode
		       Same as Timer C mode

R/W $FFFFFA23 B Timer C Data

R/W $FFFFFA25 B Timer D Data

R/W $FFFFFA27 B Sync Character

R/W $FFFFFA29 B USART Control
		b7=    Clock divide
		       (1: div by 16)
		b6-b5= Word Length
		       %00: 8 bits
		       %01: 7 bits
		       %10: 6 bits
		       %11: 5 bits
		b4-b3= Bits Stop Start Format
		       %00:   0    0   Synchronous
		       %01:   1    1   Asynchronous
		       %10:   1    1.5 Asynchronous
		       %11:   1    2   Asynchronous
		b2=    Parity
		b1=    Parity
		       0: odd
		       1: even

R/W $FFFFFA2B B Receiver Status
		b7= Buffer full
		b6= Overrun error
		b5= Parity error
		b4= Frame error
		b3= Found - Search/Break detected
		b2= Match/Character in progress
		b1= Synchronous strip enable
		b0= Receiver enable bit

R/W $FFFFFA2D B Transmitter Status
		b7= Buffer empty
		b6= Underrun error
		b5= Auto turnaround
		b4= End of transmission
		b3= Break
		b2= High bit
		b1= Low bit
		b0= Transmitter enable

R/W $FFFFFA2F B USART data

***********************************************
* KEYBOARD INTERFACE / MOTOROLA MC6850 (ACIA) *
********************************************************************************

R/W $FFFFFC00 B b7-b0= Control
R/W $FFFFFC02 B b7-b0= Data

*******************************************
* MIDI INTERFACE / MOTOROLA MC6850 (ACIA) *
********************************************************************************

R/W $FFFFFC04 B b7-b0= Control
R/W $FFFFFC06 B b7-b0= Data

******************************
* CLOCK / MOTOROLA MC146818A *
********************************************************************************

  W $FFFF8961 B Register select
		 0:	Current Second
		 1:	Second for alarm
		 2:	Current Minute
		 3:	Minute for alarm
		 4:	Current Hour
		 5:	Hour for alarm
		 6:	Day of week (1:Sunday, 2:Monday, 3=...)
		 7:	Day
		 8:	Month
		 9:	Year-1900
		10:	b7= If set, update time in progress
			    don't read time & date registers
		11:	Options
			b7= Write protect time & date
			b5= Enable alarm interrupt
			b4= Interrupt after time updated
			b2= BCD/Binary format
			b1= 12/24 hour format
			b0= Winter/Summer hours
		12:	Interrupt source status
			b6= ?
			b5= Alarm is ringing
			b4= Date is updated
		13:	b7= Battery dead

R/W $FFFF8963 B Selected register

R   $FFFFFF82 W ?

*****************************
* HARD DISK INTERFACE / IDE *
********************************************************************************

R/W $FFF00000 W b15-b0= Data Port Register

R   $FFF00005 B b7-b0= Error Register
		       b7= Bad block mark
		       b6= Uncorrectable error
		       b5= Media change
		       b4= ID-Field not found
		       b3= Media change requested
		       b2= Command aborted
		       b1= Track 0 not found
		       b0= Data Address Mark not found after correct ID field format

  W $FFF00009 B b7-b0= Sector Count Register

  W $FFF0000D B b7-b0= Sector Number Register

  W $FFF00011 B b7-b0= Cylinder Register b7-b0
  W $FFF00015 B b7-b0= Cylinder Register b15-b8

  W $FFF00019 B b7-b0= Drive/Head Register

R   $FFF0001D B b7-b0= Status Register

  W $FFF0001D B b7-b0= Command Register

R   $FFF00039 B b7-b0= Alternate Status Register

  W $FFF00039 B b7-b0= Data Output Register


$000180|SCC Interrupt						   |SD
$0001BC|SCC Interrupt						   |SD
