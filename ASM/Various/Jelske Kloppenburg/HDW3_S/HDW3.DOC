hdwait - A third revision (a third alternative)
===============================================

I was always wondering, why hdwait did not want to work with my SH205,
it worked fine with the Megafile30 at my office.

When I was changing to an embedded SCSI device using the ICD adapter as
well as the do-it-yourself adapter from c't computer magazine, called ALIA,
I discovered that the program would not work.

Jelske (*) told me, he does not know too much of SCSI, hdwait was a
try-and-error product. So what did he do?
He sends a test_unit_ready command and waits for the status byte to appear.
Megafiles send their status byte when they are ready. A "normal" SCSI
device will immediately return the status code (you should not block the bus
for 15 seconds of spin-up time), with the check bit set. You are then supposed
to investigate further with a request_sense command.

So I propose a solution, which I have tested for:
- SH204 will not work.
- SH205 (one works, another one only if the disk is turned on with a little
	 delay).
- Megafile30 (works)
- Megafile60 (works, if the Atari is turned on with a little delay)
- SCSI Devices (works for my combination of ICD or ALIA with ST296N)
Beware: The harddisks may be different, even if they show the same label.
Some of them simply do not do what they are expected to, especially the
Atari disks. But even with SCSI disks you may have surprising effects.
You may have success if you change the tuneable parameters (if you know
what they do).

Disclaimer:
===========
The programs contained in this distribution have been tested to satisfy my
personal needs. They use very low level programming at the hard disk
interface. If you use them, you do so at your own risk, they come without
any  warranty. I am taking no liability for damages done to your hard- or
software.

Problems, bugs, features, ...:
- The request_sense command to verify the disk to be really spinning up is
  ommitted, a check bit (or at least any error condition) is trusted to
  indicate spin-up condidtion.
  > Bootsector program space is limited to 480 bytes.
  > I was to lazy to program DMA for the four result bytes of request_sense
    with the problems bringing them through the FIFO buffer.
- The assembler code is not exactly identical to the bootsector, the
  optimizer changes the code in some places.
- The timeout times and retry counters may have to be adjusted.
- My SCSI disk may become slow during spin-up eating its command bytes.
  The distribution comes with a long command timeout, which should not harm
  other devices, but may be a nuisance detecting unavailable devices.
  You should decrease the timeout for Atari disks or decrease the number of
  devices checked to get faster responses.
- For every target at the ACSI bus only logical unit 0 (LUN) is checked, I
  hope, not too many of the standard MFM or RLL controllers in Atari
  harddisks have been equipped with a second disk.
- For every ALIA target at the ACSI bus only LUN 0 (s.a.) and SCSI id 0 are
  checked. Changing the SCSI id for target n requires some select operations
  at target n+4, this would require a different program and I do not know
  exactly how to do it.
- A SH204 will always return a status byte set to 0, this is a firmware
  (hardware) bug of this disk.
- If the loader "checkout" is called without the bootsector image "hdw3.tos"
  available in the same directory, it adjusts the sector checksum to
  indicate an executable bootsector. So you might look up and change the
  tuneable parameters with the help of the assembler list file "hdw3.lst"
  using a disk monitor. Afterwards the checksum has to be recalculated.
- Some virus checkers may recognize the executable boot sector and give you
  a warning. I is my strategy to avoid boot sector viruses by booting from
  a well known, write protected disk. If you see the hdwait messages, you
  know exactly, what kind of program your bootsector contains.

Yours
	mario@tisu1.ti.informatik.uni-frankfurt.de

(*) Jelske Kloppenburg (kloppenburg@gmd.de) is the author of the original
    version of "hdwait".

The distribution includes the following files:
hdw3.doc	this one
checkout.prg
checkout.c
checkout.prj	Build the bootsector or checkout interactively (with debugger)
hdw3.s		Assembler code for the bootsector
hdw3.lst	List file from the assembler to help with patches
hdw3.tos	The program to be packed into the bootsector
hdw3.prj	Build the bootsector image
----
The sources are done for the TurboC Development System 2.0
