' Exemple de r‚cup‚ration de fichier *.IGN monochrome cr‚‚ avec EIKONA.
' Ce listing est librement copiable, vous pouvez en r‚cup‚rer les routines
' et les utiliser dans vos programmes personnels.
'
'       B.MARICHAL      02/93
'
RESERVE 32000
OPTION BASE 0
'
DIM wind&(4)
@init_trees             ! initialiser les diff‚rents arbres d'objets
'
~GRAF_MOUSE(0,0)        ! curseur = flŠche
~WIND_GET(0,4,wind&(0),wind&(1),wind&(2),wind&(3))
SUB wind&(0),1          ! modifier les dimensions du fond de l'‚cran...
SUB wind&(1),1
ADD wind&(2),2
ADD wind&(3),2
OB_X(newdesk%,0)=wind&(0)
OB_Y(newdesk%,0)=wind&(1)
OB_W(newdesk%,0)=wind&(2)
OB_H(newdesk%,0)=wind&(3)
'
~WIND_SET(0,14,(SHR(newdesk%,16) AND &HFFFF),(newdesk% AND &HFFFF),0,0)
~FORM_DIAL(3,0,0,0,0,wind&(0),wind&(1),wind&(2),wind&(3))
'                       ! le nouveau bureau est install‚ et dessin‚
MENU menu_str$()        ! activer le menu
'
REPEAT
  IF (event=0) THEN
    event=EVNT_MULTI(18,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,mx&,my&,mk&,bid&,bid&,nk&)
  ENDIF
  IF ((event AND 16)<>0)                ! ‚vŠnement 'message' ?
    IF (MENU(1)=10)                     ! clic dans le menu ???
      SELECT (MENU(5))                  ! oui, effectuer les actions requises
      CASE 23                           ! pourquoi ??? et ben parce que, na !
        ~FORM_ALERT(2,alerte$)
      CASE 32                           ! idem...
        end=1
      ENDSELECT
      MENU OFF                          ! d‚s‚lectionner le titre de menu
    ENDIF
    event=event AND (NOT 16)
  ELSE
    IF ((event AND 2)<>0)               ! ‚vŠnement 'clic' ??
      i&=OBJC_FIND(newdesk%,0,1,mx&,my&)! oui, chercher un objet
      IF (i&>0)                         ! trouv‚ ??
        ~GRAF_MKSTATE(mx&,my&,mk&,bid&) ! oui, tester le boutons gauche
        IF (mk&<>0)                     ! actif ??
          oldx&=@getx(newdesk%,i&)      ! oui, d‚placer l'icone
          oldy&=@gety(newdesk%,i&)
          ~GRAF_DRAGBOX(OB_W(newdesk%,i&),OB_H(newdesk%,i&),oldx&,oldy&,wind&(0),wind&(1),wind&(2),wind&(3),newx&,newy&)
          setx(newdesk%,i&,newx&)       ! fixer les coords
          sety(newdesk%,i&,newy&)
          ~FORM_DIAL(3,0,0,0,0,oldx&,oldy&,OB_W(newdesk%,i&),OB_H(newdesk%,i&))
          '                             ! redessiner...
          ~FORM_DIAL(3,0,0,0,0,newx&,newy&,OB_W(newdesk%,i&),OB_H(newdesk%,i&))
        ELSE                            ! redessiner ici aussi
          OB_STATE(newdesk%,i&)=OB_STATE(newdesk%,i&) XOR 1
          ~FORM_DIAL(3,0,0,0,0,@getx(newdesk%,i&),@gety(newdesk%,i&),OB_W(newdesk%,i&),OB_H(newdesk%,i&))
        ENDIF                           ! simple clic -> s‚lectionner icone
      ELSE
        ~GEMDOS(2,7)                    ! objet non trouv‚ : driIIing !
      ENDIF
      event=event AND (NOT 2)
    ENDIF
  ENDIF
UNTIL end=1
'
MENU KILL                               ! enlever le menu
~WIND_SET(0,14,0,0,0,0)                 ! remettre l'ancien bureau
END
'
FUNCTION getx(tree%,obj&)
  LOCAL x&,y&
  ~OBJC_OFFSET(tree%,obj&,x&,y&)
  RETURN x&
ENDFUNC
'
FUNCTION gety(tree%,obj&)
  LOCAL x&,y&
  ~OBJC_OFFSET(tree%,obj&,x&,y&)
  RETURN y&
ENDFUNC
'
PROCEDURE setx(tree%,obj&,x&)
  LOCAL oldx&
  oldx&=@getx(tree%,obj&)
  OB_X(tree%,obj&)=OB_X(tree%,obj&)+(x&-oldx&)
RETURN
'
PROCEDURE sety(tree%,obj&,y&)
  LOCAL oldy&
  oldy&=@gety(tree%,obj&)
  OB_Y(tree%,obj&)=OB_Y(tree%,obj&)+(y&-oldy&)
RETURN
'
PROCEDURE init_trees
  '
  ' >>>>>>>>>>> Chaine d'alerte <<<<<<<<<<<<
  '
  alerte$="[0][ Programme de d‚monstration  |d'utilisation  des  fichiers|*.IGN cr‚‚s avec EIKONA| Vous  pouvez  d‚placer  et|s‚lectionner les ic“nes...][DEMO2.GFA|   OK   ]"
  '
  '
  ' >>>>>>>>> D‚finition du menu <<<<<<<<<<<
  '
  DIM menu_str$(13)
  '
  menu_data:
  '
  DATA "","  A propos de cet exemple...  ","------------------------------",1,2,3,4,5,6,
  DATA " Fichiers","  Quitter  ",
  DATA "*"
  '
  RESTORE menu_data
  '
  READ a$
  WHILE a$<>"*"
    menu_str$(i&)=a$
    INC i&
    READ a$
  WEND
  '
  '
  ' >>>>>>>>>>>> D‚finition de l'iconblock de la 1Šre icone <<<<<<<<<<<<<<
  '
  DIM leop_data&(64),leop_mask&(64),leop_icb&(17)
  '
  ' Fichier de d‚finition d'ic“ne EIKONA
  '
  leop_w&=&H20
  leop_h&=&H20
  leop_size&=&H40
  '
  leop_d:
  DATA &h0000, &h0000, &h0000, &h0FE0
  DATA &h08BA, &h11C0, &h04FE, &h2000
  DATA &h1CFE, &h1FE0, &h0E7C, &h0010
  DATA &h1FFF, &hFC10, &h0FFF, &hFFE0
  DATA &h13FF, &hFF80, &h007F, &hFF80
  DATA &h003F, &hCFC0, &h007F, &h1FC0
  DATA &h0070, &h3DC0, &h01F0, &h7BE0
  DATA &h02F0, &hBDE0, &h00A8, &h2950
  DATA &h0000, &h0000, &h0000, &h0FE0
  DATA &h08BA, &h11C0, &h04FE, &h2000
  DATA &h1CFE, &h1FE0, &h0E7C, &h0010
  DATA &h1FFF, &hFC10, &h0FFF, &hFFE0
  DATA &h13FF, &hFF80, &h007F, &hFF80
  DATA &h003F, &hCFC0, &h007F, &h1FC0
  DATA &h0070, &h3DC0, &h01F0, &h7BE0
  DATA &h02F0, &hBDE0, &h00A8, &h2950
  '
  leop_m:
  DATA &h1FFF, &hFFF8, &h7FFF, &hFFFE
  DATA &h7FFF, &hFFFE, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &hFFFF, &hFFFF
  DATA &hFFFF, &hFFFF, &h7FFF, &hFFFE
  DATA &h7FFF, &hFFFE, &h1FFF, &hFFF8
  '
  DIM leop_str|(13)
  leop_str$="L‚opards"
  cptr%=*leop_str$
  i&=WORD{cptr%+4}
  cptr%=LONG{cptr%}
  FOR j&=0 TO i&-1
    leop_str|(j&)=BYTE{cptr%}
    INC cptr%
  NEXT j&
  '
  RESTORE leop_d
  '
  FOR i&=0 TO leop_size&-1
    READ a$
    WORD{V:leop_data&(i&)}=VAL(a$)
  NEXT i&
  '
  RESTORE leop_m
  '
  FOR i&=0 TO leop_size&-1
    READ a$
    WORD{V:leop_mask&(i&)}=VAL(a$)
  NEXT i&
  '
  '
  LONG{V:leop_icb&(0)}=V:leop_mask&(0)
  LONG{V:leop_icb&(2)}=V:leop_data&(0)
  LONG{V:leop_icb&(4)}=V:leop_str|(0)
  leop_icb&(6)=&H1000
  leop_icb&(7)=0
  leop_icb&(8)=0
  leop_icb&(9)=22
  leop_icb&(10)=0
  leop_icb&(11)=leop_w&
  leop_icb&(12)=leop_h&
  leop_icb&(13)=0
  leop_icb&(14)=32
  leop_icb&(15)=74
  leop_icb&(16)=8
  '
  '
  ' >>>>>>>>>>>> D‚finition de l'iconblock de la 2nde icone <<<<<<<<<<<<<<
  '
  DIM logo_data&(64),logo_mask&(64),logo_icb&(17)
  '
  ' Fichier de d‚finition d'ic“ne EIKONA
  '
  logo_w&=&H20
  logo_h&=&H20
  logo_size&=&H40
  '
  logo_d:
  DATA &h0001, &h0000, &h0002, &h8000
  DATA &h0004, &h4000, &h0008, &h2000
  DATA &h0010, &h1000, &h0020, &h0800
  DATA &h0040, &h0400, &h0080, &h0200
  DATA &h0100, &h0100, &h0200, &h0080
  DATA &h0480, &h0040, &h0940, &h0020
  DATA &h1220, &h0010, &h2410, &h0008
  DATA &h48C8, &h3F04, &h9124, &h4082
  DATA &h4BD8, &h8041, &h2499, &h3022
  DATA &h1279, &hC814, &h094E, &h7F8F
  DATA &h0482, &h3007, &h0201, &h0007
  DATA &h0100, &h8007, &h0080, &h6007
  DATA &h0040, &h1FE7, &h0020, &h021F
  DATA &h0010, &h0407, &h0008, &h0800
  DATA &h0004, &h1000, &h0002, &h2000
  DATA &h0001, &h4000, &h0000, &h8000
  '
  logo_m:
  DATA &h0000, &h0000, &h0001, &h0000
  DATA &h0003, &h8000, &h0007, &hC000
  DATA &h000F, &hE000, &h001F, &hF000
  DATA &h003F, &hF800, &h007F, &hFC00
  DATA &h00FF, &hFE00, &h01FF, &hFF00
  DATA &h037F, &hFF80, &h06BF, &hFFC0
  DATA &h0DDF, &hFFE0, &h1BEF, &hFFF0
  DATA &h3737, &hC0F8, &h6EDB, &hBF7C
  DATA &h3427, &h7FBE, &h1B66, &hCFDC
  DATA &h0D86, &h37E8, &h06B1, &h8070
  DATA &h037D, &hCFF8, &h01FE, &hFFF8
  DATA &h00FF, &h7FF8, &h007F, &h9FF8
  DATA &h003F, &hE018, &h001F, &hFC00
  DATA &h000F, &hF800, &h0007, &hF000
  DATA &h0003, &hE000, &h0001, &hC000
  DATA &h0000, &h8000, &h0000, &h0000
  '
  DIM logo_str|(13)
  logo_str$="EIKONA Logo"
  cptr%=*logo_str$
  i&=WORD{cptr%+4}
  cptr%=LONG{cptr%}
  FOR j&=0 TO i&-1
    logo_str|(j&)=BYTE{cptr%}
    INC cptr%
  NEXT j&
  '
  RESTORE logo_d
  '
  FOR i&=0 TO logo_size&-1
    READ a$
    WORD{V:logo_data&(i&)}=VAL(a$)
  NEXT i&
  '
  RESTORE logo_m
  '
  FOR i&=0 TO logo_size&-1
    READ a$
    WORD{V:logo_mask&(i&)}=VAL(a$)
  NEXT i&
  '
  '
  LONG{V:logo_icb&(0)}=V:logo_mask&(0)
  LONG{V:logo_icb&(2)}=V:logo_data&(0)
  LONG{V:logo_icb&(4)}=V:logo_str|(0)
  logo_icb&(6)=&H1000
  logo_icb&(7)=0
  logo_icb&(8)=0
  logo_icb&(9)=22
  logo_icb&(10)=0
  logo_icb&(11)=logo_w&
  logo_icb&(12)=logo_h&
  logo_icb&(13)=0
  logo_icb&(14)=32
  logo_icb&(15)=74
  logo_icb&(16)=8
  '
  '
  ' >>>>>>>>>>>>>> D‚finition de l'arbre d'objets du fond <<<<<<<<<<<<<<<<<<<<
  '
  DIM desk_tab&(3*12),obspec%(3)
  '
  obspec%(0)=&HFE11C3
  obspec%(1)=V:leop_icb&(0)
  obspec%(2)=V:logo_icb&(0)
  '
  desk_data:
  '
  DATA &hffff, &h0001, &h0002, &h0014, &h0000, &h0000, &h12345678, &h0000, &h0000, &h0000, &h0000
  DATA &h0002, &hffff, &hffff, &h001f, &h0000, &h0000, &h12345678, &h0005, &h0002, &h4a00, &h2800
  DATA &h0000, &hffff, &hffff, &h001f, &h0000, &h0000, &h12345678, &h0010, &h0002, &h4a00, &h2800
  '
  '
  RESTORE desk_data
  '
  FOR i=0 TO 2
    FOR j=0 TO 11
      READ a$
      IF (j=6) THEN
        LONG{V:desk_tab&(12*i+j)}=obspec%(i)
        j=7
      ELSE
        WORD{V:desk_tab&(12*i+j)}=VAL(a$)
      ENDIF
    NEXT j
    ~RSRC_OBFIX(V:desk_tab&(0),i)
  NEXT i
  '
  newdesk%=V:desk_tab&(0)
  '
RETURN
