
     ****************** Resource to Source *******************

                       May '90   Roy Glover
		       Oct '91	 Gary Burke

    If you are partial to assembly programming and like to hand
edit or include your resource files in the source file of your
program, then you know how tedious and time consuming it can be to
construct a resource by hand, or convert the 'C' source from
Resource Construction Set to assembler source.
    RSC_TO_S takes a standard .RSC file and converts it to a
formated assembler source text, which can be saved as an .S file,
and printed to screen or printer. The .S file can then be included
in your program source, edited, re-arranged, and reassembled.

               About the program:

    This program was written with ASSEMPRO by Abacus, and the converted
source is in that format. I have included the source for RSC_TO_S
so it should be easy to make it compatible with MADMAC or other
assemblers.
    RSC_TO_S deletes all unnecessary null strings created by Resource
Construction Set (such as nulls pointed to by te_ptmplt and te_pvalid
in a g_text object), and redirects the pointers to a common null
string. This can shorten the resource considerably if there are a lot
of g_text and g_boxtext tedinfos. This will not work on non-standard
.RSC files where there are intentional pointers to long strings of
zero bytes, so there are options in the source code to include all
nulls and also to print the offsets of strings, tedinfos, bitblks,
iconblks, and image data as comments(see RSC_TO_S.S).
    I hope you will find this program as useful as I have for
developing resources more easily.
    Also included is FIXRSC, a subroutine that fixes up the pointers
in a GEM resource file so that it can be used by AES.

(Check out RSC_DRAW which allows you to easily load and display
 .RSC files to see what your resource looks like on a blank screen.)


     ****************** Resource to Source *******************

			   Modified
		       Oct '91	 Gary Burke

    This program was converted to Devpac2 or higher, by Hisoft.

    I have included a sample program showing how to use the converted
RSC file.

    The file fixrsc.s must be included into your source, along with the
converted RSC file. I did find a couple bugs in the fixrsc.s file, so 
hopefully all should work fine now.

    Procedure is simple assemble and get your program to work with a
resource file.

	for the rsrc_load call replace with:
		lea	trees,a0
		bsr	fixrsc
	for each
		rsrc_gaddr	#0,#n
		move.l	addr_out,xxx
	replace with:
		move.l	trees+(4*n),xxx

	for each
		rsrc_gaddr	#15,#n
		move.l	addr_out,xxx
	replace with:
		move.l	freestrings+(4*n),xxx

	for each
		rsrc_gaddr	#16,#n
		move.l	addr_out,xxx
	replace with:
		move.l	freeimages+(4*n),xxx

		n = box name included with the rsc.i file
