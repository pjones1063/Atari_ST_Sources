;----------------------------------------------------------------------------
;File name:	STNGDEVP.DOC			Revision date:	2000.07.06
;Creator:	Ulf Ronald Andersson		Creation date:	1998.09.09
;(c)1998 by:	Ulf Ronald Andersson		All rights reserved
;Feedback to:	dlanor@ettnet.se		Released as FREEWARE
;----------------------------------------------------------------------------
;--- !!! ---  Please read the full text below at least once.  --- !!! ---
;This will help you avoid some simple but otherwise inescapable problems.
;----------------------------------------------------------------------------

STNGDEVP Introduction:
----------------------

STNGDEVP is a development package for STinG (ST internet new Generation),
the TCP/IP stack created by Peter Rottengatter as a replacement for STiK.
As a matter of fact, some of the modules currently part of the STinG
distribution are based on this development package...

The predecessor of this package was STNGPASM, which was intended to let
all development be done with PASM, the assembler accompanying Pure C.
That intention was abandoned however, on discovering that PASM contains
several bugs that prevent fully flexible use of the macro facilities.

At that time I started to retranslate the (by this time huge) libraries
back into the DevPac dialect, the language in which I first started to
develop the oldest of them... :-)

DevPac definitely does allow the flexible macro use I require, so now
the package will allow bugfree creation of STinG modules, client, and
servers in 100% assembly language, and with access to high level macro
functions to eliminate the drawbacks of low level programming.

This is accomplished by extensive use of macros, defining not only short
forms for system calls (as is the custom), but also for creating new data
structures and assembly-time control structures of various kinds.

Most of this can be transparent to a user of the macro libraries, that is:
he/she does not have to bother knowing about it even..., but when a need
arises for these features they are ready and waiting.

Naturally these libraries will be updated as new needs and ideas come up.
(In fact I add or modify something almost every day...)
;----------------------------------------------------------------------------

Package manifest:
-----------------

NB: This manifest looks horrible unless your TAB spacing is 8 characters.

STNGDEVP\		The main folder represents the directory where
			you have your DevPac inclusion file folder.

    STNGDEVP.DOC	This doc should be moved elsewhere.  It was put here
			only to make sure you would find it easily.

    RA_STRUC.I		Macros for C-style structure declarations
    RA_SYS.I		System level macros and constants (hardware etc)
    RA_TOS.I		TOS interface macros for BIOS, XBIOS, GEMDOS
    RA_ERR.I		Constants for system error codes
    RA_GEM.I		GEM interface macros for VDI and AES
    RA_APP.I		Application init for flexible APP/ACC/TTP etc
    RA_ARG.I		Simple program argument analyzer
    RA_LA.I		Line-A (ie: VDI) variable definitions and macros
    RA_JAR.I		Macros to handle cookie jar (growth capable)
    RA_AV.I		Interface macros for AV/VA/MP protocols
    RA_XB.I		Macros for XBRA vector bending protocol
    RA_SIM.I		Simulated form_alert for TOS/TTP programs
    RA_RAM.I		RAM allocation macros. (To manage APP heaps.)
    RA_LEDP.I		Macros for control of LEDPANEL
    RA_SLB.I		Macros to make/use SLB libs for MagiC or BetaDOS/MetaDOS

    STING\		This folder contains the TCP/IP related libs
			which also require some of the other libs.
	
	DOMAIN.I	Defines macros useful to manipulate domain
			names (can be used for other strings too)

	LAYER.I		DevPac version of LAYER.H, defines important
			structures and macros of STX module programs

	TRANSPRT.I	DevPac version of TRANSPRT.H, defines important
			structures and macros of client/server programs

	PORT.I		DevPac version of PORT.H, defines structures and
			constants for port STX modules

	NET_TCON.I	Network time conversion routines.  These are what
			my time server programs use to handle conversions.
			(unix-like TZ is still unfinished in this lib.)

	NETD.I		Macros and structures for NetD server programs.

;----------------------------------------------------------------------------
Some notes on some of the files mentioned above:

Due to the more advanced macro capabilities of DevPac (as compared to PASM)
it is no longer necessary to 'include' everything in the the main APP.  The
libraries that need to refer to other libraries are capable of doing so in
an efficient manner.  You just need to include the files that you know you
need something from, and they will themselves make sure of including those
other files that they may need.  (Just as C-language '.H' files really.)


RA_STRUC.I:
	This defines C-like structure definition macros which are used
	extensively by most of the other '.I' libraries. It allows fast
	'porting' of C programs and header files into DevPac dialect.

RA_SYS.I:
	This defines lots of constants relating to Atari systems, such as
	hardware registers etc.  But it also defines many macros of great
	importance to high-level assembly programming. These are essential
	components in the STinG API as constructed in TRANSPRT.I, and are
	also used for many other interface macros.

RA_TOS.I:
	This defines the interface functions for BIOS, XBIOS, GEMDOS
	and also defines various associated data structures (DTA, BPB, etc)
	It is essential for efficient use of TOS, and now contains specs
	for most of the XBIOS and GEMDOS functions added in later years.
	(Somehow BIOS has remained unchanged. Still just 12 functions.)
	If you include RA_TOS.I, you will get RA_STRUC.I and RA_SYS.I too,
	so you do not need to include these explicitly then.

TRANSPRT.I:
	This defines the normal client interface of STinG, as well as all
	the data structures needed by such clients.  It was originaally a
	translation of Peter's original TRANSPRT.H, and then additions
	have been made to keep it up to date with changes of that file.

LAYER.I:
	This defines the server/module interface of STinG as well
	as some data structures that they need.  This is a translation of
	Peter's original LAYER.H

PORT.I:	
	This defines some special stuff for port driver modules.
	This too is a translation from Peter's original PORT.H

Normal clients/servers as well as modules will all need at least the four
topmost of the six files mentioned above, and port modules will probably
need all six of them.
;----------------------------------------------------------------------------

Apologia (mea culpa):
---------------------

As of yet I have not had time to write much documentation for this package,
and since it is quite extensive it will take a long time to complete.
Also, since I still intend this package to grow and develop, there will never
be a time when everything has complete and up to date documentation.

I'm sorry but these are the hard facts.  I've written these libs entirely for
my own satisfaction, and though I do intend to document them a bit better, I
am not going to dedicate all my time to it.

Experienced old hands at macro assembly will manage anyhow, studying my example
programs as well as the libs themselves.  Those less experienced will just have
to wait for me (or some volunteer) to produce more detailed documents.
;----------------------------------------------------------------------------

Origins of this package:
------------------------

Three of the .I files were translated for DevPac from Peters .H files by me.
All other files in this package were created by me at one time or another.
Some of the oldest libraries were created over seven years ago, and this is
the reason why they are still marked so in the copyright fields of headers.

A few were created during the development of this package, but most were
translated for PASM from my earlier DEVPAC libraries. As is often the case
this translation caused me to modify and improve many things, so that while
the PASM dialect lacks many powerful features of DEVPAC, the package as a
whole actually gained strength from the translation side effects.

Now that entire process has been repeated, but this time going back to the
more powerful macro dialect, so again the libraries have gained in strength.

NB: I plan further modifications and improvements, so once you start using a
    lib do *not* just throw away old versions when new ones arrive.  First
    make sure that your own sources can be adapted to the new libs, and then
    complete the package update.
;----------------------------------------------------------------------------

Copyright release by Ulf Ronald Andersson:
------------------------------------------

I release all files of my own creation in this package for free use and also
for free distribution in the form of the original unbroken release package.

None of them may be distributed separately, since this undermines usefulness,
except for the "sting" files which will be updated separately.  It is thus
permitted to distribute such updates separately from the STNGDEVP package.

No distribution at all is allowed for which the distributing agent or any
other person or company charges a fee, or increases a fee otherwise charged.
Such distribution is only legally possible by contacting me, and getting my
agreement to allow such distribution.  (Which I probably will refuse.)

The intention above of the words "free use" includes the use of the package
to create new software, which will be entirely the property of its author,
and the rights of which will in no way be affected by the use of this
package in its creation.
;----------------------------------------------------------------------------
;End of file:	STNGDEVP.DOC
;----------------------------------------------------------------------------
