  	include	MACRO&CO.S
mem_data	equ		$c3002
old_effect	equ		1
coupe_it	equ		1

pmmu_off	macro
	pea	(a0)
	lea	save_pmmu(pc),a0
	pmove.l	tc,(a0)
	and.b	#%01111111,(a0)	;inactive la PMMU
	pmove.l	(a0),tc
	move.l	(sp)+,a0
	endm

pmmu_on		macro
	pea	(a0)
	lea	save_pmmu(pc),a0
	or.b	#$80,(a0)
	pmove.l	(a0),tc
	move.l	(sp)+,a0
	endm

e_cache	macro	\1
	movec	cacr,d0
	or.w	\1,d0
	movec	d0,cacr
	endm

d_cache	macro	\1
	movec	cacr,d0
	and.w	\1,d0
	movec	d0,cacr
	endm

sync	macro	\1
	cmp.l	\1,$200.w
	blt.s	*-8
	endm


	TEXT

start            
	pea	$200000
	trap	#1
	lea	big_pile,a7
	move.l	#nextg,$10.w
	dc.b	'ThIs LOaDER Include 32 VOIZs 33 khz InTerRupteD SoUnDtRacK Dsp-RoUt !!?',0
	even
nextg
	bsr		test_memory
	tst.l	d0
	bmi		fin_end2
	pea	$58ffff
	trap	#14
	move	d0,anc_mode
	bsr	execpt
	movec	cacr,d0
	move.l	d0,save_cache
	move.l	#$3111,d0
	movec	d0,cacr
	bsr	test_falc
	cmp.w	#$4100,d0
	ble	fin_end
	cmp.w	#$4200,d0
	bgt	fin_end
	move.l	#mem_data,d0
	add.l	#20,d0
	or.b	#%111,d0
	and.b	#$fe,d0
	move.l	d0,fin_ptr
	vsync
	jsr	SAVE_ALL
	ifne	coupe_it	
	move.l	$fffffa06.w,it_
	move.l	it_(pc),new_it_
	clr.l	$fffffa06.w
	endc
	jsr	init_trap(pc)
	move.l	#rt_e,$80+5*4.w
	jsr	init_player_routine(pc)
	st	(a1)
	move.l	#vbl,$70.w
	move.w	#$2100,sr	
	;jmp	next2(pc)	;debug
	ifne	coupe_it	
	clr.l	new_it_
	bset	#5,new_it_+1
	move.l	$fffffa06.w,it_
	endc
	vsync	
	asave_video
	asave_screen
	asave_palette
	vsync
	clr.w	$208.w		;		
	bsr    	INTRO1
	clr.w	$208.w		;		
	bsr	AMOUR1
	clr.w	$208.w
	move.l	#$3111,d0
	movec	d0,cacr
	bsr	CHATO1
	d_cache		#$ffff-(1<<8)	
next2
	move.l	(start_player+info_module),a1
	move.w	#-2,2(a1)	;on fait un pti fade volume en fixant l'increment
	jsr	eff_trans
	move.l	(start_player+info_module),a1
.fade_down
	vsync
	tst		4(a1)		
	bne.s	.fade_down
	st	(a1)	;coupe le player
	move.l	#mem_data,d0
	addq.l	#4,d0
	and.b	#$fe,d0
	move.l	d0,fin_ptr
	lea	module2,a0
	bsr	load_module
	move.l	mod_ptr,a0
	jsr	(start_player+pinit_module)	
	tst	d0
	bmi	no_fine_module
	bsr	CREDIT_YOP
	move.l	#$3011,d0
	movec	d0,cacr
	bsr	PLASMA1
	bsr	FRACTAL1
	bsr	D3_rout
	move.l	(start_player+info_module),a1
	move.w	#-1,2(a1)	;on fait un pti fade volume en fixant l'increment
.fade_down2
	vsync
	tst	4(a1)		
	bne.s	.fade_down2
	st	(a1)	;coupe le player
	move.l	#mem_data,d0
	addq.l	#4,d0
	and.b	#$fe,d0
	move.l	d0,fin_ptr
	lea	module3,a0
	bsr	load_module
	move.l	mod_ptr,a0
	jsr	(start_player+pinit_module)	
	tst	d0
	bmi	no_fine_module
	move.l	(start_player+info_module),a1
	move	#$0,4(a1)	;volume a 0
	move.w	#1,2(a1)	;on fait un pti fade volume en fixant l'increment
	sf	(a1)	;enable playing
	move.l	#$00010100,6(a1)	;regles 8 voies
	move.l	#$00010100,10(a1)	
.C	btst.b	#0,$fffffc00.w		! Keyboard flush ...
	beq.s	.C1
	move.b	$fffffc02.w,d0
	bra.s	.C
.C1
	bsr	end_part_rout
yo
	move.l	(start_player+info_module),a1
	move.w	#-1,2(a1)	;on fait un pti fade volume en fixant l'increment
.fade_down3
	vsync
	tst	4(a1)		
	bne.s	.fade_down3
	st	(a1)	;coupe le player
	vsync
	arestore_video
	arestore_screen
	arestore_palette
	vsync
	bsr	restore_all
	jsr	(start_player+pend_player)	;restitue la configuration initiale 
fin_end
	move.l	save_cache(pc),d0
	movec	d0,cacr
	move	anc_mode,-(sp)
	move	#$58,-(sp)
	trap	#14
	addq.l	#4,sp
fin_end2
	clr.w	-(sp)
	trap	#1	
no_fine_module
	addq.l	#4,sp
	clr.w	-(sp)
	trap	#1	

test_memory	
	moveq	#0,d0
	move.l	#fin,d0
	cmp.l	#mem_data,d0
	blt.s	.go_on	
	moveq	#-1,d0
.go_on	
	rts

test_falc
	move.l	$fffffa06.w,-(sp)
	lea	$fffffa07.W,a0
	moveq	#0,d0
	movep.w	d0,(a0)
	lea	$80.w,a0
	pmove.l	tc,(a0)
	and.b	#$ff-$80,(a0)
	pmove.l (a0),tc
	clr.w	$468.w
	tst.w	$468.w
	beq	*-4
	clr.w	$468.w
	moveq	#0,d0
kl	tst.w	$468.w
	bne	next
	addq	#1,d0
	bra.s	kl
next	lea	$80.w,a0
	or.b	#$80,(a0)
	pmove.l (a0),tc
	move.l	(sp)+,$fffffa06.w
	rts

VBL
	trap	#3
	trap	#4
	trap	#5
	addq.l	#1,$466.w
	;tst.b	$208.w
	;beq.s	rt_e
	;move.l	#$ff000000,$fffff9800.w	
	rte
rt_e
	;move.l	#$ff,$fffff9800.w	
	rte
intro1	
;*************** INTRO ****************
	lea	INTRO,a0
	move.l	FIN_PTR,a1
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	move.l	(start_player+info_module),a1
	sf	(a1)	;enable playing
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC
	jsr	([FIN_PTR.l])
	rts

fractal1
;*************** INTRO ****************
	lea	FRACTAL,a0
	move.l	FIN_PTR,a1
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC
	jsr	([FIN_PTR.l])
	rts
	
amour1	
;*************** AMOUR ****************
	lea	AMOUR,a0
	move.l	FIN_PTR,a1
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC
.lop
	vsync
	tst.b	$208.w
	beq.s	.lop
	jsr	([FIN_PTR.l])
	rts
chato1
;**********    CHATO  ******************
	lea	CHATO,a0
	move.l	FIN_PTR,a1
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC

	move.l	file_lenght(pc),d1
	add.l	fin_ptr,d1
	add.l	-18(a0),d1	;ajoute section bss
	move.l	d1,a1

	move.l	#1024*4096,d0
	move.l	a1,buffer+parametre1
	lea	chato_dat,a0
	bsr	LOAD_FILE	;a.dat
	jsr	([FIN_PTR.l])
	rts

;**********    PLASMA  ******************
plasma1
	lea	PLASMA,a0
	move.l	FIN_PTR,a1
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC
	jsr	([FIN_PTR.l])
	rts

;**********    3d  ******************
D3_rout
	lea	d_3,a0
	move.l	FIN_PTR,a1
	bsr	cls_bss
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC
	vsync
	jsr	([FIN_PTR.l])
	rts

cls_bss
	pea	(a1)
	moveq	#0,d0
	move.l	#500000,d1
.loop
	move.l	d0,(a1)+
	move.l	d0,(a1)+
	move.l	d0,(a1)+
	move.l	d0,(a1)+
	sub.l	#4*4,d1
	bgt.s	.loop
	move.l	(sp)+,a1
	rts

;**********    eff  ******************
eff_trans
	lea	eff,a0
	move.l	FIN_PTR,a1
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC
	jsr	([FIN_PTR.l])
	rts

;**********    credit  ******************
credit_yop
	lea	credit,a0
	move.l	FIN_PTR,a1
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC

	move.l	(start_player+info_module),a1
	move	#$4000,4(a1)	;volume a maxi
	move.w	#1,2(a1)	;on fait un pti fade volume en fixant l'increment
	sf	(a1)	;enable playing
	move.l	#$00010100,6(a1)	;regles 8 voies
	move.l	#$00010100,10(a1)	
	clr.w	$208.w		;		

	jsr	([FIN_PTR.l])
	rts
;*****end_part**************************
end_part_rout
	lea	end_p,a0
	move.l	FIN_PTR,a1
	move.l	#1024*4096,d0
	bsr	LOAD_FILE
	move.l	FIN_PTR,a0
	bsr	DEPACK
	move.l	FIN_PTR,a0
	bsr	RELOC
	jsr	([FIN_PTR.l])
	rts
;**************************************
load_module
	move.l	fin_ptr,a1
	move.l	#1024*4096,d0
	bsr	load_file
	move.l	fin_ptr,a0
	move.l	a0,mod_ptr
	cmp.l	#'ATM5',(a0)
	bne.s	.no_cpt	
	move.l	4(a0),d0
	add.l	d0,fin_ptr
	bsr	depack
	add.l	#3000*31,fin_ptr	;secu secu
	rts
.no_cpt	
	add.l	file_lenght,a0
	move.l	a0,fin_ptr
	add.l	#3000*31,fin_ptr	;secu secu
	rts
execpt
	lea	$8,a0
	lea	it(pc),a1	
	move	#8-1,d0
.loop
	move.l	a1,(a0)+
	dbf	d0,.loop
	rts
it
	move.w	#$2700,sr
	move.l	#it_v,$70.w
	move.l	#it_v,$134.w
	lea	$fffffa00.w,a0
	moveq	#0,d0
	movep.w	d0,7(a0)
	bsr	init_trap
	move.l	$42e,a0
	move.l	#128000,d0
	sub.l	d0,a0
	aset_screen	a0
	aset_video	#0
	trap	#3
.lo	clr.l	(a0)+
	subq.l	#4,d0
	bne.s	.lo
	lea	$fffff9800.w,a0
	move	#$ff,d0
.j	move.l	#$ff000000,(a0)+
	dbf	d0,.j
.kl
	cmp.b	#$39,$fffffc02.w
	bne.s	.kl
	jmp	([4.w])
it_v
	rte

	include	config.s
	include	fal_rez2.S
	TEXT
load_file
	ifne	coupe_it	
	move.l	it_,$fffffa06.w
	endc
	move.l	a0,file_ptr
	move.l	a1,buf_ptr
	move.l	d0,file_lenght
	clr.w	-(sp)
	move.l	file_ptr,-(sp)
	move.w	#$3d,-(sp)
	trap	#1
	addq.l	#8,sp
	move.w	d0,fhandle	
	move.l	buf_ptr,-(SP)
	move.l	file_lenght,-(sp)
	move.w	fhandle,-(sp)
	move.w	#$3f,-(sp)
	trap	#1
	add.w	#12,sp
	move.l	d0,file_lenght
	move.w	fhandle,-(sp)
	move.w	#$3e,-(sp)
	trap	#1
	addq.w	#4,sp
	ifne	coupe_it	
	move.l	new_it_,$fffffa06.w
	endc
	rts

init_player_routine
;	init module
	ifne	old_effect
	move.l	#start_player+4,($40c+4).w	
	else
	move.l	#start_player,($40c+4).w	
	endc
	move.l	#start_player,($40c+4+4).w	
	jsr	(start_player+preloc)	
	lea	module,a0
	bsr	load_module
	move.l	mod_ptr,a0
	jsr	(start_player+pinit_module)	
	tst	d0
	bmi	no_fine_module
	jsr	(start_player+pinit_first_time)   ;initialise table pour la premiere fois (et derniere).
	jsr	(start_player+pinit_int)		;installe interruption.
	move.l	(start_player+info_module),a1
	clr.w	4(a1)	;volume a 0
	move.w	#1,2(a1)	;on fait un pti fade volume en fixant l'increment
	sf	(a1)	;enable playing
	move.l	#$00010100,6(a1)	;regles 8 voies
	move.l	#$00010100,10(a1)	
	rts
file_ptr	ds.l	1
buf_ptr		ds.l	1
file_lenght	ds.l	1
fhandle		ds.w	1
it_		ds.l	1
new_it_		ds.l	1
save_pmmu	ds.l	1
save_cache	ds.l	1
depack	incbin	depack35.PRG
reloc	include	reloc.S
	rts
start_player	incbin	player2.prg
;**** LES FICHIERS ***
module		dc.b	'demo.RSP',0
	even
module2		dc.b	'demo2.RSP',0
	even
module3		dc.b	'fin_2.RSP',0
	even
end_p	dc.b	'end_par2.prg',0
	even
eff	dc.b	'eff2.prg',0
	even
intro	dc.b	'introsnd.prg',0
	even
amour	dc.b	'amoursnd.prg',0
	even
chato	dc.b	'aff_snd.prg',0
	even
chato_dat	dc.b	'a.dat',0
	even
plasma	dc.b	'good_snd.prg',0
	even
fractal	
	dc.b	'fract10.prg',0
	even
credit
	dc.b	'credit2.prg',0
	even
d_3
	dc.b	'zbuffere.prg',0
	even
	BSS
anc_mode	ds.w	1
fin_ptr		ds.l	1
mod_ptr		ds.l	1
		ds.l	10000	
big_pile
fin


