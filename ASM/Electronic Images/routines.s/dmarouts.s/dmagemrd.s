; Dma Gem read example

	OPT O+,OW-
	CLR.L -(SP)
	MOVE #$20,-(SP)
	TRAP #1
	ADDQ.L #6,SP
	LEA mystack(PC),SP

	LEA filename(PC),A0
	LEA $78000-34,A1
	BSR fileread
	CLR -(SP)
	TRAP #1
filename:
	DC.B "GENST2.PRG",0
	EVEN
	DS.L 199
mystack:DS.L 1

;--------------------------------------------------------------------------
; Dma file reader - reads gem file.
; This is cool! - file read by hardware no need for gem!!
; A0 - ptr to filename
; A1 - address to read into!
;--------------------------------------------------------------------------

fileread:
	MOVE #$2700,SR
	MOVE.L	A0,L50A1A
	MOVE.L	A1,L50A16
	MOVE.W	#$FFFF,L50A22
	BSR L1FC02
	BSR L1FCDA
	MOVE #$2300,SR
	RTS
L1FC02	MOVE.L	#$10009,L50A00
	MOVEQ	#0,D0
	MOVEQ	#1,D1
	LEA	L50A3A(PC),A0
	BSR	L1FE26
	TST.W	D4
	BNE.S	L1FC7E
	LEA	L50A3A(PC),A6
	MOVE.B	$1A(A6),L50A01
	MOVE.B	$18(A6),L50A03
	MOVE.B	$F(A6),D0
	LSL.W	#8,D0
	MOVE.B	$E(A6),D0
	MOVE.W	D0,L50A04
	MOVE.B	$17(A6),D1
	LSL.W	#8,D1
	MOVE.B	$16(A6),D1
	ADD.W	D1,D0
	MOVE.W	D0,L50A06
	ADD.W	D1,D0
	MOVE.W	D0,L50A08
	MOVE.W	D1,L50A0E
	MOVE.B	$12(A6),D1
	LSL.W	#8,D1
	MOVE.B	$11(A6),D1
	LSR.W	#4,D1
	ADD.W	D1,D0
	MOVE.W	D1,L50A0C
	MOVE.W	D0,L50A0A
L1FC7E	RTS
L1FC80	MOVEA.L	L50A1A(PC),A0
	LEA	L50A2E(PC),A1
	MOVEQ	#7,D0
L1FC8E	MOVE.B	(A0)+,(A1)+
	SUBQ.W	#1,D0
	TST.B	(A0)
	BEQ.S	L1FCAE
	CMPI.B	#$2E,(A0)
	BNE.S	L1FC8E
	TST.W	D0
	BMI.S	L1FCA8
L1FCA0	MOVE.B	#$20,(A1)+
	DBF	D0,L1FCA0
L1FCA8	ADDQ.L	#1,A0
	MOVEQ	#2,D0
	BRA.S	L1FC8E
L1FCAE	TST.W	D0
	BMI.S	L1FCBA
L1FCB2	MOVE.B	#$20,(A1)+
	DBF	D0,L1FCB2
L1FCBA	LEA	L50A2E,A0
	MOVEQ	#$A,D0
L1FCC2	CMPI.B	#$61,(A0)
	BLT.S	L1FCD2
	CMPI.B	#$7A,(A0)
	BGT.S	L1FCD2
	SUBI.B	#$20,(A0)
L1FCD2	ADDQ.L	#1,A0
	DBF	D0,L1FCC2
	RTS
L1FCDA	BSR.S	L1FC80
	MOVE.W	L50A08(PC),D0
	MOVE.W	L50A0C(PC),D1
	LEA	L50A3A(PC),A0
	BSR	L1FE26
	LEA	L50A3A,A0
	LEA	L50A2E,A1
	MOVE.W	#$DF4,D0
L1FD02	MOVEQ	#$A,D1
L1FD04	MOVE.B	0(A0,D1.W),D2
	CMP.B	0(A1,D1.W),D2
	BNE.S	L1FD14
	DBF	D1,L1FD04
	BRA.S	L1FD1C
L1FD14	ADDQ.L	#1,A0
	DBF	D0,L1FD02
	RTS
L1FD1C	MOVE.B	$1B(A0),D0
	LSL.W	#8,D0
	MOVE.B	$1A(A0),D0
	MOVE.W	D0,L50A10
	MOVE.B	$1F(A0),D0
	LSL.L	#8,D0
	MOVE.B	$1E(A0),D0
	LSL.L	#8,D0
	MOVE.B	$1D(A0),D0
	LSL.L	#8,D0
	MOVE.B	$1C(A0),D0
	SUBQ.L	#1,D0
	MOVE.L	D0,L50A12
	MOVE.W	L50A04(PC),D0
	MOVE.W	L50A0E(PC),D1
	LEA	L50E3A(PC),A0
	BSR	L1FE26
	TST.W	D4
	BEQ.S	L1FD66
	RTS
L1FD66	MOVE.W	L50A10(PC),D0
	SUBQ.W	#2,D0
	ADD.W D0,D0
	ADD.W	L50A0A(PC),D0
	MOVEQ	#2,D1
	LEA	L50A3A(PC),A0
	BSR	L1FE26
	TST.W	D4
	BEQ.S	L1FD8A
	RTS
L1FD8A	LEA	L50A3A(PC),A1
	MOVEA.L	L50A16(PC),A0
	MOVE.L	L50A12(PC),D0
	CMP.L	#$3FF,D0
	BGT.S	L1FDAE
L1FDA4	MOVE.B	(A1)+,(A0)+
	DBF	D0,L1FDA4
	MOVEQ	#0,D0
	RTS
i	SET 0
L1FDAE	REPT 32
	MOVEM.L (A1)+,D0-D7
	MOVEM.L D0-D7,i(A0)
i	SET i+32
	ENDR
	SUBI.L	#$400,L50A12
	ADDI.L	#$400,L50A16
	MOVEQ	#0,D0
	MOVE.W	L50A10(PC),D0
	ANDI.W	#$FFFE,D0
	MOVE.W	D0,D1
	ADD.W	D1,D0
	ADD.W	D1,D0
	LSR.W	#1,D0
	LEA	L50E3A(PC),A0
	ADDA.L	D0,A0
	BTST	#0,L50A11
	BEQ.S	L1FE10
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE.B	2(A0),D0
	LSL.W	#4,D0
	MOVE.B	1(A0),D1
	LSR.W	#4,D1
	ADD.W	D1,D0
	MOVE.W	D0,L50A10
	BRA	L1FD66
L1FE10	MOVE.B	1(A0),D0
	ANDI.W	#$F,D0
	LSL.W	#8,D0
	MOVE.B	(A0),D0
	MOVE.W	D0,L50A10
	BRA	L1FD66

; Log sector read.
; D0 - start sector.
; D1 - no of sectors to read.

L1FE26	LEA	L50A1E(PC),A4
	MOVE.W	D1,D2
	SUBQ.W	#1,D2
	BMI.S	L1FE78
	EXT.L	D0
	BSR	L1FF32
L1FE38	MOVE.L	D0,-(A7)
	BSR	L1FF7A
	MOVE.W	L50A00(PC),D3
	MULU	L50A02(PC),D3
	DIVU	D3,D0
	SWAP	D0
	ST D5
	CMP.W	L50A02(PC),D0
	BLT.S	L1FE62
	SUB.W	L50A02(PC),D0
	MOVE.B	#$E,$FFFF8800.W
	MOVE.B	$FFFF8800.W,D7
	ANDI.B	#$FE,D7
	MOVE.B	D7,$FFFF8802.W
L1FE62	SWAP	D0
	MOVE.L	D0,D1
	SWAP	D1
	ADDQ.W	#1,D1
	BSR.S	L1FE7A
	MOVE.L	(A7)+,D0
	TST.W	D4
	BNE.S	L1FE78
	ADDQ.W	#1,D0
	DBF	D2,L1FE38
L1FE78	RTS
L1FE7A	MOVE.W	#2,6(A4)			; no retrys
	TST.W	4(A4)
	BPL.S	L1FE8A
L1FE86	BSR	L1FF0C
L1FE8A	CMP.W	4(A4),D0
	BEQ.S	L1FE92
	BSR.S	L1FEE8
L1FE92	MOVE.B	3(A4),$FFFF860D.W
	MOVE.B	2(A4),$FFFF860B.W		; load dma address
	MOVE.B	1(A4),$FFFF8609.W
	MOVE.W	#$84,(A6)
	MOVE.W	D1,(A5)
	DIVU D4,D4
	MOVE.W	#$90,(A6)
	MOVE.W	#$190,(A6)
	MOVE.W	#$90,(A6)
	MOVE.W	#1,(A5)				; read 1 sector
	MOVE.W	#$80,(A6)	
	MOVE.W	#$80,(A5)
	DIVU D4,D4
L1FEC6	BTST	#5,$FFFFFA01.W			; wait for read
	BNE.S	L1FEC6
	MOVE.W	(A5),D4				; read status.
	ANDI.W	#$18,D4
	BEQ.S	L1FEE0
	SUBQ.W	#1,6(A4)
	BEQ.S	L1FE86
	BCC.S	L1FE92
L1FEDE	RTS
L1FEE0	ADDI.L	#$200,(A4)			
	RTS
L1FEE8	TST.W	D0
	BEQ.S	L1FF0C
	MOVE.W	#$86,(A6)
	MOVE.W	D0,(A5)
	DIVU D4,D4
	MOVE.W	#$80,(A6)
	MOVE.W	#$13,(A5)
	DIVU D4,D4
L1FEFE	BTST	#5,$FFFFFA01.W
	BNE.S	L1FEFE
	MOVE.W	D0,4(A4)
	RTS
L1FF0C	MOVE.W	#$80,(A6)
	MOVE.W	#3,(A5)
	DIVU D4,D4
L1FF16	BTST	#5,$FFFFFA01.W
	BNE.S	L1FF16
	MOVE.W	#$82,(A6)
	CLR.W	(A5)
	CLR.W	4(A4)
	RTS
L1FF32	LEA	$FFFF8606.W,A6
	LEA	$FFFF8604.W,A5
L1FF44	MOVE	SR,-(A7)
	MOVE #$2700,SR
	MOVE.B	#$E,$FFFF8800.W
	MOVE.B	$FFFF8800.W,D7
	ANDI.B	#$F8,D7
	OR.B	#5,D7
	MOVE.B	D7,$FFFF8802.W
	MOVE (SP)+,SR
	BSR.S L1FF7A
	MOVE.L	A0,(A4)
	RTS
L1FF7A	MOVE	SR,-(A7)
	MOVE #$2700,SR
	MOVE.B	#$E,$FFFF8800.W
	MOVE.B	$FFFF8800.W,D7
	ORI.B	#1,D7
	MOVE.B	D7,$FFFF8802.W
	RTE
L50A00		DC.B 0
L50A01		DC.B 0
L50A02		DC.B 0
L50A03		DC.B 0
L50A04		DC.W 0
L50A06		DC.W 0
L50A08		DC.W 0
L50A0A		DC.W 0
L50A0C		DC.W 0
L50A0E		DC.W 0
L50A10		DC.B 0
L50A11		DC.B 0
L50A12		DC.L 0
L50A16		DC.L 0
L50A1A		DC.L 0
L50A1E		DC.L 0
L50A22		DS.B 12
L50A2E		DS.B 12
L50A3A		DS.B $400
L50E3A