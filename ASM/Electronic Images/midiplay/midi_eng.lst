Motorola DSP56000 Assembler  Version 4.1.1   95-01-16  01:36:52  midi_eng.a56
  Page 1



1                        ;------------------------------------------------------
----------------
2                        ; Variable Voice Interpolated Sound Engine
3                        ; Martin Griffiths 1994.
4                        ;------------------------------------------------------
----------------
5      
6                        host_receive
7                                  macro   dest
8    m                   _wait     jclr    #0,X:HSR,_wait
9    m                             movep   x:HRX,dest
10   m                             endm
11     
12                       host_send macro   source
13   m                   _wait     jclr    #1,X:HSR,_wait
14   m                             movep   source,x:HRX
15   m                             endm
16     
17                       no_channels
18        000020                   equ     32
19     
20        00FFFF         IPR       EQU     $FFFF
21        00FFFE         BCR       EQU     $FFFE
22        00FFE0         PBC       EQU     $FFE0
23        00FFE1         PCC       EQU     $FFE1
24        00FFE3         PCDDR     EQU     $FFE3                             ; P
ort C data direction
25        00FFE5         PCD       EQU     $FFE5                             ; P
ort C data register
26        00FFEF         RX        EQU     $FFEF
27        00FFEF         TX        EQU     $FFEF
28        00FFEC         CRA       EQU     $FFEC
29        00FFED         CRB       EQU     $FFED
30        00FFE8         HCR       EQU     $FFE8                             ; h
ost command register
31        00FFE9         HSR       EQU     $FFE9                             ; h
ost status register
32        00FFEB         HRX       EQU     $FFEB
33        00FFEB         HTX       EQU     $FFEB
34     
35                       ; Voice Structure.
36     
37        000000         voice_on  equ     0
38                       stereo_offset
39        000001                   equ     1
40        000002         frequency equ     2                                 ; f
requency fraction for voice. (24bit fraction)
41                       curr_fraction
42        000003                   equ     3                                 ; c
urrent fraction part.
43                       struct_size
44        000004                   equ     4
45     
46        000100         bufsize   EQU     256
47     
48                       ; Sample buffer X: memory address for each voice.
49     
50        X:0000                   org     x:$0
51                       mix_bufferX
52        X:0000                   ds      bufsize
53     
Motorola DSP56000 Assembler  Version 4.1.1   95-01-16  01:36:52  midi_eng.a56
  Page 2



54        X:1000                   org     x:$1000
55                       incoming_voice
56        X:1000                   ds      bufsize
57     
58        Y:0000                   org     y:$0
59                       mix_bufferY
60        Y:0000                   ds      bufsize
61     
62        Y:1000                   org     y:$1000
63                       offset_buffer
64        Y:1000                   ds      256
65        Y:1100         vc1_data  ds      4*no_channels
66     
67     
68                       ; Circular buffer for dac output in Y: memory.
69     
70     
71        P:0000                   org     p:$0
72        P:0000 0AF080            jmp     start                             ; -
> start
                 000040
73     
74                       ; Music routine, host command 2.
75     
76        P:0026                   org     p:$26
77        P:0026 0BF080            jsr     musicplayer_int                   ; h
ost command 2
                 000046
78     
79        P:0040                   org     p:$40
80        P:0040 08F4BE  start     movep             #0,x:BCR
                 000000
81        P:0042 08F4A0            movep             #1,x:PBC
                 000001
82        P:0044 0AF080            jmp     setup_player
                 0000B5
83     
84                       ; The music player interrupt
85     
86                       musicplayer_int
87        P:0046 00F0B8            andi    #$f0,mr                           ; u
nmask interrupts
88        P:0047 0AA823            bset    #3,x:HCR
89        P:0048 0AA824            bset    #4,x:HCR
90     
91                                 host_receive a1                           ; f
etch no of voices.
94        P:004C 219900            move              a1,n1
95     
96     
97        P:004D 300000            move              #mix_bufferX,r0
98        P:004E 200013            clr     a
99        P:004F 06D820            rep     n0
100       P:0050 485800            move              a,l:(r0)+
101    
102                      ; Fetch channels
103    
104       P:0051 64F400            move              #>vc1_data,r4
                 001100
105       P:0053 74F400            move              #>4,n4
                 000004
Motorola DSP56000 Assembler  Version 4.1.1   95-01-16  01:36:52  midi_eng.a56
  Page 3



106    
107       P:0055 06D900            do      n1,dochnlp
                 0000A1
108       P:0057 229100            move              r4,r1
109                                host_receive a
112       P:005B 5E5903            tst     a                     a,y:(r1)+
113       P:005C 0AF0AA            jeq     nextvoice
                 0000A0
114       P:005E 60F413            clr     a         #incoming_voice,r0      ;
                 001000
115                                host_receive y:(r1)+                      ; r
eceive stereo offset
118                                host_receive a1                           ; f
ractional frequency shifter
121                                host_receive y1                           ; r
eceive volume
124       P:0069 5C5900            move                          a1,y:(r1)+  ; s
tore fraction part
125       P:006A 230423            lsr     a         n0,x0                   ;
126       P:006B 21851B            clr     b         a1,x1
127       P:006C 59D900            move                          y:(r1)+,b0  ; c
urrent fraction
128       P:006D 44F4AA            mac     x1,x0,b   #>$80,x0                ; f
requency fraction * no. of samples to do.
                 000080
129                                host_send b1                              ; s
end amount of sample words to send.
132       P:0072 06CD00            do      b1,end_gc                         ; -
 for x no. of samples
                 00007A
133                                host_receive x1
136       P:0077 2000A0            mpy     x0,x1,a
137       P:0078 210500            move              a0,x1
138       P:0079 2000F1            mpyr    y1,x1,a
139       P:007A 565800            move              a,x:(r0)+
140                      end_gc
141                                host_receive x1
144       P:007E 2000A0            mpy     x0,x1,a
145       P:007F 210500            move              a0,x1
146       P:0080 2000F1            mpyr    y1,x1,a
147       P:0081 565800            move              a,x:(r0)+
148    
149       P:0082 229100            move              r4,r1
150       P:0083 60F400            move              #>offset_buffer,r0
                 001000
151       P:0085 5FD900            move                          y:(r1)+,b   ; v
oice flag
152       P:0086 4ED900            move                          y:(r1)+,y0  ; s
tereo offset.
153       P:0087 250000            move              #0,x1
154       P:0088 4CD91B            clr     b                     y:(r1)+,x0  ; f
requency int/fraction
155       P:0089 59E100            move                          y:(r1),b0
156       P:008A 55F400            move              #>incoming_voice,b1
                 001000
157       P:008C 200028            add     x,b
158       P:008D 06FFA0            rep     #bufsize-1
159       P:008E 5D5828            add     x,b                   b1,y:(r0)+
160       P:008F 5D5800            move                          b1,y:(r0)+
161       P:0090 596100            move                          b0,y:(r1)   ; s
tore current fraction
Motorola DSP56000 Assembler  Version 4.1.1   95-01-16  01:36:52  midi_eng.a56
  Page 4



162    
163       P:0091 65F400            move              #>offset_buffer,r5
                 001000
164       P:0093 360000            move              #mix_bufferX,r6
165       P:0094 56F400            move              #>$7fffff,a             ; 0
.99998
                 7FFFFF
166       P:0096 200054            sub     y0,a
167       P:0097 21C700            move              a,y1
168    
169       P:0098 6ADD00            move                          y:(r5)+,r2
170       P:0099 06D800            do      n0,end_lnl
                 00009F
171       P:009B 4AE600            move              l:(r6),ab
172       P:009C 44E200            move              x:(r2),x0
173       P:009D 2000D3            macr    x0,y0,a
174       P:009E 6ADDCB            macr    x0,y1,b               y:(r5)+,r2
175       P:009F 4A5E00            move              ab,l:(r6)+
176                      end_lnl
177    
178                      nextvoice
179       P:00A0 044C14            lua     (r4)+n4,r4
180       P:00A1 000000            nop
181                      dochnlp
182       P:00A2 0AA803            bclr    #3,x:HCR
183       P:00A3 0AA804            bclr    #4,x:HCR
184    
185       P:00A4 44F400            move              #>$8000,x0
                 008000
186       P:00A6 300000            move              #mix_bufferX,r0
187       P:00A7 06D800            do      n0,send_mix
                 0000B3
188       P:00A9 46E000            move              x:(r0),y0
189       P:00AA 2000D0            mpy     x0,y0,a
190                                host_send a1
193       P:00AE 4ED800            move                          y:(r0)+,y0
194       P:00AF 2000D0            mpy     x0,y0,a
195                                host_send a1
198       P:00B3 000000            nop
199                      send_mix
200       P:00B4 000004            rti
201    
202                      setup_player
203       P:00B5 0AA822            bset    #2,x:HCR                          ; e
nable host commands
204       P:00B6 0AA803            bclr    #3,x:HCR
205       P:00B7 0AA804            bclr    #4,x:HCR
206    
207                      ; Setup DAC output.
208       P:00B8 08F4BF            movep             #$0c00,x:IPR            ; S
et the IPR for ssi interrupts, and ENABLE HOST COMMANDS HPL0,HPL1
                 000C00
209                                                                          ;mo
vep  #$1f8,x:PCC             ; turn on SSI port(Port C control reg)
210                                                                          ;mo
vep  #0,x:PCDDR              ;
211       P:00BA 00F0B8            andi    #$f0,mr                           ; u
nmask interrupts
212       P:00BB 65F400            move              #>vc1_data,r5           ; v
oice
                 001100
Motorola DSP56000 Assembler  Version 4.1.1   95-01-16  01:36:52  midi_eng.a56
  Page 5



213       P:00BD 200013            clr     a
214       P:00BE 0680A0            rep     #(no_channels*struct_size)
215       P:00BF 5E5D00            move                          a,y:(r5)+
216       P:00C0 70F400            move              #>bufsize,n0
                 000100
217       P:00C2 57F400            move              #$475249,b
                 475249
218       P:00C4 0AA981  sendgo1   jclr    #1,x:HSR,sendgo1                  ;
                 0000C4
219       P:00C6 08CD2B            movep             b1,x:HRX                ;
220       P:00C7 57F400            move              #$464621,b
                 464621
221       P:00C9 0AA981  sendgo2   jclr    #1,x:HSR,sendgo2                  ;
                 0000C9
222       P:00CB 08CD2B            movep             b1,x:HRX                ;
223       P:00CC 0C00CC  forever   jmp     forever
224    
225                                end

0    Errors
0    Warnings
