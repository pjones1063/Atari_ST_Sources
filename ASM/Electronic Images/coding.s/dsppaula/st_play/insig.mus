;----------------------------------------------------------------------
; DSP 56001 MPEG decoder I-frame subroutines.
; By Martin Griffiths, August 1994.
;----------------------------------------------------------------------

IPR		EQU	$ffff
BCR		EQU	$fffe
MYPBC		EQU	$ffe0
PCC		EQU	$ffe1
PCDDR		EQU	$ffe3
PCD		EQU	$ffe5
RX		EQU	$FFEF
TX		EQU	$FFEF
CRA		EQU	$FFEC
CRB		EQU	$FFED
HSR		EQU	$ffe9
HRX		EQU	$ffeb
HTX		EQU	$ffeb

const_bits 	equ 13
pass1_bits 	equ 7
const_scale 	equ 8192
pass1_shift 	equ const_bits-pass1_bits+1	; +1 for multiply correction
pass1_round 	equ $10			; = 2 ** (pass1_shift-1)
pass2_shift 	equ 24-const_bits-pass1_bits-3 ; -3 for x8
pass2_round 	equ $800000			; = 2 ** (pass2_shift-1)

; FIX(x) = x * CONST_SCALE + 0.5

FIX_0_298631336 equ 2446	; FIX(0.298631336)
FIX_0_390180644 equ 3196	; FIX(0.390180644)
FIX_0_541196100 equ 4433	; FIX(0.541196100)
FIX_0_765366865 equ 6270	; FIX(0.765366865)
FIX_0_899976223 equ 7373	; FIX(0.899976223)
FIX_1_0		equ 8192	; FIX(1.0)
FIX_1_175875602 equ 9633	; FIX(1.175875602)
FIX_1_501321110 equ 12299	; FIX(1.501321110)
FIX_1_847759065 equ 15137	; FIX(1.847759065)
FIX_1_961570560 equ 16069	; FIX(1.961570560)
FIX_2_053119869 equ 16819	; FIX(2.053119869)
FIX_2_562915447 equ 20995	; FIX(2.562915447)
FIX_3_072711026 equ 25172	; FIX(3.072711026)

c1		equ  FIX_1_0
c2		equ  FIX_0_541196100
c3		equ -FIX_1_847759065
c4		equ  FIX_0_765366865
c10		equ  FIX_0_298631336
c11		equ  FIX_2_053119869
c12		equ  FIX_3_072711026
c13		equ  FIX_1_501321110
c20		equ -FIX_0_899976223
c21		equ -FIX_2_562915447
c22		equ -FIX_1_961570560
c23		equ -FIX_0_390180644
c24		equ  FIX_1_175875602

waitcts		macro
_wctswt		jclr #1,X:HSR,_wctswt
		endm

waitrts		macro
_wrtswt		jclr #0,X:HSR,_wrtswt
		endm

		org	p:$0
		jmp	start

		org	p:$40
start
		movep	#$0c00,X:IPR
		movep	#$1,X:MYPBC
		movep	#$0,X:BCR
		andi	#$f0,mr			
		move 	#>-1,m0
		move 	#>-1,m1
		move 	m0,m2
		move 	m0,m3
		move 	m0,m4
		move 	m0,m5
		move 	m0,m6
		move 	m0,m7
		jsr	make_yuv

getmoredata	
idct_only	waitrts
		movep	X:HRX,a
		rep	#11
		asl	a
		move	a,x0
		move	#dctblocks,r0
		move	#64,n2
		clr	a	r0,r2
		rep	#(64*6)
		move	a,x:(r0)+

		move	#default_intra_matrix,r4
		move	#intra_matrix,r0
		move	y:(r4)+,x1
		do	#64,ilp
		mpy	x0,x1,a		y:(r4)+,x1
		move	a0,y:(r0)+
ilp		
		do	#6,do6_loop
		move	#intra_matrix,r0
		move	#>$80,y0
		waitrts
		movep	X:HRX,x0	
		mpy	x0,y0,a	#>$8000*8,y1
		move	a0,x0
		mpy	x0,y1,a	
		move	a,x:(r2)	; store DC
		waitrts
		movep	X:HRX,x0	; i
		mpy	x0,y0,a	
		jeq	ere
in_loop		move	a1,n0
		move	a0,x0
		move	y:(r0+n0),x1
		mpy	x0,x1,a		n0,n2
		waitrts
		movep	X:HRX,x0	; i
		mpy	x0,y0,a		a,x:(r2+n2)
		jne	in_loop
ere		
		move	r2,x:saver7
		MOVE  #<0,R0
		MOVEC #$1f,m0
		do	#32,conv
		move	x:(r2)+,x0
		move	x0,x:(r0)
		move	x:(r2)+,x0
		move	x0,y:(r0)+
conv
		
fast_idct:	
		MOVEC #<4,M3
		MOVEC #<4,M7
		MOVE  #<4,N0
		MOVE  #<4,N1
		MOVE  #<4,N4
		MOVE  #<4,N5
		MOVE  #<4,N6

		MOVE  #>2,R1
		MOVE  #>$20,R2
		MOVE  #IDCTXCoef3,R3
		MOVE  #>1,R4
		MOVE  #>3,R5
		MOVE  #IDCTXCoef7,R7
		DO    #2,lp2
		DO    #4,lp1
 		MOVE  X:(R0),X0   Y:(R7)+,Y0
		MPY   Y0,X0,A     X:(R1),X1   Y:(R7)+,Y1
		MACR  Y1,X1,A
		MPY   X0,Y1,A     A,X:(R0)
		MACR  -X1,Y0,A    X:(R4),X0   Y:(R3)+,Y0
		MPY   Y0,X0,A     A,X:(R1)
		MOVE  X:(R5),X1   Y:(R3)+,Y1
		MACR  Y1,X1,A
		MPY   X0,Y1,A     A,X:(R4)
 		MACR  -X1,Y0,A    X:(R3)+,X0  Y:(R4),Y0
		MPY   Y0,X0,A     A,X:(R5)
		MOVE  X:(R7)+,X1  Y:(R1),Y1
		MACR  Y1,X1,A
		MPY   X1,Y0,A     X:(R0),B    A,Y:(R4)
		MACR  -X0,Y1,A    Y:(R0),Y0
		TFR   B,A   X:(R4),B    A,Y:(R1)
		ADD   A,B   Y:(R4),X0
		SUBL  B,A   B,X:(R0)    X0,B
		TFR   Y0,A  A,X:(R4)
		ADD   A,B   X:(R1),Y1
		SUBL  B,A   X:(R5),B    B,Y:(R0)
		TFR   Y1,A  A,Y:(R4)
		ADD   A,B   Y:(R5),X0
		SUBL  B,A   B,X:(R1)
		TFR   X0,A  A,X:(R5)    Y:(R1),B
		ADD   A,B   Y:(R0),Y0
		SUBL  B,A   B,Y:(R5)
		MOVE  X:(R7)+,X0  A,Y:(R1)
		MPY   Y0,X0,A     X:(R3)+,X1  Y:(R5),Y1
		MACR  Y1,X1,A
		MPY   X1,Y0,A     A,Y:(R0)
		MACR  -X0,Y1,A    X:(R3)+,X0  Y:(R4),Y0
		MPY   Y0,X0,A     A,Y:(R5)
		MOVE  X:(R7)+,X1  Y:(R1),Y1
		MACR  Y1,X1,A
		MPY   X1,Y0,A     A,Y:(R4)
		MACR  -X0,Y1,A    R2,R6
		MOVE  A,Y:(R1)
		MOVE  L:(R0)+N0,AB
		ADD   A,B
		SUBL  B,A   B,X:(R6)+N6
		MOVE  A,X0
		MOVE  L:(R1)+N1,AB
		ADD   A,B
		SUBL  B,A   B,X:(R6)+N6
 		MOVE  X:(R5),A    A,Y1
		MOVE  Y:(R4),B
		ADD   A,B
		SUBL  B,A   B,X:(R6)+N6
		MOVE  X:(R4)+N4,A A,Y0
		MOVE  Y:(R5)+N5,B
		ADD   A,B
		SUBL  B,A   B,X:(R6)+N6
		MOVE  A,X:(R6)+N6
		MOVE  Y0,X:(R6)+N6
		MOVE  Y1,X:(R6)+N6
		MOVE  X0,X:(R6)+N6
		MOVE  X:(R0),X0   Y:(R7)+,Y0
		MPY   Y0,X0,A     X:(R1),X1   Y:(R7)+,Y1
		MACR  Y1,X1,A
		MPY   X0,Y1,A     A,X:(R0)
		MACR  -X1,Y0,A    X:(R4),X0   Y:(R3)+,Y0
		MPY   Y0,X0,A     A,X:(R1)
 		MOVE  X:(R5),X1   Y:(R3)+,Y1
		MACR  Y1,X1,A
		MPY   X0,Y1,A     A,X:(R4)
		MACR  -X1,Y0,A    X:(R3)+,X0  Y:(R4),Y0
		MPY   Y0,X0,A     A,X:(R5)
		MOVE  X:(R7)+,X1  Y:(R1),Y1
		MACR  Y1,X1,A
		MPY   X1,Y0,A     X:(R0),B    A,Y:(R4)
		MACR  -X0,Y1,A    Y:(R0),Y0
		TFR   B,A   X:(R4),B    A,Y:(R1)
		ADD   A,B   Y:(R4),X0
		SUBL  B,A   B,X:(R0)    X0,B
		TFR   Y0,A  A,X:(R4)
		ADD   A,B   X:(R1),Y1
		SUBL  B,A   X:(R5),B    B,Y:(R0)
		TFR   Y1,A  A,Y:(R4)
		ADD   A,B   Y:(R5),X0
		SUBL  B,A   B,X:(R1)
		TFR   X0,A  A,X:(R5)    Y:(R1),B
		ADD   A,B   Y:(R0),Y0
		SUBL  B,A   B,Y:(R5)
		MOVE  X:(R7)+,X0  A,Y:(R1)
		MPY   Y0,X0,A     X:(R3)+,X1  Y:(R5),Y1
		MACR  Y1,X1,A
		MPY   X1,Y0,A     A,Y:(R0)
		MACR  -X0,Y1,A    X:(R3)+,X0  Y:(R4),Y0
		MPY   Y0,X0,A     A,Y:(R5)
		MOVE  X:(R7)+,X1  Y:(R1),Y1
		MACR  Y1,X1,A
		MPY   X1,Y0,A     A,Y:(R4)
		MACR  -X0,Y1,A    R2,R6
		MOVE  A,Y:(R1)
		MOVE  L:(R0)+N0,AB
		ADD   A,B
		SUBL  B,A   B,Y:(R6)+N6
		MOVE  A,X0
		MOVE  L:(R1)+N1,AB
		ADD   A,B
 		SUBL  B,A   B,Y:(R6)+N6
		MOVE  X:(R5),A    A,Y1
		MOVE  Y:(R4),B
		ADD   A,B
		SUBL  B,A   B,Y:(R6)+N6
		MOVE  X:(R4)+N4,A A,Y0
 		MOVE  Y:(R5)+N5,B
		ADD   A,B   (R2)+
		SUBL  B,A   B,Y:(R6)+N6
		MOVE  A,Y:(R6)+N6
		MOVE  Y0,Y:(R6)+N6
		MOVE  Y1,Y:(R6)+N6
		MOVE  X0,Y:(R6)+N6
lp1
		MOVE  #>$20,R0
		MOVE  #>$21,R4
		MOVE  #>$22,R1
		MOVE  #>$23,R5
		MOVE  #>0,R2
lp2
		move	#>0,r0
		move	#>128,x0
		move	x:saver7,r2
		do	#64,convback
		move	x:(r0),a
		add	x0,a
		move	a,x:(r2)+
convback
		movec	#-1,m0
		movec	#-1,m3
		movec	#-1,M7
do6_loop

YCrCbtoRGB	move	#dctblocks,r0
		move	#dctblocks+(4*64),r1
		move	#dctblocks+(5*64),r2
		move	#offset_table,r3
		MOVE  #colour_output,R4
		MOVE  #RGBMatrix,R5
		MOVEC #<4,M5
		DO    #256,rgb_conv_lp
		move	y:(r3)+,n1
		move	y:(r3)+,n0
		move	n1,n2
		move	x:(r0+n0),y0 				; Y
		move	y:(R5)+,X0  	
		MPY   Y0,X0,B	x:(r2+n2),y0			; Cr
		TFR   B,A    	x:(r1+n1),y1 			; Cb
		move	y:(R5)+,X0			
		MAC  Y0,X0,A     y:(R5)+,X0  
		TFR   B,A   A,X:(R4)+
		MAC   -Y1,X0,A    y:(R5)+,X0  
		MAC  -Y0,X0,A    y:(R5)+,X0  
		MAC  Y1,X0,B     A,X:(R4)+
		MOVE	B,X:(R4)+
rgb_conv_lp
		MOVEC #-1,M5

		move	#colour_output,r0
		move	#conv_red+384,r4
		move	#conv_green+384,r5
		move	#conv_blue+384,r6
		move	x:(r0)+,n4
		do	#16*16,loop
		move	x:(r0)+,n5
		move	x:(r0)+,n6	
		move	y:(r4+n4),a
		move	y:(r5+n5),y0
		or	y0,a	y:(r6+n6),y0
		or	y0,a	x:(r0)+,n4
		waitcts
		movep	a,x:HRX
loop

		jmp 	getmoredata


make_yuv:
	move	#conv_red,r4
	move	#conv_green,r5
	move	#conv_blue,r6
	move	#>$0000,y0
	do	#384,first_lp
	move	y0,y:(r4)+
	move	y0,y:(r5)+
	move	y0,y:(r6)+
first_lp
	move	#0,r0
	move	#$100,n0

	move	#>$f800,x1
	do	#256,make_conv_rgb
	move	r0,b
	and	x1,b	#>($800000>>5),x0
	move	b,y0
	move	b,y:(r4)+
	mpy	x0,y0,b	#>($800000>>11),x0
	move	b,y:(r5)+
	mpy	x0,y0,b		(r0)+n0
	move	b,y:(r6)+
make_conv_rgb
	move	#>$f800,y0
	move	#>$07c0,y1
	move	#>$001f,x0
	do	#384,last_lp
	move	y0,y:(r4)+
	move	y1,y:(r5)+
	move	x0,y:(r6)+
last_lp

	rts

		org	x:$00C0

IDCTXCoef3	dc	$000000
		dc	$000000
		dc	$5A827A
		dc	$0C7C5C
		dc	$238E76

		org	x:$00C8

IDCTXCoef7	dc	$00000  þ # ÿþ! þ$ þ# þ $ þ& þ $ & ÿþ ( þ+ þ + þ0 þ/ þ + þ( þ & ( ÿþ) - 0 5 9 þ < ; 7 2 7 2 / 2 / + / + & + & # & ÿþ+@+@+@+@þ+@þ( (@( (@þ(@ÿþ)@)@)@)@þ)@þ+@+@+@+@þ+@ÿýÿýÿýÿýÿþ '  ¨ þ(þ + - -- + þ+þ ( (( $ þ$ÿþ
þ $ þ$þ $ " þ"þ $ $"   ÿþ
þ $ þ$þ $ " þ"þ $ $& ( (+ ÿþ)þ)þ $ ) )) ' þ'þ $ þ$þ " þ"ÿþ$þ$þ  $ $$ " þ"þ  þþ   ÿþÿþ(þ0 þ (þ0 þ(þ0 þ $þ0 þ (þ0 þ þ0 ÿþ0 þ 3 5 þ7 þ 8 5 þ7 þ 5 3 þ0 þ 2 3 þ5 þ 57 8 7 5 þ7 þ 7ÿþ0 þ 3 5 þ7 þ 8 5 þ7 þ 5 3 þ0 þ 2 3 þ5 þ 3 2 0 . 3 . þ0 þ 0ÿþ þ
  ÿþ  þ  þ ÿþ þ   þ  þ   þ  þ   þ
 
 þ 
 þ
 þ 
   þ þ    ÿþ   þ  þ    þ  þ    þ þ     þ  þ  þ þ ÿþ þ    þ þ   þ þ þ þ  þ
 
 þ 
þ
 þ 
   þ þ  ÿþ   þ þ     þ þ     þ þ    þ  þ    ÿþ3 þ 0 2 þ3 þ 5 2 þ3 þ 2 0 þ+ þ . 0 þ2 þ 23 5 3 2 þ3 þ 3ÿþ+ þ 0 2 þ3 þ 5 2 þ3 þ 2 0 þ+ þ . 0 þ0 þ 0 . + + 0 + þ+ þ +ÿþ$ $ $ $ $ $ $ $ $@$@$@$@$@$@$@$@ÿþ         ÿþ 0 00 0+ . .0 þ0þ + . + 5 53 35 3 30 þ0þ 0 0ÿþ . .. .. ) , . .. . þ.þ 0 2 0 00 00 + . 0 0< <7 : 6 5 3 ÿþ
 

  
 

     ÿþ$@$@$@$@$@$@$@$@& & & & & & & & ÿþ         ÿþ$ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ ÿþ 0 $  2 &  3 '  2 &  3 '  5 7 +  5 )  3 '  2 &  3 '  2 ÿþ$@$@$@$@$@$@$@$@$@$@$@$@$@$@$@$@ÿþ 0 $  2 &  4 (  2 &  4 (  5 7 +  5 )  4 (  2 &  4 (  2 ÿþ0 ÿþ0 ÿýþ+ ÿý. ÿþ, ÿýþ) ÿý+ ÿþ' ÿýþ, ÿý+ ÿþ' ÿýþ$ ÿý& ÿþ þ 	þ þ þ 	
þ þ 	þ þ þ 
	ÿþ0 . ÿýþ+ ÿýþ) ÿþ, + ÿþ' + ÿýþ) ÿþ' $ ÿýþ& « ÿ ñ ó õ                   ò ñ	 ñ    	   
  	     
     	      	   
  	     
   
û 		     	     	      
   
û 		     	     	       
    	     	  
  	    
    	     	  
  	    
 * ñ( ñ   ÿ'  )      *  (  + ñ'  )  + *  (  +  '  )  + *  (  ,  '  )  , *  (  -  '  )  - *  (  .  '  )  . *  (  .  '  )  : *  (  0  '  )  / 1  3 ò0  2  3 / 1  9 0  2  9
 / 1  4  0  2  5  / 1  6  0  2  8  / 1  4  0  2  5  / 1  6  0  2  7  / 1  3  0  2  3 / 1  9 0  2  9
 / 1  4ó0  2  5 / 1  6 0  2  ; / 1  4 0  2  5 / 1  6 0  2  7 / A ñ   ÿ   ÿC          A  B ñE ñC  D  E  A F  E C G E A  B  E  C  J  E  A  B  E  C  D  E  A H  E C I  E A  B  E  C  J  E  A  L  E  C M  E A  K  E  C N  E C Oþ E A  P  E  C  Qô E  A      E  C     E A      E  C     E A     E C      E  A      E  R ñ        R          R  S      R  S      R  S  T òR  S  U  R  S  Uþ R  S  Uý R  S ðV  R  S  W  R  S  X  R  S  Y  R  [ óZûóR  [û Zþ R  [ù Zü R  [÷ Zû R  \  Z  R  \ òZþ ]  \  Zü ]  \  Zû ]  \  Z  ]  \  Z ]  \  Z ]  \  Z ]  \  Zô]  \  Zõ]  \ óZ÷]  \ ôZù]  \ õZÿ]  \ ÷Z ]  \ ùZ ^  ñ`      ÿ_   a       ^   `       b   c       ^   `   d ñ_   a   e  ^   `   f  _   a   g  ^   `   d _   a   e ^   `   f _   a   g ^  h  d _  i  e ^  h  f _  i  g ^   `   d  _   a   g  ^   `   j  _   a      ^   `   k ò^   `   l  ^   `   m  ^   `   l  ^   `   n  ^   `   o  ^   `   o ÿ^   `   p ó^   `   p ò^   `   p ñ^   `   p ð^  h  p ñ^  h  p  ^   `   p  ^   `   p  ^   `   p  ^   `   p  ^   `   o ò^   `      ^   `   o ^   `     ^  h  o ^  h    ^   `   o ^   `     ^   `   o  ^   `      ^   `   o ^   `     ^  h  o ^  h  q ^   `   o  ^   `      t ñ    r ñu      s  t  v ðr  u  w  s  z ðx ñr  }  y  s  |  x  r  {  y  s  z x  r  } y  s  | x  r  { y  s  ~ñx r  y s  x r  y s  x r 
òyòsòóxóró
ôyôsôõxõrõ
÷y÷s÷ùxùrù
ÿyÿsÿ< ò ò ò<      =    =    <      <      <   <    <      <      <    >   <    >   =   >   =   >   <    >   <    >   <  >   =   >   <    >   <    >    ò ò   ÿ                             õ           ô                   ò ò   ÿþ      ÿ ò ò ò    þ           þ ¡ ó   ó£þ þ ¢
 ¡      £þ þ ¢
 ¤ ò¦ ò§ òª  ¨  ©  ¬  ­  «  ®  ¯  °  ²  ³  ±  ´  µ  ±  ¶  ·  ±  ¹  ¸  ±  ² ³ ±  ´ µ ±  ¶ · ±  ¹ ¸ ±        C  D _  ` ~   ³  ´ Ë  Ì ß  à é 	 ê ó  ô ÿ  Ë Ë 	       ,  #    *     %   4 !   " , #  $  % 7 &  -  ' < ( - ) / * / + $ ,                       Seven Gates of  Jambala........Music Ripped By       The            Caped          Crusader         8/3/90                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     