Motorola DSP56000 Assembler  Version 4.1.1   94-06-15  20:01:56  dspaula.a56
  Page 1



1                        ;------------------------------------------------------
----------------
2                        ; DSP 4 channel Player.
3                        ; 56001 source. (very fast)
4                        ; By Martin Griffiths, August 1993
5                        ; uses $6000-$8000 in both X and Y memory...
6                        ;------------------------------------------------------
----------------
7      
8         00FFFF         IPR       EQU     $FFFF
9         00FFFE         BCR       EQU     $FFFE
10        00FFE0         PBC       EQU     $FFE0
11        00FFE1         PCC       EQU     $FFE1
12        00FFE3         PCDDR     EQU     $FFE3                             ; P
ort C data direction
13        00FFE5         PCD       EQU     $FFE5                             ; P
ort C data register
14        00FFEF         RX        EQU     $FFEF
15        00FFEF         TX        EQU     $FFEF
16        00FFEC         CRA       EQU     $FFEC
17        00FFED         CRB       EQU     $FFED
18        00FFE8         HCR       EQU     $FFE8                             ; h
ost command register
19        00FFE9         HSR       EQU     $FFE9                             ; h
ost status register
20        00FFEB         HRX       EQU     $FFEB
21        00FFEB         HTX       EQU     $FFEB
22     
23                       ; Voice Structure.
24     
25        000000         frequency equ     0                                 ; f
requency fraction for voice. (24bit fraction)
26                       curr_fraction
27        000001                   equ     1                                 ; c
urrent fraction part.
28                       last_sample
29        000002                   equ     2                                 ;
30                                                                           ;
31     
32     
33        001FC0         cbufsize  EQU     $1FC0
34        0007F0         bufsize   EQU     $800-16
35     
36                       ; Sample buffer X: memory address for each voice.
37     
38        X:4000                   org     x:$4000
39        X:4000         chn1buf   ds      bufsize
40        X:47F0         chn2buf   ds      bufsize
41        X:4FE0         chn3buf   ds      bufsize
42        X:57D0         chn4buf   ds      bufsize
43        X:5FC0         chn5buf   ds      bufsize
44        X:67B0         chn6buf   ds      bufsize
45        X:6FA0         chn7buf   ds      bufsize
46        X:7790         chn8buf   ds      bufsize
47        X:7F80         vc1_data  ds      4
48        X:7F84         vc2_data  ds      4
49        X:7F88         vc3_data  ds      4
50        X:7F8C         vc4_data  ds      4
51        X:7F90         vc5_data  ds      4
52        X:7F94         vc6_data  ds      4
53        X:7F98         vc7_data  ds      4
Motorola DSP56000 Assembler  Version 4.1.1   94-06-15  20:01:56  dspaula.a56
  Page 2



54        X:7F9C         vc8_data  ds      4
55                       vces_8_flag
56        X:7FA0                   dc      0
57     
58     
59     
60                       ; Circular buffer for dac output in Y: memory.
61     
62        Y:4000                   org     y:$4000
63        Y:4000         circbuf   ds      cbufsize
64     
65        P:0000                   org     p:$0
66        P:0000 0AF080            jmp     start                             ; -
> start
                 000040
67     
68                       ; DAC xmit FAST interrupt.
69     
70        P:0010                   org     p:$10                             ; s
si transmit data
71                       xmit_int
72        P:0010 08DFEF            movep             y:(r7)+,x:RX            ; o
utput sample word
73     
74                       ; Music routine, host command 2.
75     
76        P:0026                   org     p:$26
77        P:0026 0BF080            jsr     musicplayer_int                   ; h
ost command 2
                 00005A
78     
79        P:0040                   org     p:$40
80        P:0040 08F4BE  start     movep             #0,x:BCR
                 000000
81        P:0042 08F4A0            movep             #1,x:PBC
                 000001
82        P:0044 0AA822            bset    #2,x:HCR                          ; e
nable host commands
83        P:0045 08F4BF            movep             #$0c00,x:IPR            ; S
et the IPR for HOST COMMANDS
                 000C00
84        P:0047 0BF080            jsr     setup_player
                 0000FF
85        P:0049 00F0B8            andi    #$f0,mr                           ; u
nmask interrupts
86        P:004A 000000            nop
87        P:004B 000000  forever   nop
88        P:004C 000000            nop
89        P:004D 000000            nop
90        P:004E 0C004B            jmp     forever
91     
92                       ;
93                       ; Music routines.
94                       ;
95     
96                       ; Add a voice to the buffer (NO interpolation)
97                       ; r0 -> sample buffer to apply volume and frequency shi
ft too.
98                       ; r1 -> voice structure for this voice
99                       ; n2 -> no. of sample words to do.
100    
Motorola DSP56000 Assembler  Version 4.1.1   94-06-15  20:01:56  dspaula.a56
  Page 3



101                      add_voice_ni
102       P:004F 229613            clr     a         R4,R6                   ; r
6 -> fill
103       P:0050 000000            nop
104       P:0051 06DA00            do      n2,end_lni
                 000055
105       P:0053 C9D828            add     x,b       x:(r0)+,a   y:(r6),y1
106       P:0054 200070            add     y1,a
107       P:0055 5E4E00            move                          a,y:(r6)+n6
108                      end_lni
109       P:0056 000000            nop
110       P:0057 000000            nop
111       P:0058 00000C            rts
112    
113                      ; Add a voice to the buffer (interpolate)
114                      ; r0 -> sample buffer to apply volume and frequency shi
ft too.
115                      ; r1 -> voice structure for this voice
116                      ; n2 -> no. of sample words to do.
117    
118                      add_voice_int
119       P:0059 00000C            rts
120    
121                      ; The music player interrupt
122    
123                      musicplayer_int
124       P:005A 00F0B8            andi    #$f0,mr                           ; u
nmask interrupts
125    
126       P:005B 62F400            move              #>add_voice_ni,r2       ; r
2 -> non-interpolated add voice
                 00004F
127       P:005D 63F400            move              #>add_voice_int,r3      ; r
3 -> interpolated add voice
                 000059
128       P:005F 0AA980  waitcpu   jclr    #0,x:HSR,waitcpu                  ; w
ait for cpu...
                 00005F
129       P:0061 084E2B            movep             x:HRX,a                 ; f
etch mix routine
130       P:0062 200003            tst     a                                 ; 0
  = no interpolation
131       P:0063 032362            tne     x1,a      r3,r2                   ; >
0 = interpolation
132       P:0064 0AA980  wait8fl   jclr    #0,x:HSR,wait8fl                  ; w
ait for 8 voice flag
                 000064
133       P:0066 084E2B            movep             x:HRX,a                 ; f
etch flag
**** 134 [dspaula.a56 131]: WARNING --- Absolute address involves incompatible m
emory spaces (X data move field)
134       P:0067 5E7000            move                          a,y:vces_8_flag
                 007FA0
135       P:0069 22EF00  waite     move              r7,b                    ; c
urrent pos in circular buffer
136       P:006A 0ACD20            jset    #0,b1,waite                       ;
                 000069
137       P:006C 22C400            move              r6,x0                   ; l
ast position in buffer
138       P:006D 20004C            sub     x0,b                              ; d
ifference
Motorola DSP56000 Assembler  Version 4.1.1   94-06-15  20:01:56  dspaula.a56
  Page 4



139       P:006E 0AF0A3            jpl     ok
                 000073
140       P:0070 44F400            move              #cbufsize,x0
                 001FC0
141       P:0072 200048            add     x0,b
142       P:0073 22D42A  ok        asr     b         r6,r4                   ; /
2 , R4=r6 (-> fill start)
143       P:0074 21BA00            move              b1,n2                   ; s
tore no of samples to do.
144       P:0075 0AA981  wait2     jclr    #1,x:HSR,wait2                    ; w
ait..
                 000075
145       P:0077 08DA2B            movep             n2,x:HRX                ; s
end frequency fraction * no. of samples to do.
146    
147       P:0078 60F400            move              #chn1buf,r0             ;
                 004000
148       P:007A 61F400            move              #>vc1_data,r1           ;
                 007F80
149       P:007C 0BF080            jsr     getchannel                        ; g
et channel 1
                 0000EE
150       P:007E 60F400            move              #chn2buf,r0             ;
                 0047F0
151       P:0080 61F400            move              #>vc2_data,r1           ;
                 007F84
152       P:0082 0BF080            jsr     getchannel                        ; g
et channel 2
                 0000EE
153       P:0084 60F400            move              #chn3buf,r0             ;
                 004FE0
154       P:0086 61F400            move              #>vc3_data,r1           ;
                 007F88
155       P:0088 0BF080            jsr     getchannel                        ; g
et channel 3
                 0000EE
156       P:008A 60F400            move              #chn4buf,r0             ;
                 0057D0
157       P:008C 61F400            move              #>vc4_data,r1           ;
                 007F8C
158       P:008E 0BF080            jsr     getchannel                        ; g
et channel 4
                 0000EE
159    
**** 160 [dspaula.a56 157]: WARNING --- Absolute address involves incompatible m
emory spaces (X data move field)
160       P:0090 5EF000            move                          y:vces_8_flag,a
                 007FA0
161       P:0092 200003            tst     a
162       P:0093 0AF0AA            jeq     not8_1
                 0000AD
163    
164       P:0095 60F400            move              #chn5buf,r0             ;
                 005FC0
165       P:0097 61F400            move              #>vc5_data,r1           ;
                 007F90
166       P:0099 0BF080            jsr     getchannel                        ; g
et channel 1
                 0000EE
167       P:009B 60F400            move              #chn6buf,r0             ;
                 0067B0
Motorola DSP56000 Assembler  Version 4.1.1   94-06-15  20:01:56  dspaula.a56
  Page 5



168       P:009D 61F400            move              #>vc6_data,r1           ;
                 007F94
169       P:009F 0BF080            jsr     getchannel                        ; g
et channel 2
                 0000EE
170       P:00A1 60F400            move              #chn7buf,r0             ;
                 006FA0
171       P:00A3 61F400            move              #>vc7_data,r1           ;
                 007F98
172       P:00A5 0BF080            jsr     getchannel                        ; g
et channel 3
                 0000EE
173       P:00A7 60F400            move              #chn8buf,r0             ;
                 007790
174       P:00A9 61F400            move              #>vc8_data,r1           ;
                 007F9C
175       P:00AB 0BF080            jsr     getchannel                        ; g
et channel 4
                 0000EE
176                      not8_1
177    
178                      clrbuf
179       P:00AD 229613            clr     a         r4,r6
180       P:00AE 3E0200            move              #2,n6                   ; i
nterleaved stereo voices
181       P:00AF 06DA00            do      n2,end_clearlp
                 0000B2
182       P:00B1 5E5E00            move                          a,y:(r6)+
183       P:00B2 5E5E00            move                          a,y:(r6)+
184                      end_clearlp
185       P:00B3 60F400            move              #>chn1buf,r0
                 004000
186       P:00B5 61F400            move              #>vc1_data,r1
                 007F80
187       P:00B7 0BE280            jsr     (r2)                              ; a
dd voice 1
188       P:00B8 60F400            move              #>chn2buf,r0
                 0047F0
189       P:00BA 4CDC00            move                          y:(R4)+,x0
190       P:00BB 61F400            move              #>vc2_data,r1
                 007F84
191       P:00BD 0BE280            jsr     (r2)                              ; a
dd voice 2
192       P:00BE 60F400            move              #>chn3buf,r0
                 004FE0
193       P:00C0 61F400            move              #>vc3_data,r1
                 007F88
194       P:00C2 0BE280            jsr     (r2)                              ; a
dd voice 3
195       P:00C3 60F400            move              #>chn4buf,r0
                 0057D0
196       P:00C5 4CD400            move                          y:(R4)-,x0
197       P:00C6 61F400            move              #>vc4_data,r1
                 007F8C
198       P:00C8 0BE280            jsr     (r2)                              ; a
dd voice 4
199    
**** 200 [dspaula.a56 197]: WARNING --- Absolute address involves incompatible m
emory spaces (X data move field)
200       P:00C9 5EF000            move                          y:vces_8_flag,a
                 007FA0
Motorola DSP56000 Assembler  Version 4.1.1   94-06-15  20:01:56  dspaula.a56
  Page 6



201       P:00CB 200003            tst     a
202       P:00CC 0AF0AA            jeq     not8_2
                 0000E4
203    
204       P:00CE 60F400            move              #>chn5buf,r0
                 005FC0
205       P:00D0 61F400            move              #>vc5_data,r1
                 007F90
206       P:00D2 0BE280            jsr     (r2)                              ; a
dd voice 5
207       P:00D3 60F400            move              #>chn6buf,r0
                 0067B0
208       P:00D5 4CDC00            move                          y:(R4)+,x0
209       P:00D6 61F400            move              #>vc6_data,r1
                 007F94
210       P:00D8 0BE280            jsr     (r2)                              ; a
dd voice 6
211       P:00D9 60F400            move              #>chn7buf,r0
                 006FA0
212       P:00DB 61F400            move              #>vc7_data,r1
                 007F98
213       P:00DD 0BE280            jsr     (r2)                              ; a
dd voice 7
214       P:00DE 60F400            move              #>chn8buf,r0
                 007790
215       P:00E0 4CD400            move                          y:(R4)-,x0
216       P:00E1 61F400            move              #>vc8_data,r1
                 007F9C
217       P:00E3 0BE280            jsr     (r2)                              ; a
dd voice 8
218                      not8_2
219    
220       P:00E4 0AA980  wait_E1   jclr    #0,x:HSR,wait_E1                  ; w
ait..
                 0000E4
221       P:00E6 084E2B            movep             x:HRX,a                 ;
222       P:00E7 200003            tst     a
223       P:00E8 0AF0AA            jeq     nowait
                 0000ED
224       P:00EA 0AA981  wait_E2   jclr    #1,x:HSR,wait_E2                  ; w
ait..
                 0000EA
225       P:00EC 08CF2B            movep             b,x:HRX                 ; t
ell cpu "finished"!
226                      nowait
227       P:00ED 000004            rti
228    
229    
230                      ; Fetch a channel, including volume,frequency data.
231    
232                      getchannel
233       P:00EE 0AA980            jclr    #0,x:HSR,getchannel               ; w
ait...
                 0000EE
234       P:00F0 08472B            movep             x:HRX,y1                ; r
eceive volume
235       P:00F1 46F400            move              #>$8000,y0
                 008000
236       P:00F3 06DA00            do      n2,end_gc                         ; -
 for x no. of samples
                 0000FB
Motorola DSP56000 Assembler  Version 4.1.1   94-06-15  20:01:56  dspaula.a56
  Page 7



237       P:00F5 0AA980  wait4     jclr    #0,X:HSR,wait4                    ; -
 wait...
                 0000F5
238       P:00F7 08452B            movep             x:HRX,x1                ;
239       P:00F8 2000E0            mpy     y0,x1,a
240       P:00F9 210500            move              a0,x1
241       P:00FA 2000F8            mpy     y1,x1,b
242       P:00FB 575800            move              b,x:(r0)+
243                      end_gc
244       P:00FC 000000            nop
245       P:00FD 000000            nop
246       P:00FE 00000C            rts
247    
248                      setup_player
249       P:00FF 200013            clr     a                                 ; s
et all
250       P:0100 66F400            move              #>vc1_data,r6           ; v
oice
                 007F80
251       P:0102 0620A0            rep     #8*4                              ; v
ariables
252       P:0103 565E00            move              a,x:(r6)+               ; t
o zero
253       P:0104 66F400            move              #circbuf,r6             ; c
ircular buffer pointers
                 004000
254       P:0106 05F426            movec             #cbufsize-1,m6          ; a
nd modulos..
                 001FBF
255       P:0108 22D700            move              r6,r7                   ;
256       P:0109 0467A6            movec             m6,m7                   ;
257       P:010A 70F400            move              #cbufsize,n0            ; s
etup the dac output
                 001FC0
258       P:010C 000000            nop
259       P:010D 06D820            rep     n0                                ; a
nd clear the buffer
260       P:010E 5E5E00            move                          a,y:(r6)+   ;
261                      ; Setup DAC output.
262       P:010F 08F4BF            movep             #$3c00,x:IPR            ; S
et the IPR for ssi interrupts, and ENABLE HOST COMMANDS HPL0,HPL1
                 003C00
263       P:0111 08F4AC            movep             #$4100,x:CRA            ; s
et wordlength to 16bits and 2 words per "frame".
                 004100
264       P:0113 08F4AD            movep             #$5800,x:CRB            ; t
ransmit int enable | transmitter enable | enable network mode(word request)
                 005800
265       P:0115 08F4A1            movep             #$1f8,x:PCC             ; t
urn on SSI port(Port C control reg)
                 0001F8
266       P:0117 08F4A3            movep             #0,x:PCDDR              ;
                 000000
267       P:0119 00000C            rts
268    
269                                end

0    Errors
3    Warnings
