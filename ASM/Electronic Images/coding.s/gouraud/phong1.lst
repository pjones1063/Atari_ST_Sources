Motorola DSP56000 Assembler  Version 4.1.1   93-08-30  05:23:50  phong1.a56
  Page 1



1                        ;------------------------------------------------------
----------------
2                        ;------------------------------------------------------
----------------
3                        ; Phong dsp subroutine.(moire shaded :))
4                        ; By Martin Griffiths, August 1993
5                        ;------------------------------------------------------
----------------
6                        ;------------------------------------------------------
----------------
7      
8         00FFFF         IPR       EQU     $ffff
9         00FFFE         BCR       EQU     $fffe
10        00FFE0         MYPBC     EQU     $ffe0
11        00FFE1         PCC       EQU     $ffe1
12        00FFE3         PCDDR     EQU     $ffe3
13        00FFE5         PCD       EQU     $ffe5
14        00FFEF         RX        EQU     $FFEF
15        00FFEF         TX        EQU     $FFEF
16        00FFEC         CRA       EQU     $FFEC
17        00FFED         CRB       EQU     $FFED
18        00FFE9         HSR       EQU     $ffe9
19        00FFEB         HRX       EQU     $ffeb
20     
21        P:0000                   org     p:$0
22        P:0000 0AF080            jmp     start
                 000040
23     
24        P:0040                   org     p:$40
25                       start
26     
27        P:0040 08F4BE            movep             #0,x:BCR
                 000000
28        P:0042 08F4A0            movep             #1,x:MYPBC
                 000001
29        P:0044 00FCB8            andi    #$fc,mr
30     
31        P:0045 0AA980  loop      jclr    #0,x:HSR,loop                     ; w
ait for cpu...
                 000045
32        P:0047 08452B            movep             x:HRX,x1                ; f
etch dummy.
33     
34        P:0048 0BF080            jsr     make_gradtab
                 0000E2
35     
36        000000         gradtab   equ     0                                 ; 0
..640 1/x table
37        000400         di        equ     1024                              ; x
 and y mem
38        000401         dj        equ     1025                              ; "
39        000402         dk        equ     1026                              ; "
40        000403         lm        equ     1027                              ; y
41        000404         ln        equ     1028                              ; y
42        000405         lo        equ     1029                              ; y
43        000408         i1        equ     1032                              ; "
44        000409         j1        equ     1033                              ; "
45        00040A         k1        equ     1034                              ; "
46        00040B         x1s       equ     1035                              ; x
 AND y
47        00060B         x2s       equ     1035+(256*2)                      ; x
Motorola DSP56000 Assembler  Version 4.1.1   93-08-30  05:23:50  phong1.a56
  Page 2



 AND y
48     
49                       ; Phong poly routine.
50                       ; r0-r3/n0-n2 a,b,x,y trashed.
51     
52                       gouraud_tc
53        P:004A 62F400            move              #>gradtab,r2
                 000000
54        P:004C 63F400            move              #>i1,r3
                 000408
55        P:004E 05F423            movec             #>2,m3
                 000002
56        P:0050 64F400            move              #>lm,r4
                 000403
57        P:0052 05F424            movec             #>5,m4
                 000005
58        P:0054 0AA980  get_glm   jclr    #0,x:HSR,get_glm
                 000054
59        P:0056 084E2B            movep             x:HRX,a
60        P:0057 5E5C00            move                          a,y:(r4)+
61        P:0058 0AA980  get_gln   jclr    #0,x:HSR,get_gln
                 000058
62        P:005A 084E2B            movep             x:HRX,a
63        P:005B 5E5C00            move                          a,y:(r4)+
64        P:005C 0AA980  get_glo   jclr    #0,x:HSR,get_glo
                 00005C
65        P:005E 084E2B            movep             x:HRX,a
66        P:005F 5E5C00            move                          a,y:(r4)+
67        P:0060 0AA980  get_gdy   jclr    #0,x:HSR,get_gdy
                 000060
68        P:0062 08582B            movep             x:HRX,n0                ; D
Y for gouraud poly
69        P:0063 60F400            move              #>x1s,r0
                 00040B
70        P:0065 0BF080            jsr     do_side                           ; s
can convert left
                 0000A9
71        P:0067 60F400            move              #>x2s,r0
                 00060B
72        P:0069 0BF080            jsr     do_side                           ; s
can convert right
                 0000A9
73        P:006B 60F400            move              #>x1s,r0
                 00040B
74        P:006D 61F400            move              #>x2s,r1
                 00060B
75        P:006F 44D800            move              x:(r0)+,x0              ; x
1
76        P:0070 57D900            move              x:(r1)+,b               ; x
2
77        P:0071 06D800            do      n0,gsen_draw
                 0000A7
78        P:0073 0AA981  sen_x1    jclr    #1,x:HSR,sen_x1
                 000073
79        P:0075 08C42B            movep             x0,x:HRX                ; s
end x1
80        P:0076 45F44C            sub     x0,b      #>1,x1                  ; d
x
                 000001
81        P:0078 02F068            tle     x1,b                              ; x
1>x2 then set dx=0
Motorola DSP56000 Assembler  Version 4.1.1   93-08-30  05:23:50  phong1.a56
  Page 3



82        P:0079 21FA00  gotdx     move              b,n2
83        P:007A 0AA981  sen_dx    jclr    #1,x:HSR,sen_dx
                 00007A
84        P:007C 08DA2B            movep             n2,x:HRX                ; s
end dx
85        P:007D 47EA00            move              x:(r2+n2),y1            ; g
et 1/dx
86        P:007E 56D000            move              x:(r0)-,a               ; i
1 (24bit signed)
87        P:007F 57D100            move              x:(r1)-,b               ; i
2 (24bit signed)
88        P:0080 485B1C            sub     a,b       a,l:(r3)+               ; D
i, store i1
89        P:0081 21E500            move              b,x1
90        P:0082 5ED8F8            mpy     y1,x1,b               y:(r0)+,a   ; j
1 (24bit signed)
91        P:0083 495C00            move              b,l:(r4)+               ; D
i/dx
92        P:0084 5FD900            move                          y:(r1)+,b   ; j
2 (24bit signed)
93        P:0085 485B1C            sub     a,b       a,l:(r3)+               ; D
j, store j1
94        P:0086 21E500            move              b,x1
95        P:0087 5ED8F8            mpy     y1,x1,b               y:(r0)+,a   ; k
1 (24bit signed)
96        P:0088 495C00            move              b,l:(r4)+               ; D
j/dx
97        P:0089 5FD900            move                          y:(r1)+,b   ; k
2 (24bit signed)
98        P:008A 485B1C            sub     a,b       a,l:(r3)+               ; D
k, store k1
99        P:008B 21E500            move              b,x1
100       P:008C 47F4F8            mpy     y1,x1,b   #>31,y1
                 00001F
101       P:008E 495C1B            clr     b         b,l:(r4)+               ; D
k/dx
102       P:008F 06DA00            do      n2,egourl_lp
                 0000A3
103       P:0091 F49B13            clr     a         x:(r3)+,x1  y:(r4)+,y0
104       P:0092 F49BE2            mac     x1,y0,a   x:(r3)+,x1  y:(r4)+,y0
105       P:0093 F49BE2            mac     x1,y0,a   x:(r3)+,x1  y:(r4)+,y0
106       P:0094 2600E2            mac     x1,y0,a   #0,y0
107       P:0095 02B050            tmi     y0,a
108       P:0096 48E318            add     a,b       l:(r3),a
109       P:0097 42DC7D            cmp     y1,b      l:(r4)+,x
110       P:0098 021078            tge     y1,b
111       P:0099 0AA981  sen_g     jclr    #1,x:HSR,sen_g
                 000099
112       P:009B 08CF2B            movep             b,x:HRX
113       P:009C 42DC20            add     x,a       l:(r4)+,x
114       P:009D 485B00            move              a,l:(r3)+
115       P:009E 48E300            move              l:(r3),a
116       P:009F 42DC20            add     x,a       l:(r4)+,x
117       P:00A0 485B00            move              a,l:(r3)+
118       P:00A1 48E300            move              l:(r3),a
119       P:00A2 2D0020            add     x,a       #0,b1
120       P:00A3 485B00            move              a,l:(r3)+
121                      egourl_lp
122       P:00A4 64F400            move              #>di,r4
                 000400
123       P:00A6 44D800            move              x:(r0)+,x0              ; x
Motorola DSP56000 Assembler  Version 4.1.1   93-08-30  05:23:50  phong1.a56
  Page 4



1
124       P:00A7 57D900            move              x:(r1)+,b               ; x
2
125    
126                      gsen_draw
127       P:00A8 0C004A            jmp     gouraud_tc
128    
129                      ; Scan convert a Phong poly side.
130                      ; r0 -> space for scanconvert x/i/j/k list.
131    
132       P:00A9 230E00  do_side   move              n0,a                    ; p
oly DY
133       P:00AA 21D900  gsidelp   move              a,n1                    ; s
ave count in n1
134       P:00AB 0AA980  lgdy      jclr    #0,x:HSR,lgdy
                 0000AB
135       P:00AD 085A2B            movep             x:HRX,n2                ; d
y
136       P:00AE 221100            move              r0,r1                   ;
137       P:00AF 45EA00            move              x:(r2+n2),x1            ; g
et 1/dy
138       P:00B0 0AA980  lgdx      jclr    #0,x:HSR,lgdx
                 0000B0
139       P:00B2 08442B            movep             x:HRX,x0                ; d
x
140       P:00B3 2000A0            mpy     x1,x0,a                           ; d
x/dy
141       P:00B4 210600            move              a0,y0
142       P:00B5 218700            move              a1,y1
143       P:00B6 0AA980  lgdi      jclr    #0,x:HSR,lgdi
                 0000B6
144       P:00B8 08442B            movep             x:HRX,x0                ; d
i
145       P:00B9 2000A8            mpy     x1,x0,b                           ; d
i/dy
146       P:00BA 212400            move              b0,x0
147       P:00BB 21A500            move              b1,x1
148       P:00BC 0AA980  lgx1      jclr    #0,x:HSR,lgx1
                 0000BC
149       P:00BE 084E2B            movep             x:HRX,a                 ; x
1
150       P:00BF 0AA980  lgi1      jclr    #0,x:HSR,lgi1
                 0000BF
151       P:00C1 084F2B            movep             x:HRX,b                 ; i
1
152       P:00C2 06DA00            do      n2,gdo_x_i
                 0000C5
153       P:00C4 565830            add     y,a       a,x:(r0)+               ; s
tore x
154       P:00C5 575828            add     x,b       b,x:(r0)+               ; s
tore i normal component
155                      gdo_x_i
156       P:00C6 45EA00            move              x:(r2+n2),x1            ; g
et 1/dy
157       P:00C7 0AA980  lgdj      jclr    #0,x:HSR,lgdj
                 0000C7
158       P:00C9 08442B            movep             x:HRX,x0                ; d
j
159       P:00CA 2000A0            mpy     x1,x0,a                           ; d
j/dy
160       P:00CB 210600            move              a0,y0
Motorola DSP56000 Assembler  Version 4.1.1   93-08-30  05:23:50  phong1.a56
  Page 5



161       P:00CC 218700            move              a1,y1
162       P:00CD 0AA980  lgdk      jclr    #0,x:HSR,lgdk
                 0000CD
163       P:00CF 08442B            movep             x:HRX,x0                ; d
k
164       P:00D0 2000A8            mpy     x1,x0,b                           ; d
k/dy
165       P:00D1 212400            move              b0,x0
166       P:00D2 21A500            move              b1,x1
167       P:00D3 0AA980  lgj1      jclr    #0,x:HSR,lgj1
                 0000D3
168       P:00D5 084E2B            movep             x:HRX,a                 ; j
1
169       P:00D6 0AA980  lgk1      jclr    #0,x:HSR,lgk1
                 0000D6
170       P:00D8 084F2B            movep             x:HRX,b                 ; k
1
171       P:00D9 06DA00            do      n2,gdo_j_k
                 0000DC
172       P:00DB 5E5930            add     y,a                   a,y:(r1)+   ; s
tore j normal component
173       P:00DC 5F5928            add     x,b                   b,y:(r1)+   ; s
tore k normal component
174                      gdo_j_k
175       P:00DD 232E00            move              n1,a                    ; r
estore DY count
176       P:00DE 234400            move              n2,x0
177       P:00DF 200044            sub     x0,a                              ; D
Y = DY - dy
178       P:00E0 0E70AA            jgt     gsidelp
179       P:00E1 00000C            rts
180    
181                      ; Make gradient table for 1/x calculations.
182    
183                      make_gradtab
184       P:00E2 60F400            move              #>gradtab,r0
                 000000
185       P:00E4 200013            clr     a
186       P:00E5 565800            move              a,x:(r0)+
187       P:00E6 61F400            move              #>1,r1
                 000001
188       P:00E8 068082            do      #640,make_tab_lp
                 0000F1
189       P:00EA 56F400            move              #>1,a
                 000001
190       P:00EC 222600            move              r1,y0
191       P:00ED 00FEB9            and     #$fe,ccr
192       P:00EE 0618A0            rep     #24
193       P:00EF 018050            div     y0,a
194       P:00F0 205950            add     y0,a      (r1)+
195       P:00F1 505800            move              a0,x:(r0)+
196                      make_tab_lp
197       P:00F2 00000C            rts
198    
199    
200                                end

0    Errors
0    Warnings
