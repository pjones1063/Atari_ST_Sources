;----------------------------------------------------------------------
;----------------------------------------------------------------------
; Martin Griffiths, August 1993
;----------------------------------------------------------------------
;----------------------------------------------------------------------

IPR		EQU	$ffff
BCR		EQU	$fffe
MYPBC		EQU	$ffe0
PCC		EQU	$ffe1
PCDDR		EQU	$ffe3
PCD		EQU	$ffe5
RX		EQU	$FFEF
TX		EQU	$FFEF
CRA		EQU	$FFEC
CRB		EQU	$FFED
HSR		EQU	$ffe9
HRX		EQU	$ffeb

myxstart	equ 1
myystart	equ 2
myxinc		equ 3
myyinc		equ 4

	org	p:$0
	jmp	start

	org	p:$40
start

	movep	#0,x:BCR
	movep	#1,x:MYPBC
	andi	#$fc-8-4,mr

loop	jclr	#0,x:HSR,loop		; wait for cpu...
	movep	x:HRX,x1		; fetch dummy.
	jsr 	mandelgen
	jmp	loop			; next frame

; Mandelbrot...

mandelgen
get_x	jclr	#0,x:HSR,get_x		
	movep	x:HRX,x:myxstart	 
get_y	jclr	#0,x:HSR,get_y		
	movep	x:HRX,x:myystart	 
get_xi	jclr	#0,x:HSR,get_xi		
	movep	x:HRX,x:myxinc
get_yi	jclr	#0,x:HSR,get_yi		
	movep	x:HRX,x:myyinc
get_w	jclr	#0,x:HSR,get_w		
	movep	x:HRX,n0
get_h	jclr	#0,x:HSR,get_h		
	movep	x:HRX,n1
get_lm	jclr	#0,x:HSR,get_lm	
	movep	x:HRX,n2

	move	x:myystart,y1	; v =  ystart
	do n1,end_ylp
	move	x:myxstart,x1	; u =  xstart
	do n0,end_xlp
	clr 	b		; y=0
	move	b,x0		; x=0
	do n2,end_itlp
it_lp	mpy	x0,x0,a	  b,y0	; x2 = x*x
	mpy	y0,y0,b	 	; y2 = y*y
	add	a,b		; x2+y2
	jes 	conved
	mac	-y0,y0,a  x1,b	; x = x2-y2  
	addl	b,a		; x = x2-y2+u
	mpy	x0,y0,b	a,x0	; x*y
	asl	b	y1,a	; y = 2*x*y
	addl	a,b		; y = 2*x*y+v
end_itlp
	clr	a
	jmp done1
conved	movec	lc,a
	enddo
done1	
send_px	jclr	#1,x:HSR,send_px  ; wait...
	movep	a,x:HRX	  	; send colour

	move	x:myxinc,a
	add	x1,a		; u + xinc
	move	a,x1		; u = u + xinc
end_xlp
	move	x:myyinc,a
	add	y1,a		; v + yinc
	move	a,y1		; v = v + yinc
end_ylp
	rts


	end	