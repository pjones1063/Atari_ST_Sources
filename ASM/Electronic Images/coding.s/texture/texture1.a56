;----------------------------------------------------------------------
;----------------------------------------------------------------------
; Texture mapping dsp subroutine.
; By Martin Griffiths, August 1993
;----------------------------------------------------------------------
;----------------------------------------------------------------------

IPR		EQU	$ffff
BCR		EQU	$fffe
MYPBC		EQU	$ffe0
PCC		EQU	$ffe1
PCDDR		EQU	$ffe3
PCD		EQU	$ffe5
RX		EQU	$FFEF
TX		EQU	$FFEF
CRA		EQU	$FFEC
CRB		EQU	$FFED
HSR		EQU	$ffe9
HRX		EQU	$ffeb

myxstart	equ 1
myystart	equ 2
myxinc		equ 3
myyinc		equ 4

	org	p:$0
	jmp	start

	org	p:$40
start

	movep	#0,x:BCR
	movep	#1,x:MYPBC
	andi	#$fc,mr

loop	jclr	#0,x:HSR,loop		; wait for cpu...
	movep	x:HRX,x1		; fetch dummy.

; Mandelbrot...

texture

get_dx	jclr	#0,x:HSR,get_dx		
	movep	x:HRX,n2	; dx

get_w	jclr	#0,x:HSR,get_w		
	movep	x:HRX,x0	; sdx
get_h	jclr	#0,x:HSR,get_h		
	movep	x:HRX,y0	; sdy
get_x	jclr	#0,x:HSR,get_x		
	movep	x:HRX,a		; sx1
get_y	jclr	#0,x:HSR,get_y		
	movep	x:HRX,b	 	; sy1 
	move	a,x:$1f		
	do	n2,text_lp
	move	#>$80,y1	
	move	a,x1		b,y:$1f
	mpy 	y1,x1,a		b,x1	; top 8 bits
	mpy 	y1,x1,b		#>256/2,y1
	move	b,x1	
	move	a,b0	
	mac	y1,x1,b		x:$1f,a
	asl	b
sen	jclr	#1,x:HSR,sen
	movep	b0,x:HRX
	add	x0,a		y:$1f,b
	add	y0,b		a,x:$1f		

text_lp


	jmp 	texture
		

	end	