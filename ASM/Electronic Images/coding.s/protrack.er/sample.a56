BCR		EQU     $FFFE           ; Port A Bus Control Register
HSR   		EQU	$ffe9	 	; Host status register
RX		EQU     $FFEF           ; Serial Receive Data Register
TX		EQU     $FFEF           ; Serial Transmit Data Register
TSR		EQU 	$ffee		; don't care skip register
CRA  		EQU     $FFEC          	; SSI Control Register A
CRB   		EQU     $FFED           ; SSI Control Register B
SSR		EQU	$FFEE
IPR   		EQU     $FFFF           ; Interrupt Priority Register
PCC   		EQU     $FFE1           ; Port C Control Register
PCDDR 		EQU     $FFE3           ; Port C Data Direction Register

PBC		EQU	$ffe0			
HCR		EQU	$ffe8			
HRX		EQU	$ffeb			
	
in_l             EQU $10
in_r             EQU $11
temp             EQU $12 ;x,y
inflag           EQU $13
sync		 EQU $14

	org p:$0
	jmp start

	org p:$000c
	jsr datain
	
	org p:$0010
	jsr dataout
	 
	org p:$0040
start
	MOVEP X:HRX,X0
	MOVEC #0,SP
	MOVEP #>$4100,X:CRA
	MOVEP #>$1F8,X:PCC
	BTST  #4,X:SSR
	MOVEP #>$F800,X:CRB
	MOVEP #0,X:BCR
	MOVEP #>$3000,X:IPR
	MOVEP #>$1,X:PBC

ints_on
	ANDI  #<$FC,MR
	CLR	a
	MOVE	A,X:<inflag
main
	JCLR  #0,X:<sync,main

;Daten einfach kopieren und nichts damit tun...

	MOVE  X:<in_l,y0
wait1	jclr	#1,x:HSR,wait1	
	movep	y0,x:HRX			 
	MOVE  X:<in_r,y0
wait2	jclr	#1,x:HSR,wait2
	movep	y0,x:HRX			 


	BCLR #0,X:<sync
	JMP   <main


;Interruptroutinen

datain
	MOVE  X,L:<temp
	JCLR  #0,X:<inflag,do_leftin
do_rightin
	MOVEP X:RX,X1
	MOVE  X1,X:<in_r
	BCLR  #0,X:<inflag
	BSET  #0,X:<sync
	MOVE  L:<temp,X
	RTI
do_leftin
	MOVEP X:RX,X0
	MOVE  X0,X:<in_l
	BSET  #0,X:<inflag
	MOVE  L:<temp,X
	RTI

dataout
	RTI

	