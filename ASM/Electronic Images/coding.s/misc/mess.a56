;----------------------------------------------------------------------
;----------------------------------------------------------------------

IPR		EQU	$FFFF
BCR		EQU	$FFFE
PBC		EQU	$FFE0
PCC		EQU	$FFE1
PCDDR		EQU	$FFE3		; Port C data direction
PCD		EQU	$FFE5		; Port C data register
RX		EQU	$FFEF		; SSI Receive
TX		EQU	$FFEF		; SSI Transmit
SSISR		EQU	$FFEE
CRB		EQU	$FFED
CRA		EQU	$FFEC
HTX		EQU	$FFEB
HRX		EQU	$FFEB
HCR		EQU	$FFE8		; host command register
HSR		EQU	$FFE9		; host status register

waitcts		macro
_wctswt		jclr #1,X:HSR,_wctswt
		endm

waitrts		macro
_wrtswt		jclr #0,X:HSR,_wrtswt
		endm


	org	p:$0
	jmp	start			; -> start
	
	org	p:$000C
	jsr	rec
	org	p:$000E
	movep	x:SSISR,a
	jsr	rec
	org	p:$0010
	jsr	trn
	org	p:$0012
	movep	x:SSISR,a
	jsr	trn

	org	p:$26
	jsr	init_rec

	org	p:$28
	jsr	init_trn

	org	p:$40
start	movep	#0,x:BCR
	movep	#1,x:PBC
	movep	#$4100,x:CRA		; set wordlength to 16bits and 8 words per "frame".
	movep	#$0800,x:CRB		; enable network mode(word request)
	btst	#4,X:SSISR
	movep	#$1f8,x:PCC		; turn on SSI port(Port C control reg)
	movep	#0,x:PCDDR		; 
	bset	#2,x:HCR		; enable host commands	
	movep	#$3c00,x:IPR		; Set the IPR for ssi interrupts, and ENABLE HOST COMMANDS HPL0,HPL1
	bclr	#3,x:HCR

	andi	#$f0,mr			; unmask interrupts

wait4  	nop
	jmp 	wait4


;	bclr	#3,x:HCR
;wait_r	jclr	#7,x:SSISR,ch_hr
;	movep	x:RX,x:(r6)+
;ch_hr	jclr	#3,x:HCR,wait_r

;	move	#0,r6
;wait_t	jclr	#6,x:SSISR,ch_ht
;	movep	x:(r6)+,x:TX
;ch_ht	jclr	#3,x:HCR,wait_t
;	bclr	#3,x:HCR


init_rec
	andi	#$f0,mr			; unmask interrupts
	move	#8192,n0
	move	#$00,r6
	do	n0,lpy
	waitrts
	movep	x:HRX,x:(r6)+
	nop
lpy
	;bclr	#12,x:CRB
	;bset	#13,x:CRB		; receive enable
	;bclr	#14,x:CRB
	;bset	#15,x:CRB		; receive int enable
	;btst	#4,x:SSISR

	rti
init_trn
	move	#$00,r7
	bset	#12,x:CRB		; transmit enable
	bclr	#13,x:CRB
	bset	#14,x:CRB		; transmit int enable
	bclr	#15,x:CRB
	btst	#4,x:SSISR

	rti

trn	;jclr 	#0,X:SSISR,DODAT
	;rti	
DODAT	movep	x:(r7)+,x:RX		; output sample word
	rti

rec	movep	x:RX,x:(r6)+		; get sample word
	rti

	end	
