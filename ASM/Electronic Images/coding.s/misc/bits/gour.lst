'
' Gouraud work out stuff.
'
fi$="station"
fn$=fi$+".s"
unit%=16384
'
DIM x&(100),y&(100),z&(100)   ! vertex coords space
DIM novertsf&(100)
DIM facecoordsx&(100,8)
DIM facecoordsy&(100,8)       ! for each face the actual x,y,z coords.
DIM facecoordsz&(100,8)
DIM fnrmx(100),fnrmy(100),fnrmz(100)  ! the normals for each face
RESTORE station
' Read vertice list
READ no_verts&
FOR i&=0 TO no_verts&-1
  READ x&(i&),y&(i&),z&(i&)
NEXT i&
' Read face list
READ no_faces&
FOR i&=1 TO no_faces&
  READ x&
  novertsf&(i&)=x&
  FOR j&=1 TO x&
    READ vinf&
    facecoordsx&(i&,j&)=x&(vinf&)
    facecoordsy&(i&,j&)=y&(vinf&)
    facecoordsz&(i&,j&)=z&(vinf&)
  NEXT j&
NEXT i&
' calculate normal for each face
FOR i&=1 TO no_faces&
  x1%=facecoordsx&(i&,1)
  y1%=facecoordsy&(i&,1)
  z1%=facecoordsz&(i&,1)
  x2%=facecoordsx&(i&,2)
  y2%=facecoordsy&(i&,2)
  z2%=facecoordsz&(i&,2)
  x3%=facecoordsx&(i&,3)
  y3%=facecoordsy&(i&,3)
  z3%=facecoordsz&(i&,3)
  xa%=x2%-x1%
  ya%=y2%-y1%
  za%=z2%-z1%
  xb%=x3%-x2%
  yb%=y3%-y2%
  zb%=z3%-z2%
  xx%=(ya%*zb%)-(za%*yb%)
  yy%=(za%*xb%)-(xa%*zb%)
  zz%=(xa%*yb%)-(ya%*xb%)
  ' make into unit vector!
  ul=SQR((xx%*xx%)+(yy%*yy%)+(zz%*zz%))
  xu=xx%/ul
  yu=yy%/ul
  zu=zz%/ul
  fnrmx(i&)=xu
  fnrmy(i&)=yu
  fnrmz(i&)=zu
  ' PRINT (xu*xu)+(yu*yu)+(zu*zu)
  '  PRINT fnrmx(i&),fnrmy(i&),fnrmz(i&)
NEXT i&
'
OPEN "O",#1,fn$
PRINT #1,CHR$(9)+"DC.W"+CHR$(9);no_verts&
FOR i&=0 TO no_verts&-1
  x1%=x&(i&)
  y1%=y&(i&)
  z1%=z&(i&)
  CLR normx_tot,normy_tot,normz_tot,norms_num
  ' ok we have vertex so scan and find which faces this applies to
  ' - we total the facenormals and divide by the no of faces found.
  FOR j&=1 TO no_faces&
    FOR k&=1 TO novertsf&(j&)     ! k=1.... no of vertices in this face
      IF x1%=facecoordsx&(j&,k&) AND y1%=facecoordsy&(j&,k&) AND z1%=facecoordsz&(j&,k&)
        ADD normx_tot,fnrmx(j&)
        ADD normy_tot,fnrmy(j&)
        ADD normz_tot,fnrmz(j&)
        INC norms_num
      ENDIF
    NEXT k&
  NEXT j&
  '  PRINT norms_num
  anormx=(normx_tot/norms_num)
  anormy=(normy_tot/norms_num)
  anormz=(normz_tot/norms_num)
  ul=SQR((anormx*anormx)+(anormy*anormy)+(anormz*anormz))
  anormx=anormx/ul
  anormy=anormy/ul
  anormz=anormz/ul
  '  PRINT (anormx*anormx)+(anormy*anormy)+(anormz*anormz)
  PRINT #1,CHR$(9)+"DC.W"+CHR$(9);x1%;",";y1%;",";z1%
  PRINT #1,CHR$(9)+"DC.W"+CHR$(9);ROUND(anormx*unit%);",";ROUND(anormy*unit%);",";ROUND(anormz*unit%)
NEXT i&
CLOSE #1
END
'
'
station:
DATA 12
DATA 0,-200,200
DATA  200,0,200
DATA 200,-200,0
DATA 0,200,200
DATA 200,0,-200
DATA -200,-200,0
DATA 0,-200,-200
DATA -200,0,200
DATA 200,200,0
DATA 0,200,-200
DATA -200,0,-200
DATA -200,200,0
DATA 14
DATA 3,00,01,02
DATA 3,09,11,10
DATA 3,04,08,09
DATA 3,01,03,08
DATA 3,03,07,11
DATA 3,00,05,07
DATA 3,05,06,10
DATA 3,02,04,06
DATA 4,00,02,06,05
DATA 4,04,02,01,08
DATA 4,00,07,03,01
DATA 4,07,05,10,11
DATA 4,08,03,11,09
DATA 4,06,04,09,10
'
cube:
DATA 8
DATA -800,-800,-800
DATA 800,-800,-800
DATA 800,-800,800
DATA -800,-800,800
DATA -800,800,-800
DATA 800,800,-800
DATA 800,800,800
DATA -800,800,800
DATA 6
DATA 4,03,02,01,00
DATA 4,02,06,05,01
DATA 4,03,07,06,02
DATA 4,06,07,04,05
DATA 4,01,05,04,00
DATA 4,04,07,03,00
'
thargoid:
DATA 16
DATA 0,200,0
DATA 140,140,0
DATA 200,0,0
DATA 140,-140,0
DATA 0,-200,0
DATA -140,-140,0
DATA -200,0,0
DATA -140,140,0
DATA 0,360,-100
DATA 252,252,-100
DATA 360,0,-100
DATA 252,-252,-100
DATA 0,-360,-100
DATA -252,-252,-100
DATA -360,0,-100
DATA -252,252,-100
DATA 10
DATA 8,00,01,02,03,04,05,06,07
DATA 8,15,14,13,12,11,10,09,08
DATA 4,06,14,15,07
DATA 4,05,13,14,06
DATA 4,04,12,13,05
DATA 4,03,11,12,04
DATA 4,02,10,11,03
DATA 4,01,09,10,02
DATA 4,00,08,09,01
DATA 4,07,15,08,00
'
asteriod:
DATA 12
DATA 0,-100,200
DATA 200,0,100
DATA 100,-200,0
DATA 0,100,200
DATA 200,0,-100
DATA -100,-200,0
DATA 0,-100,-200
DATA -200,0,100
DATA 100,200,0
DATA 0,100,-200
DATA -200,0,-100
DATA -100,200,0
DATA 20
DATA 3,01,02,04
DATA 3,01,00,02
DATA 3,02,00,05
DATA 3,02,05,06
DATA 3,02,06,04
DATA 3,04,06,09
DATA 3,04,09,08
DATA 3,01,04,08
DATA 3,03,01,08
DATA 3,00,01,03
DATA 3,07,11,10
DATA 3,00,07,05
DATA 3,10,05,07
DATA 3,06,05,10
DATA 3,06,10,09
DATA 3,09,10,11
DATA 3,08,09,11
DATA 3,03,08,11
DATA 3,03,11,07
DATA 3,00,03,07
'
house:
DATA 10
DATA -200,100,150
DATA 200,100,150
DATA 200,-80,150
DATA -200,-80,150
DATA -200,100,-150
DATA 200,100,-150
DATA 200,-80,-150
DATA -200,-80,-150
DATA -200,150,0
DATA 200,150,0
DATA 7
DATA 4,0,1,2,3
DATA 4,7,6,5,4
DATA 5,0,3,7,4,8
DATA 5,1,9,5,6,2
DATA 4,8,9,1,0
DATA 4,4,5,9,8
DATA 4,6,7,3,2
