; Bit bending shit.
	
		OPT O+,OW-
		
Start		CLR -(SP)
		PEA -1.W
		PEA -1.W
		MOVE #5,-(SP)
		TRAP #14
		LEA 12(SP),SP
		
		CLR.L -(SP)
		MOVE #$20,-(SP)
		TRAP #1
		ADDQ.L #6,SP
		MOVE #$2700,SR
		MOVEM.L $FFFF8240.W,D0-D7
		LEA oldmfp+32,A0
		MOVEM.L D0-D7,-32(A0)
		MOVE.B $FFFFFA07.W,(A0)+
		MOVE.B $FFFFFA09.W,(A0)+
		MOVE.B $FFFFFA13.W,(A0)+
		MOVE.B $FFFFFA15.W,(A0)+
		MOVE.B $FFFFFA19.W,(A0)+
		MOVE.B $FFFFFA1B.W,(A0)+
		MOVE.B $FFFFFA1F.W,(A0)+
		MOVE.B $FFFFFA21.W,(A0)+
		MOVE.L $68.W,(A0)+
		MOVE.L $70.W,(A0)+
		MOVE.L $120.W,(A0)+
		MOVE.L $134.W,(A0)+
		MOVE.W $FFFF820E.W,(A0)+
		BCLR.B #3,$FFFFFA17.W
		move.b #$0,$FFFFFA07.W
		CLR.B $FFFFFA09.W
		move.b #$0,$FFFFFA13.W
		CLR.B $FFFFFA15.W
		CLR.B $FFFFFA19.W
		CLR.B $FFFFFA1B.W
		MOVE.L #my_vbl,$70.W
		MOVE.L #phbl,$68.W
		MOVE.L log_base,A0
		MOVE #8191,D0
		MOVEQ #0,D1
.clp		MOVE.L D1,(A0)+
		MOVE.L D1,(A0)+
		MOVE.L D1,(A0)+
		MOVE.L D1,(A0)+
		DBF D0,.clp
		MOVE #$2300,SR
		LEA verticalwave1(PC),A0
		LEA trigtab(PC),A1
		CLR D2
		MOVE #2047,D0
.crlp		MOVEQ #30,D1
		MULS (A1,D2),D1
		ADDQ #2,D2
		AND #$7FE,D2
		ADD.L D1,D1
		SWAP D1
		mulS #160,d1
		MOVE.W D1,(A0)+
		DBF D0,.crlp

		LEA verticalwave2(PC),A0
		LEA trigtab(PC),A1
		CLR D2
		MOVE #2047,D0
.cr1lp		MOVEQ #40,D1
		MULS (A1,D2),D1
		ADDQ #8,D2
		AND #$7FE,D2
		ADD.L D1,D1
		SWAP D1
		mulS #160,d1
		MOVE.W D1,(A0)+
		DBF D0,.cr1lp

; Main vbl loop
waitkey		LEA log_base(PC),A0
		MOVEM.L (A0)+,D0-D1
		MOVE.L D0,-(A0)
		MOVE.L D1,-(A0)
		LSR #8,D0
		MOVE.L D0,$FFFF8200.W
		move vbl_timer(pc),d0
.WAIT		cmp vbl_timer(pc),d0
		beq.s .WAIT

; This is a fucking cop out cus fucking lawrence is obsessed with being
; "large", this is a sure sign of insecurity. Mr Small!!!

		LEA $FFFF8A00.W,A6
		MOVE.L log_base(PC),50(A6)
		MOVE.W #8,46(A6)        ; next word
		MOVE.B #0,58(A6)
		MOVE.B #0,59(A6)
		MOVE.W #4000,54(A6)     ; words per line
		MOVE.W #1,56(A6)	; 1 line
		MOVE.B #%11000000,60(A6)
		
; 16*17 1 plane Disting Bitbender scroller (C) Martin Griffiths 1991.

nolines		EQU 24
linewid		EQU 104
bufsize		EQU nolines*linewid

; Shift dist upwards and place next dist value in table.

calc_dist	MOVEM.L sd_dist_tab+2(PC),D0-D7/A0-A3
		MOVEM.L D0-D7/A0-A3,sd_dist_tab
		MOVE sd_dist_ang(PC),D0
		ADD sd_dist_step(PC),D0
		AND #$3FE,D0
yep		MOVE D0,sd_dist_ang
		MOVE sd_dister(PC),D1
		ADD sd_dist_step(PC),D1
		CMP sd_maxi_dist(PC),D1
		BLE.S notwang
 		SUB sd_maxi_dist(PC),D1
sel_wave	MOVE.L sd_wave_ptr(PC),A1
		LEA sd_dist_step(PC),A2
		MOVE (A1)+,(A2)+
		BPL.S nrapwave 
		LEA sd_wave_tab(PC),A1
		MOVE (A1)+,-2(A2)
nrapwave	MOVE.L (A1)+,(A2)+
		MOVE.L A1,sd_wave_ptr
notwang		MOVE D1,sd_dister
		LEA trig_tab(PC),A1		ptr to sin table
		MOVE (A1,D0),D0			sin(xd)
		MULS sd_size(PC),D0		*size (magnitude of wave)
		LSL.L #2,D0				
		SWAP D0				normalise
		ADD #48,D0
		ADD D0,D0
		ADD D0,D0			x4
		MOVE.W D0,sd_dist_tab+46	place in table
; Update scroll buffers and copy to screen.
		TST.B waittimer
		BEQ nowaiting
		SUBQ.B #1,waittimer
		BRA copy_buf
nowaiting	MOVE.L sd_scr_point(PC),A0	curr text ptr
		MOVE.L sd_which_buf(PC),A2	curr pix buffer ptr
		MOVE sd_scx(PC),D2		pixel offset
		LEA bufsize*2(A2),A2		skip 2 buffers(2 pix step)	
		ADDQ #2,D2			add 2(2 pixel step)
		CMP #16,D2			end of chunk?
		BNE.S pos_ok			no then skip
		ADDQ.W #2,sd_scrlpos		onto next chunk 
		CMP #52,sd_scrlpos		in pix buffer.
		BNE.S nowrapscr			reached end of buffer?		
		CLR sd_scrlpos			if yes reset buffer position
nowrapscr	LEA sd_scbuffer(PC),A2		reset pixel chunk offset
		MOVEQ #0,D2			+ pix position
		ADDQ.L #1,A0			after 32 pixs,next letter...
pos_ok		MOVEQ #0,D0
		TST.B 1(A0)	
		BNE.S notwrap			end of text?
		LEA sd_text(PC),A0		yes restart text
notwrap		MOVE D2,sd_scx			otherwise restore
		MOVE.L A2,sd_which_buf
		MOVE.L A0,sd_scr_point
		MOVEQ #0,D0
		MOVEQ #0,D1
		MOVE.B (A0)+,D0
		MOVE.B (A0),D1			must be plotted
		CMP.B #'s',D1
		BNE.S nosetstop
		ADDQ #1,A0
		MOVE.B (A0)+,waittimer 
		MOVE.L A0,sd_scr_point
nosetstop	LEA sd_fontbuf(PC),A0  		character addr    
		LEA (A0),A1
		SUB.B #32,D0			normalise asci char
		SUB.B #32,D1
		LSL #5,D0              		*32 font offset
		LSL #5,D1              		*32 font offset
		ADDA.W D0,A0
		ADDA.W D1,A1
norm		ADD sd_scrlpos(PC),A2
shiftless8
i		SET 0
		REPT nolines
		MOVE.W (A1)+,D3
		SWAP D3
		MOVE.W (A0)+,D3 
		ROL.L D2,D3
		MOVE.W D3,i+50(A2)
		MOVE.W D3,i-2(A2)
		ROL.L #1,D3
		MOVE.W D3,i+50+bufsize(A2)
		MOVE.W D3,i-2+bufsize(A2)
i		SET i+linewid
		ENDR

copy_buf	LEA distedbuf,A0
		LEA sd_dist_tab,A2
		MOVE.W sd_scx(PC),D1
		MOVE sd_scrlpos(PC),D2
		ADD D1,D1
		ADD D1,D1
j		SET 0
k		SET 2
		REPT nolines
		MOVE.W (A2)+,D0
		ADD.W D1,D0
		MOVE.L sd_xtab-(sd_dist_tab+k)(A2,D0),A1
		LEA j(A1),A1
		ADD D2,A1
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
		MOVE.L (a1)+,(A0)+
k		SET k+2
j		SET j+linewid
		ENDR 

		MOVE.L log_base(PC),A0
		LEA 90*160(A0),A0
		LEA distedbuf,A1
		LEA verticalwave1(PC),A3
		LEA verticalwave2(PC),A4
		MOVE.W vert_ptr1(PC),D0
		ADD #20,D0
		AND #$7FE,D0
		MOVE.W D0,vert_ptr1
		ADD D0,A3
		MOVE.W vert_ptr2(PC),D0
		ADDQ #8,D0
		AND #$7FE,D0
		MOVE.W D0,vert_ptr2
		ADD D0,A4

		LEA $FFFF8A00.W,A6
		MOVE.W #40,34(A6)       ; next line in source
		MOVE.W #160,48(A6)     ; offset to next line,dest
		MOVE.B #2,58(A6)
		MOVE.B #3,59(A6)
		MOVE.W #1,54(A6)      ; words per line
		MOVEQ #24,D5
		MOVE.B #%11000000,D6
		LEA 36(A6),A6
		MOVEQ #19,D7
i		SET %1000000000000000
.lp		
		REPT 16
		MOVE.L A0,A5
		ADDA.W (A3)+,A5
		ADDA.W (A4)+,A5
		MOVE.L A1,36-36(A6)       ; source addr
		MOVE #i,40-36(A6)         ; first mask
		MOVE.L A5,50-36(A6)       ; dest addr
		MOVE.W D5,56-36(A6)       ; do 16 lines	
		MOVE.B D6,60-36(A6)
i		SET i/2
		ENDR
		ADDQ.L #2,A1
		ADDQ.L #8,A0
		DBF D7,.lp

testkey		BTST.B #0,$FFFFFC00.W
		BEQ waitkey
		CMP.B #$39+$80,$FFFFFC02.W
		BNE waitkey

		MOVE #$2700,SR
		LEA oldmfp,A0
		MOVEM.L (A0)+,D0-D7
		MOVEM.L D0-D7,$FFFF8240.W
		MOVE.B (A0)+,$FFFFFA07.W
		MOVE.B (A0)+,$FFFFFA09.W
		MOVE.B (A0)+,$FFFFFA13.W
		MOVE.B (A0)+,$FFFFFA15.W
		MOVE.B (A0)+,$FFFFFA19.W
		MOVE.B (A0)+,$FFFFFA1B.W
		MOVE.B (A0)+,$FFFFFA1F.W
		MOVE.B (A0)+,$FFFFFA21.W
		MOVE.L (A0)+,$68.W
		MOVE.L (A0)+,$70.W
		MOVE.L (A0)+,$120.W
		MOVE.L (A0)+,$134.W
		MOVE.W (A0)+,$FFFF820E.W
		MOVE #$2300,SR
		CLR -(SP)
		TRAP #1
log_base	DC.L $100000
		DC.L $110000
my_vbl		ADDQ #1,vbl_timer
		RTE
phbl		RTE
vert_ptr1	ds.w 1
vert_ptr2	ds.w 1
waittimer	ds.w 1
vbl_timer	DC.W 0
oldmfp		DS.L 24
sd_scr_point	DC.L sd_text
sd_which_buf	DC.L sd_scbuffer
sd_scx		DC.W 0
sd_scrlpos	DC.W 0
sd_inletswitch	DC.W 0
sd_text		dc.b "    ELECTRONIC IMAGES OF     THE INNER CIRCLE     s",200,"  PROUDLY PRESENT A FUCKING NICE STE SCROLLER...        "
		dc.b 0
		EVEN
sd_fontbuf	
vfontbuf	dc.l $00000000,$00000000,$00000000,$00000000,$00000000
		dc.l $00000000,$00000000,$00000000,$07800780,$07800780
		dc.l $07800780,$07800780,$07800300,$00000300,$07800300
		dc.l $00000000,$3CF03EF8,$0E381C70,$30C00000,$00000000
		dc.l $00000000,$00000000,$00000000,$00000000,$00000000
		dc.l $00000CC0,$0CC07FF8,$7FF80CC0,$0CC07FF8,$7FF80CC0
		dc.l $0CC00000,$00000000,$07E00FFC,$1FFE3EFE,$3E7C1F80
		dc.l $0FF007FC,$63FE7FFE,$7FFE7FFE,$7FFC07E0,$00000000
		dc.l $180F3C1E,$663C6678,$3CF019E0,$03C00780,$0F301E78
		dc.l $3CCC78CC,$F078E030,$00000000,$1FC03FE0,$78E07DE0
		dc.l $3FC01F00,$3F8C7BDC,$FBFCFFFC,$FFFC7FFE,$7FFF3FCF
		dc.l $00000000,$3C003E00,$0E001C00,$30000000,$00000000
		dc.l $00000000,$00000000,$00000000,$00000000,$03800780
		dc.l $0F000F00,$1E001C00,$1C001C00,$1C001E00,$0F000F00
		dc.l $07800380,$00000000,$01C001E0,$00F000F0,$00780038
		dc.l $00380038,$00380078,$00F000F0,$01E001C0,$00000000
		dc.l $00000000,$07006730,$77703FE0,$1FC01FC0,$3FE07770
		dc.l $67300700,$00000000,$00000000,$00000000,$00000700
		dc.l $07000700,$3FE03FE0,$07000700,$07000000,$00000000
		dc.l $00000000,$00000000,$00000000,$00000000,$00000000
		dc.l $00000000,$00003C00,$3E000E00,$1C003000,$00000000
		dc.l $00000000,$00000000,$1FC01FC0,$00000000,$00000000
		dc.l $00000000,$00000000,$00000000,$00000000,$00000000
		dc.l $00000000,$00000000,$0C001E00,$1E000C00,$00000000
		dc.l $000F001E,$003C0078,$00F001E0,$03C00780,$0F001E00
		dc.l $3C007800,$F000E000,$00000000,$0FE03FF8,$7C7C783C
		dc.l $783C783C,$783C7BBC,$7FFC7FFC,$3FFC3FF8,$1FF00FE0
		dc.l $00000000,$07800F80,$1F803F80,$07800780,$07800FC0
		dc.l $3FF03FF0,$3FF03FF0,$3FF03FF0,$00000000,$1FE01FF0
		dc.l $3FF03CF0,$1DF003E0,$07E00FC0,$1F8C3FFC,$3FFC3FFC
		dc.l $3FFC39F8,$00000000,$1FF01FF8,$3FF83CF8,$1DF803F0
		dc.l $03F8007C,$38FC3FFC,$3FFC3FF8,$3FF01FE0,$00000000
		dc.l $03F007F0,$0FF01FF0,$3FF03DF0,$79F07FF0,$7FF87FF8
		dc.l $7FF87FF8,$7FF803E0,$00000000,$0FF80FF8,$1F781E00
		dc.l $3FE03FF0,$01F8007C,$30FC3FFC,$3FFC3FF8,$3FF01FE0
		dc.l $00000000,$0FF01FF8,$1F783E00,$3FC07FF0,$7FF87C7C
		dc.l $7CFC7FFC,$7FFC7FF8,$3FF01FE0,$00000000,$1FF81FF8
		dc.l $1E781E78,$00F000F0,$01E003E0,$03C007C0,$0FC01FC0
		dc.l $3FC03FC0,$00000000,$0FF81FFC,$3E3E3F7E,$1FFC07F0
		dc.l $1F7C3E3E,$7F7F7FFF,$7FFF3FFE,$3FFE1FFC,$00000000
		dc.l $07E00FF8,$1E7C1E7E,$1FFE0FDE,$07BE607E,$7FFE7FFE
		dc.l $7FFE7FFC,$3FF81FF0,$00000000,$00000000,$00000000
		dc.l $00000E00,$1F000E00,$00000000,$0E001F00,$0E000000
		dc.l $00000000,$00000000,$00000000,$00000E00,$1F000E00
		dc.l $00001E00,$1F000700,$0E001800,$00000000,$003C0078
		dc.l $00F001E0,$03C00780,$0F000780,$03C001E0,$00F00078
		dc.l $003C001C,$00000000,$00000000,$00000000,$7FE07FE0
		dc.l $00007FE0,$7FE00000,$00000000,$00000000,$00000000
		dc.l $3C001E00,$0F000780,$03C001E0,$00F001E0,$03C00780
		dc.l $0F001E00,$3C003800,$00000000,$3FE07FF8,$78FC7E7C
		dc.l $3EF803F0,$07E007C0,$07E003C0,$000003C0,$07E003C0,$00000000
		dc.l $0FE03FF8,$7C7CF83E,$F3DEF7FE,$F77EF77E,$F7FCFBF0
		dc.l $FC007FFC,$3FFC0FFC,$00000000,$1FFC1FFC,$0F780770
		dc.l $07700FF8,$1F7C3E3E,$7F7F7F7F,$7F7F7F7F,$7F7F7F7F
		dc.l $00000000,$3FFC3FFE,$1F3E0F7E,$0FFE0FF8,$1F7C3E3E
		dc.l $7F7F7FFF,$7FFF7FFF,$7FFE7FFC,$00000000,$07FC1FFE
		dc.l $3F1E3E3E,$7E3C7E00,$7F007F8F,$7FFF3FFF,$3FFF1FFF
		dc.l $0FFE03FC,$00000000,$3FF03FF8,$1F7C0F3E,$0F1F0F1F
		dc.l $1F1F3F1F,$7F3F7FFF,$7FFF7FFF,$7FFE7FFC,$00000000
		dc.l $3FFE3FFE,$1F9E0F00,$0F700FF0,$1F803F0F,$7FBF7FFF
		dc.l $7FFF7FFF,$7FFF7FFF,$00000000,$3FFE3FFE,$1F9E0F00
		dc.l $0F700FF0,$1FC03F00,$7FE07FE0,$7FE07FE0,$7FE07FE0
		dc.l $00000000,$07FC1FFE,$3F1E3E3E,$7E3C7E00,$7E007F0F
		dc.l $7FFF3FFF,$3FFF1FFF,$0FF703E3,$00000000,$3F7E3F7E
		dc.l $1E3C0E38,$0E780FF8,$1F3C3E3E,$7F7F7F7F,$7F7F7F7F
		dc.l $7F7F7F7F,$00000000,$0FC00FC0,$07800780,$07800780
		dc.l $07800FC0,$3FF03FF0,$3FF03FF0,$3FF03FF0,$00000000
		dc.l $03F003F0,$01E001E0,$01E001E0,$01E043E0,$7FE07FE0
		dc.l $7FE07FE0,$7FE03FC0,$00000000,$1F1E1F3E,$0E780EF0
		dc.l $0FE00FF0,$1E783E7C,$7F7F7F7F,$7F7F7F7F,$7F7F7F3F
		dc.l $00000000,$3FC03FC0,$1F800F00,$0F000F00,$1F9E3FFE
		dc.l $7FFE7FFE,$7FFE7FFE,$7FFE7FFE,$00000000,$3E3E3F7E
		dc.l $1FFC0FF8,$0FF80EB8,$1EBC3E3E,$7F7F7F7F,$7F7F7F7F
		dc.l $7F7F7F7F,$00000000,$3C7E3E7E,$1F7C0FF8,$0FF80FF8
		dc.l $1F3C3F1E,$7F7F7F7F,$7F7F7F7F,$7F7F7F7F,$00000000
		dc.l $0FE03FF8,$7C7CF83E,$F83EF83E,$F83EFBBE,$FFFEFFFE
		dc.l $7FFC3FF8,$1FF00FE0,$00000000,$3FFC3FFE,$1F3E0F7E
		dc.l $0FFE0FFC,$1F803F80,$7FC07FE0,$7FE07FE0,$7FE07FE0
		dc.l $00000000,$0FE03FF8,$7C7CF83E,$F83EF83E,$F83EFBBE
		dc.l $FFFEFFFE,$7FFC3FF8,$1FF00FE0,$039803F8,$3FF83FFE
		dc.l $1F3E0F7C,$0FF80FF8,$1F3C3F1E,$7F7F7F7F,$7F7F7F7F
		dc.l $7F7F7F7F,$00000000,$0FF81FFE,$1F7E0F3C,$0FC007F0
		dc.l $01FC21FE,$7FFF7FFF,$7FFF7FFF,$7FFE7FFC,$00000000
		dc.l $3FF03FF0,$3FF037B0,$07800780,$07800FC0,$3FF03FF0
		dc.l $3FF03FF0,$3FF03FF0,$00000000,$3F7E3F7E,$1E3C1E3C
		dc.l $1E3C1E3C,$3E3C3F7E,$7FFF7FFF,$7FFF7FFF,$3FFF1FDE 
		dc.l $00000000,$3F7E3F7E,$1E3C1C1C,$1E3C1F7C,$3FFE3FFE 
		dc.l $1FFC0FF8,$0FF807F0,$07F003E0,$00000000,$FBDFFBDF 
		dc.l $FBDE79CE,$79CE7BDE,$7FFE7FFF,$FFFFFFFF,$FFFFFFFF 
		dc.l $7FFF3BDE,$00000000,$3F7E3F7E,$1E3C0F78,$07F007F0 
		dc.l $1F7C3E3E,$7F7F7F7F,$7F7F7F7F,$7F7F7F7F,$00000000 
		dc.l $3F7E3F7E,$1E3C0F78,$07F007F0,$0FE07FE0,$7FE07FE0 
		dc.l $7FE07FE0,$7FC07F80,$00000000,$3FF03FF0,$3FF038F0 
		dc.l $01F003E0,$07E00FCE,$1FBE3FFE,$3FFE3FFE,$3FFE3FFE 
		dc.l $00000000,$00000000,$00000000,$00000000,$00000000 
		dc.l $00000000,$00000000,$00000000,$00000000 


sd_dist_ang	DC.W 0
sd_dist_step	DC.W 4
sd_maxi_dist	DC.W 512
sd_size		DC.W 0
sd_dister	DC.W 0
sd_wave_ptr	DC.L sd_wave_tab
sd_wave_tab	DC.W 4,512,48
		DC.W 16,1024,18
		DC.W 8,4096,14
		DC.W 4,512,44
		DC.W 2,512,48
		DC.W -1

sd_dist_tab	DCB.W nolines,48
i		SET 0
sd_xtab		REPT 10
		DC.L sd_scbuffer+i
		DC.L sd_scbuffer+i+(bufsize*1)
		DC.L sd_scbuffer+i+(bufsize*2)
		DC.L sd_scbuffer+i+(bufsize*3)
		DC.L sd_scbuffer+i+(bufsize*4)
		DC.L sd_scbuffer+i+(bufsize*5)
		DC.L sd_scbuffer+i+(bufsize*6)
		DC.L sd_scbuffer+i+(bufsize*7)
		DC.L sd_scbuffer+i+(bufsize*8)
		DC.L sd_scbuffer+i+(bufsize*9)
		DC.L sd_scbuffer+i+(bufsize*10)
		DC.L sd_scbuffer+i+(bufsize*11)
		DC.L sd_scbuffer+i+(bufsize*12)
		DC.L sd_scbuffer+i+(bufsize*13)
		DC.L sd_scbuffer+i+(bufsize*14)
		DC.L sd_scbuffer+i+(bufsize*15)
i		SET i+2
		ENDR

trig_tab	rept 2
		dc.l	$0000019B,$032304BE,$064507DE,$09630AF9,$0C7C0E0E 
		dc.l	$0F8C111A,$1293141B,$158F1710,$187D19F7,$1B5C1CCE 
		dc.l	$1E2B1F93,$20E62244,$238E24E1,$261F2766,$289929D4 
		dc.l	$2AFA2C27,$2D412E5F,$2F6B307B,$31783279,$33673458 
		dc.l	$35363616,$36E437B3,$3871392E,$39DA3A85,$3B203BB9 
		dc.l	$3C413CC7,$3D3E3DB0,$3E143E73,$3EC43F0F,$3F4E3F85 
		dc.l	$3FB03FD3,$3FEB3FFA,$40003FFA,$3FEB3FD2,$3FB03F83 
		dc.l	$3F4E3F0C,$3EC43E6F,$3E143DAB,$3D3E3CC1,$3C413BB2 
		dc.l	$3B203A7E,$39DA3926,$387137AA,$36E4360C,$3536344D 
		dc.l	$3367326E,$3178306F,$2F6B2E53,$2D412C1A,$2AFA29C6 
		dc.l	$28992758,$261F24D2,$238E2235,$20E61F83,$1E2B1CBE 
		dc.l	$1B5C19E7,$187D1700,$158F140A,$12931109,$0F8C0DFC 
		dc.l	$0C7C0AE8,$096307CC,$064504AC,$03230189,$0000FE64 
		dc.l	$FCDCFB41,$F9BAF821,$F69CF506,$F383F1F1,$F073EEE5 
		dc.l	$ED6CEBE4,$EA70E8EF,$E782E608,$E4A3E331,$E1D4E06C 
		dc.l	$DF19DDBB,$DC71DB1E,$D9E0D899,$D766D62B,$D505D3D8 
		dc.l	$D2BED1A0,$D094CF84,$CE87CD86,$CC98CBA7,$CAC9C9E9 
		dc.l	$C91BC84C,$C78EC6D1,$C625C57A,$C4DFC446,$C3BEC338 
		dc.l	$C2C1C24F,$C1EBC18C,$C13BC0F0,$C0B1C07A,$C04FC02C 
		dc.l	$C014C005,$C000C005,$C014C02D,$C04FC07C,$C0B1C0F3 
		dc.l	$C13BC190,$C1EBC254,$C2C1C33E,$C3BEC44D,$C4DFC581 
		dc.l	$C625C6D9,$C78EC855,$C91BC9F3,$CAC9CBB2,$CC98CD91 
		dc.l	$CE87CF90,$D094D1AC,$D2BED3E5,$D505D639,$D766D8A7 
		dc.l	$D9E0DB2D,$DC71DDCA,$DF19E07C,$E1D4E341,$E4A3E618 
		dc.l	$E782E8FF,$EA70EBF5,$ED6CEEF6,$F073F203,$F383F517 
		dc.l	$F69CF833,$F9BAFB53,$FCDCFE76
		endr

trigtab		dc.w	$7FFF,$7FFE,$7FFC,$7FF9,$7FF5,$7FEF,$7FE8,$7FE0 
		dc.w	$7FD7,$7FCD,$7FC1,$7FB4,$7FA6,$7F96,$7F86,$7F74 
		dc.w	$7F61,$7F4C,$7F37,$7F20,$7F08,$7EEF,$7ED4,$7EB9 
		dc.w	$7E9C,$7E7E,$7E5E,$7E3E,$7E1C,$7DF9,$7DD5,$7DB0 
		dc.w	$7D89,$7D61,$7D38,$7D0E,$7CE2,$7CB6,$7C88,$7C59 
		dc.w	$7C29,$7BF7,$7BC4,$7B91,$7B5C,$7B25,$7AEE,$7AB5 
		dc.w	$7A7C,$7A41,$7A04,$79C7,$7989,$7949,$7908,$78C6 
		dc.w	$7883,$783F,$77F9,$77B3,$776B,$7722,$76D8,$768D 
		dc.w	$7640,$75F3,$75A4,$7554,$7503,$74B1,$745E,$740A 
		dc.w	$73B5,$735E,$7306,$72AE,$7254,$71F9,$719D,$7140 
		dc.w	$70E1,$7082,$7022,$6FC0,$6F5E,$6EFA,$6E95,$6E30 
		dc.w	$6DC9,$6D61,$6CF8,$6C8E,$6C23,$6BB7,$6B4A,$6ADB 
		dc.w	$6A6C,$69FC,$698B,$6919,$68A5,$6831,$67BC,$6745 
		dc.w	$66CE,$6656,$65DD,$6562,$64E7,$646B,$63EE,$6370 
		dc.w	$62F1,$6271,$61F0,$616E,$60EB,$6067,$5FE2,$5F5D 
		dc.w	$5ED6,$5E4F,$5DC6,$5D3D,$5CB3,$5C28,$5B9C,$5B0F 
		dc.w	$5A81,$59F3,$5963,$58D3,$5842,$57B0,$571D,$5689 
		dc.w	$55F4,$555F,$54C9,$5432,$539A,$5301,$5268,$51CE 
		dc.w	$5133,$5097,$4FFA,$4F5D,$4EBF,$4E20,$4D80,$4CE0 
		dc.w	$4C3F,$4B9D,$4AFA,$4A57,$49B3,$490E,$4869,$47C3 
		dc.w	$471C,$4674,$45CC,$4523,$447A,$43D0,$4325,$4279 
		dc.w	$41CD,$4120,$4073,$3FC5,$3F16,$3E67,$3DB7,$3D07 
		dc.w	$3C56,$3BA4,$3AF2,$3A3F,$398C,$38D8,$3824,$376F 
		dc.w	$36B9,$3603,$354D,$3496,$33DE,$3326,$326D,$31B4 
		dc.w	$30FB,$3041,$2F86,$2ECC,$2E10,$2D54,$2C98,$2BDB 
		dc.w	$2B1E,$2A61,$29A3,$28E5,$2826,$2767,$26A7,$25E7 
		dc.w	$2527,$2467,$23A6,$22E4,$2223,$2161,$209F,$1FDC 
		dc.w	$1F19,$1E56,$1D93,$1CCF,$1C0B,$1B46,$1A82,$19BD 
		dc.w	$18F8,$1833,$176D,$16A7,$15E1,$151B,$1455,$138E 
		dc.w	$12C7,$1200,$1139,$1072,$0FAB,$0EE3,$0E1B,$0D53 
		dc.w	$0C8B,$0BC3,$0AFB,$0A32,$096A,$08A1,$07D9,$0710 
		dc.w	$0647,$057E,$04B6,$03ED,$0324,$025B,$0192,$00C9 
		dc.w	$0000,$FF37,$FE6E,$FDA5,$FCDC,$FC13,$FB4A,$FA82 
		dc.w	$F9B9,$F8F0,$F827,$F75F,$F696,$F5CE,$F505,$F43D 
		dc.w	$F375,$F2AD,$F1E5,$F11D,$F055,$EF8E,$EEC7,$EE00 
		dc.w	$ED39,$EC72,$EBAB,$EAE5,$EA1F,$E959,$E893,$E7CD 
		dc.w	$E708,$E643,$E57E,$E4BA,$E3F5,$E331,$E26D,$E1AA 
		dc.w	$E0E7,$E024,$DF61,$DE9F,$DDDD,$DD1C,$DC5A,$DB99 
		dc.w	$DAD9,$DA19,$D959,$D899,$D7DA,$D71B,$D65D,$D59F 
		dc.w	$D4E2,$D425,$D368,$D2AC,$D1F0,$D134,$D07A,$CFBF 
		dc.w	$CF05,$CE4C,$CD93,$CCDA,$CC22,$CB6A,$CAB3,$C9FD 
		dc.w	$C947,$C891,$C7DC,$C728,$C674,$C5C1,$C50E,$C45C 
		dc.w	$C3AA,$C2F9,$C249,$C199,$C0EA,$C03B,$BF8D,$BEE0 
		dc.w	$BE33,$BD87,$BCDB,$BC30,$BB86,$BADD,$BA34,$B98C 
		dc.w	$B8E4,$B83D,$B797,$B6F2,$B64D,$B5A9,$B506,$B463 
		dc.w	$B3C1,$B320,$B280,$B1E0,$B141,$B0A3,$B006,$AF69 
		dc.w	$AECD,$AE32,$AD98,$ACFF,$AC66,$ABCE,$AB37,$AAA1 
		dc.w	$AA0C,$A977,$A8E3,$A850,$A7BE,$A72D,$A69D,$A60D 
		dc.w	$A57F,$A4F1,$A464,$A3D8,$A34D,$A2C3,$A23A,$A1B1 
		dc.w	$A12A,$A0A3,$A01E,$9F99,$9F15,$9E92,$9E10,$9D8F 
		dc.w	$9D0F,$9C90,$9C12,$9B95,$9B19,$9A9E,$9A23,$99AA 
		dc.w	$9932,$98BB,$9844,$97CF,$975B,$96E7,$9675,$9604 
		dc.w	$9594,$9525,$94B6,$9449,$93DD,$9372,$9308,$929F 
		dc.w	$9237,$91D0,$916B,$9106,$90A2,$9040,$8FDE,$8F7E 
		dc.w	$8F1F,$8EC0,$8E63,$8E07,$8DAC,$8D52,$8CFA,$8CA2 
		dc.w	$8C4B,$8BF6,$8BA2,$8B4F,$8AFD,$8AAC,$8A5C,$8A0D 
		dc.w	$89C0,$8973,$8928,$88DE,$8895,$884D,$8807,$87C1 
		dc.w	$877D,$873A,$86F8,$86B7,$8677,$8639,$85FC,$85BF 
		dc.w	$8584,$854B,$8512,$84DB,$84A4,$846F,$843C,$8409 
		dc.w	$83D7,$83A7,$8378,$834A,$831E,$82F2,$82C8,$829F 
		dc.w	$8277,$8250,$822B,$8207,$81E4,$81C2,$81A2,$8182 
		dc.w	$8164,$8147,$812C,$8111,$80F8,$80E0,$80C9,$80B4 
		dc.w	$809F,$808C,$807A,$806A,$805A,$804C,$803F,$8033 
		dc.w	$8029,$8020,$8018,$8011,$800B,$8007,$8004,$8002 
		dc.w	$8001,$8002,$8004,$8007,$800B,$8011,$8018,$8020 
		dc.w	$8029,$8033,$803F,$804C,$805A,$806A,$807A,$808C 
		dc.w	$809F,$80B4,$80C9,$80E0,$80F8,$8111,$812C,$8147 
		dc.w	$8164,$8182,$81A2,$81C2,$81E4,$8207,$822B,$8250 
		dc.w	$8277,$829F,$82C8,$82F2,$831E,$834A,$8378,$83A7 
		dc.w	$83D7,$8409,$843C,$846F,$84A4,$84DB,$8512,$854B 
		dc.w	$8584,$85BF,$85FC,$8639,$8677,$86B7,$86F8,$873A 
		dc.w	$877D,$87C1,$8807,$884D,$8895,$88DE,$8928,$8973 
		dc.w	$89C0,$8A0D,$8A5C,$8AAC,$8AFD,$8B4F,$8BA2,$8BF6 
		dc.w	$8C4B,$8CA2,$8CFA,$8D52,$8DAC,$8E07,$8E63,$8EC0 
		dc.w	$8F1F,$8F7E,$8FDE,$9040,$90A2,$9106,$916B,$91D0 
		dc.w	$9237,$929F,$9308,$9372,$93DD,$9449,$94B6,$9525 
		dc.w	$9594,$9604,$9675,$96E7,$975B,$97CF,$9844,$98BB 
		dc.w	$9932,$99AA,$9A23,$9A9E,$9B19,$9B95,$9C12,$9C90 
		dc.w	$9D0F,$9D8F,$9E10,$9E92,$9F15,$9F99,$A01E,$A0A3 
		dc.w	$A12A,$A1B1,$A23A,$A2C3,$A34D,$A3D8,$A464,$A4F1 
		dc.w	$A57F,$A60D,$A69D,$A72D,$A7BE,$A850,$A8E3,$A977 
		dc.w	$AA0C,$AAA1,$AB37,$ABCE,$AC66,$ACFF,$AD98,$AE32 
		dc.w	$AECD,$AF69,$B006,$B0A3,$B141,$B1E0,$B280,$B320 
		dc.w	$B3C1,$B463,$B506,$B5A9,$B64D,$B6F2,$B797,$B83D 
		dc.w	$B8E4,$B98C,$BA34,$BADD,$BB86,$BC30,$BCDB,$BD87 
		dc.w	$BE33,$BEE0,$BF8D,$C03B,$C0EA,$C199,$C249,$C2F9 
		dc.w	$C3AA,$C45C,$C50E,$C5C1,$C674,$C728,$C7DC,$C891 
		dc.w	$C947,$C9FD,$CAB3,$CB6A,$CC22,$CCDA,$CD93,$CE4C 
		dc.w	$CF05,$CFBF,$D07A,$D134,$D1F0,$D2AC,$D368,$D425 
		dc.w	$D4E2,$D59F,$D65D,$D71B,$D7DA,$D899,$D959,$DA19 
		dc.w	$DAD9,$DB99,$DC5A,$DD1C,$DDDD,$DE9F,$DF61,$E024 
		dc.w	$E0E7,$E1AA,$E26D,$E331,$E3F5,$E4BA,$E57E,$E643 
		dc.w	$E708,$E7CD,$E893,$E959,$EA1F,$EAE5,$EBAB,$EC72 
		dc.w	$ED39,$EE00,$EEC7,$EF8E,$F055,$F11D,$F1E5,$F2AD 
		dc.w	$F375,$F43D,$F505,$F5CE,$F696,$F75F,$F827,$F8F0 
		dc.w	$F9B9,$FA82,$FB4A,$FC13,$FCDC,$FDA5,$FE6E,$FF37 
		dc.w	$0000,$00C9,$0192,$025B,$0324,$03ED,$04B6,$057E 
		dc.w	$0647,$0710,$07D9,$08A1,$096A,$0A32,$0AFB,$0BC3 
		dc.w	$0C8B,$0D53,$0E1B,$0EE3,$0FAB,$1072,$1139,$1200 
		dc.w	$12C7,$138E,$1455,$151B,$15E1,$16A7,$176D,$1833 
		dc.w	$18F8,$19BD,$1A82,$1B46,$1C0B,$1CCF,$1D93,$1E56 
		dc.w	$1F19,$1FDC,$209F,$2161,$2223,$22E4,$23A6,$2467 
		dc.w	$2527,$25E7,$26A7,$2767,$2826,$28E5,$29A3,$2A61 
		dc.w	$2B1E,$2BDB,$2C98,$2D54,$2E10,$2ECC,$2F86,$3041 
		dc.w	$30FB,$31B4,$326D,$3326,$33DE,$3496,$354D,$3603 
		dc.w	$36B9,$376F,$3824,$38D8,$398C,$3A3F,$3AF2,$3BA4 
		dc.w	$3C56,$3D07,$3DB7,$3E67,$3F16,$3FC5,$4073,$4120 
		dc.w	$41CD,$4279,$4325,$43D0,$447A,$4523,$45CC,$4674 
		dc.w	$471C,$47C3,$4869,$490E,$49B3,$4A57,$4AFA,$4B9D 
		dc.w	$4C3F,$4CE0,$4D80,$4E20,$4EBF,$4F5D,$4FFA,$5097 
		dc.w	$5133,$51CE,$5268,$5301,$539A,$5432,$54C9,$555F 
		dc.w	$55F4,$5689,$571D,$57B0,$5842,$58D3,$5963,$59F3 
		dc.w	$5A81,$5B0F,$5B9C,$5C28,$5CB3,$5D3D,$5DC6,$5E4F 
		dc.w	$5ED6,$5F5D,$5FE2,$6067,$60EB,$616E,$61F0,$6271 
		dc.w	$62F1,$6370,$63EE,$646B,$64E7,$6562,$65DD,$6656 
		dc.w	$66CE,$6745,$67BC,$6831,$68A5,$6919,$698B,$69FC 
		dc.w	$6A6C,$6ADB,$6B4A,$6BB7,$6C23,$6C8E,$6CF8,$6D61 
		dc.w	$6DC9,$6E30,$6E95,$6EFA,$6F5E,$6FC0,$7022,$7082 
		dc.w	$70E1,$7140,$719D,$71F9,$7254,$72AE,$7306,$735E 
		dc.w	$73B5,$740A,$745E,$74B1,$7503,$7554,$75A4,$75F3 
		dc.w	$7640,$768D,$76D8,$7722,$776B,$77B3,$77F9,$783F 
		dc.w	$7883,$78C6,$7908,$7949,$7989,$79C7,$7A04,$7A41 
		dc.w	$7A7C,$7AB5,$7AEE,$7B25,$7B5C,$7B91,$7BC4,$7BF7 
		dc.w	$7C29,$7C59,$7C88,$7CB6,$7CE2,$7D0E,$7D38,$7D61 
		dc.w	$7D89,$7DB0,$7DD5,$7DF9,$7E1C,$7E3E,$7E5E,$7E7E 
		dc.w	$7E9C,$7EB9,$7ED4,$7EEF,$7F08,$7F20,$7F37,$7F4C 
		dc.w	$7F61,$7F74,$7F86,$7F96,$7FA6,$7FB4,$7FC1,$7FCD 
		dc.w	$7FD7,$7FE0,$7FE8,$7FEF,$7FF5,$7FF9,$7FFC,$7FFE 


		SECTION BSS
verticalwave1	ds.w 2048
verticalwave2	ds.w 2048

		DS.W 2
sd_scbuffer	REPT 16
		DS.B bufsize
		ENDR
		DS.W 2
distedbuf	DS.W 20*16

		DS.L 199
stack		DS.L 1
