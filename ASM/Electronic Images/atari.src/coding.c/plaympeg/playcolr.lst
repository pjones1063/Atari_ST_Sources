Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 1



1                        ;------------------------------------------------------
----------------
2                        ; DSP 56001 MPEG decoder I-frame subroutines.
3                        ; By Martin Griffiths, August/September 1994.
4                        ;------------------------------------------------------
----------------
5      
6         00FFFF         IPR       EQU     $ffff
7         00FFFE         BCR       EQU     $fffe
8         00FFE0         MYPBC     EQU     $ffe0
9         00FFEF         RX        EQU     $FFEF
10        00FFEF         TX        EQU     $FFEF
11        00FFEC         CRA       EQU     $FFEC
12        00FFED         CRB       EQU     $FFED
13        00FFE8         HCR       EQU     $FFE8                             ; h
ost command register
14        00FFE9         HSR       EQU     $ffe9
15        00FFEB         HRX       EQU     $ffeb
16        00FFEB         HTX       EQU     $ffeb
17     
18                       FIX_0_298631336
19        000131                   equ     2446/8                            ; F
IX(0.298631336)
20                       FIX_0_390180644
21        00018F                   equ     3196/8                            ; F
IX(0.390180644)
22                       FIX_0_541196100
23        00022A                   equ     4433/8                            ; F
IX(0.541196100)
24                       FIX_0_765366865
25        00030F                   equ     6270/8                            ; F
IX(0.765366865)
26                       FIX_0_899976223
27        000399                   equ     7373/8                            ; F
IX(0.899976223)
28        000400         FIX_1_0   equ     8192/8                            ; F
IX(1.0)
29                       FIX_1_175875602
30        0004B4                   equ     9633/8                            ; F
IX(1.175875602)
31                       FIX_1_501321110
32        000601                   equ     12299/8                           ; F
IX(1.501321110)
33                       FIX_1_847759065
34        000764                   equ     15137/8                           ; F
IX(1.847759065)
35                       FIX_1_961570560
36        0007D8                   equ     16069/8                           ; F
IX(1.961570560)
37                       FIX_2_053119869
38        000836                   equ     16819/8                           ; F
IX(2.053119869)
39                       FIX_2_562915447
40        000A40                   equ     20995/8                           ; F
IX(2.562915447)
41                       FIX_3_072711026
42        000C4A                   equ     25172/8                           ; F
IX(3.072711026)
43     
44        000400         c1        equ     FIX_1_0
45        00022A         c2        equ     FIX_0_541196100
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 2



46        FFF89C         c3        equ     -FIX_1_847759065
47        00030F         c4        equ     FIX_0_765366865
48        000131         c10       equ     FIX_0_298631336
49        000836         c11       equ     FIX_2_053119869
50        000C4A         c12       equ     FIX_3_072711026
51        000601         c13       equ     FIX_1_501321110
52        FFFC67         c20       equ     -FIX_0_899976223
53        FFF5C0         c21       equ     -FIX_2_562915447
54        FFF828         c22       equ     -FIX_1_961570560
55        FFFE71         c23       equ     -FIX_0_390180644
56        0004B4         c24       equ     FIX_1_175875602
57     
58                       waitcts   macro
59   m                   _wctswt   jclr    #1,X:HSR,_wctswt
60   m                             endm
61     
62                       waitrts   macro
63   m                   _wrtswt   jclr    #0,X:HSR,_wrtswt
64   m                             endm
65     
66        P:0000                   org     p:$0
67        P:0000 0AF080            jmp     start
                 00011C
68     
69        P:0026                   org     p:$26                             ;  
 2
70        P:0026 0BF080            jsr     do_macro_block
                 000040
71     
72        P:0028                   org     p:$28
73        P:0028 0BF080            jsr     do_get_intra                      ;  
 3
                 000179
74     
75        P:0040                   org     p:$40
76     
77                       do_macro_block:
78        P:0040 00F0B8            andi    #$f0,mr
79        P:0041 0500BB            movec             #0,sp
80                       nextmacroblock:
81        P:0042 60F400            move              #dctblocks,r0
                 000040
82                                 waitrts
84        P:0046 084E2B            movep             X:HRX,a
85        P:0047 060BA0            rep     #11
86        P:0048 200032            asl     a
87        P:0049 567000            move              a,x:quant
                 0001C0
88     
89        P:004B 060680            do      #6,do6_loop
                 0000EF
90        P:004D 607000  get_block move              r0,x:saver7
                 0001C1
91        P:004F 221213            clr     a         r0,r2
92        P:0050 0640A0            rep     #64
93        P:0051 565A00            move              a,x:(r2)+
94     
95                                 waitrts
97        P:0054 08442B            movep             X:HRX,x0
98        P:0055 46F400            move              #>$80,y0
                 000080
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 3



99        P:0057 45F4D0            mpy     x0,y0,a   #>$8000*8,x1
                 040000
100       P:0059 210400            move              a0,x0
101       P:005A 62F4A0            mpy     x0,x1,a   #intra_matrix,r2
                 0000A0
102       P:005C 63F400            move              #zig_zag_scan,r3
                 000060
103                                waitrts
105       P:0060 08442B            movep             X:HRX,x0
106       P:0061 5660D0            mpy     x0,y0,a   a,x:(r0)                ; s
tore DC
107       P:0062 0AF0AA            jeq     fast_idct
                 000072
108       P:0064 219B00  g_loop    move              a1,n3
109       P:0065 210400            move              a0,x0
110       P:0066 7AEB00            move                          y:(r3+n3),n2
111       P:0067 47F000            move              x:quant,y1
                 0001C0
112       P:0069 4DEA00            move                          y:(r2+n2),x1
113       P:006A 2358F0            mpy     y1,x1,a   n2,n0
114       P:006B 210500            move              a0,x1
115       P:006C 2000A0            mpy     x0,x1,a
116                                waitrts
118       P:006F 08442B            movep             X:HRX,x0
119       P:0070 5668D0            mpy     x0,y0,a   a,x:(r0+n0)
120       P:0071 0E2064            jne     g_loop
121    
122    
123                      ; Super fast inverse discrete cosine transform routine
124                      ; r0-> dct block
125    
126       P:0072 64F400  fast_idct: move             #dct_const,r4
                 000040
127       P:0074 051FA4            movec             #31,m4
128       P:0075 380800            move              #8,n0
129       P:0076 0507A0            movec             #7,m0
130       P:0077 61F400            move              #temp_block,r1
                 000000
131       P:0079 62F400            move              #temp_block+7,r2
                 000007
132       P:007B 390500            move              #4+1,n1
133       P:007C 3A0B00            move              #$c-1,n2
134    
135       P:007D F09800            move              x:(r0)+,x0  y:(r4)+,y0
136       P:007E 060880            do      #8,endrowsloop
                 0000A8
137       P:0080 F098D0            mpy     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
138       P:0081 F098D8            mpy     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
139       P:0082 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
140       P:0083 F098DA            mac     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
141       P:0084 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
142       P:0085 F098DA            mac     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
143       P:0086 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
144       P:0087 F598DA            mac     x0,y0,b   x:(r0)+,x1  y:(r4)+,y1
145       P:0088 F09818            add     a,b       x:(r0)+,x0  y:(r4)+,y0
146       P:0089 515916            subl    b,a       b0,x:(r1)+
147       P:008A 5052F0            mpy     x1,y1,a   a0,x:(r2)-
148       P:008B F098D8            mpy     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
149       P:008C F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
150       P:008D F098DA            mac     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
151       P:008E F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 4



152       P:008F F098DA            mac     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
153       P:0090 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
154       P:0091 F598DA            mac     x0,y0,b   x:(r0)+,x1  y:(r4)+,y1
155       P:0092 F09818            add     a,b       x:(r0)+,x0  y:(r4)+,y0
156       P:0093 515916            subl    b,a       b0,x:(r1)+
157       P:0094 5052F0            mpy     x1,y1,a   a0,x:(r2)-
158       P:0095 F098D8            mpy     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
159       P:0096 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
160       P:0097 F098DA            mac     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
161       P:0098 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
162       P:0099 F098DA            mac     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
163       P:009A F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
164       P:009B F598DA            mac     x0,y0,b   x:(r0)+,x1  y:(r4)+,y1
165       P:009C F09818            add     a,b       x:(r0)+,x0  y:(r4)+,y0
166       P:009D 515916            subl    b,a       b0,x:(r1)+
167       P:009E 5052F0            mpy     x1,y1,a   a0,x:(r2)-
168       P:009F F098D8            mpy     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
169       P:00A0 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
170       P:00A1 F098DA            mac     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
171       P:00A2 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
172       P:00A3 F098DA            mac     x0,y0,b   x:(r0)+,x0  y:(r4)+,y0
173       P:00A4 F098D2            mac     x0,y0,a   x:(r0)+,x0  y:(r4)+,y0
174       P:00A5 2048DA            mac     x0,y0,b   (r0)+n0
175       P:00A6 F09818            add     a,b       x:(r0)+,x0  y:(r4)+,y0  ; f
irst for next row
176       P:00A7 514916            subl    b,a       b0,x:(r1)+n1
177       P:00A8 504A00            move              a0,x:(r2)+n2
178                      endrowsloop
179    
180       P:00A9 61F000            move              x:saver7,r1
                 0001C1
181       P:00AB 60F400            move              #temp_block,r0
                 000000
182       P:00AD 223200            move              r1,r2
183       P:00AE 3A3800            move              #56,n2
184       P:00AF 053FA0            movec             #63,m0
185       P:00B0 204A00            move              (r2)+n2
186       P:00B1 051FA1            move              #31,m1
187       P:00B2 051FA2            move              #31,m2
188       P:00B3 390800            move              #8,n1
189       P:00B4 72F400            move              #-8,n2
                 FFFFF8
190       P:00B6 44C800            move              x:(r0)+n0,x0
191       P:00B7 060880            do      #8,p2endrowsloop
                 0000E3
192       P:00B9 F088D0            mpy     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
193       P:00BA F088D8            mpy     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
194       P:00BB F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
195       P:00BC F088DA            mac     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
196       P:00BD F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
197       P:00BE F088DA            mac     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
198       P:00BF F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
199       P:00C0 F588DA            mac     x0,y0,b   x:(r0)+n0,x1 y:(r4)+,y1
200       P:00C1 F08818            add     a,b       x:(r0)+n0,x0 y:(r4)+,y0
201       P:00C2 574916            subl    b,a       b,x:(r1)+n1
202       P:00C3 564AF0            mpy     x1,y1,a   a,x:(r2)+n2
203       P:00C4 F088D8            mpy     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
204       P:00C5 F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
205       P:00C6 F088DA            mac     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
206       P:00C7 F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
207       P:00C8 F088DA            mac     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 5



208       P:00C9 F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
209       P:00CA F588DA            mac     x0,y0,b   x:(r0)+n0,x1 y:(r4)+,y1
210       P:00CB F08818            add     a,b       x:(r0)+n0,x0 y:(r4)+,y0
211       P:00CC 574916            subl    b,a       b,x:(r1)+n1
212       P:00CD 564AF0            mpy     x1,y1,a   a,x:(r2)+n2
213       P:00CE F088D8            mpy     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
214       P:00CF F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
215       P:00D0 F088DA            mac     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
216       P:00D1 F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
217       P:00D2 F088DA            mac     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
218       P:00D3 F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
219       P:00D4 F588DA            mac     x0,y0,b   x:(r0)+n0,x1 y:(r4)+,y1
220       P:00D5 F08818            add     a,b       x:(r0)+n0,x0 y:(r4)+,y0
221       P:00D6 574916            subl    b,a       b,x:(r1)+n1
222       P:00D7 564AF0            mpy     x1,y1,a   a,x:(r2)+n2
223       P:00D8 F088D8            mpy     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
224       P:00D9 F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
225       P:00DA F088DA            mac     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
226       P:00DB F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
227       P:00DC F088DA            mac     x0,y0,b   x:(r0)+n0,x0 y:(r4)+,y0
228       P:00DD F088D2            mac     x0,y0,a   x:(r0)+n0,x0 y:(r4)+,y0
229       P:00DE 2058DA            mac     x0,y0,b   (r0)+
230       P:00DF F08818            add     a,b       x:(r0)+n0,x0 y:(r4)+,y0 ; f
irst for next col
231       P:00E0 574916            subl    b,a       b,x:(r1)+n1
232       P:00E1 564A00            move              a,x:(r2)+n2
233       P:00E2 205900            move              (r1)+
234       P:00E3 205A00            move              (r2)+
235                      p2endrowsloop
236       P:00E4 60F000            move              x:saver7,r0
                 0001C1
237       P:00E6 384000            move              #64,n0
238       P:00E7 05F424            movec             #-1,m4
                 FFFFFF
239       P:00E9 204800            move              (r0)+n0
240       P:00EA 05F420            movec             #-1,m0
                 FFFFFF
241       P:00EC 05F421            movec             #-1,m1
                 FFFFFF
242       P:00EE 05F422            movec             #-1,m2
                 FFFFFF
243                      do6_loop
244    
245       P:00F0 60F400  YCrCbtoRGB move             #dctblocks,r0
                 000040
246       P:00F2 61F400            move              #dctblocks+(4*64),r1
                 000140
247       P:00F4 62F400            move              #dctblocks+(5*64),r2
                 000180
248       P:00F6 63F400            move              #offset_table,r3
                 002400
249       P:00F8 64F400            move              #conv_red+384+128,r4
                 001200
250       P:00FA 65F400            move              #conv_green+384+128,r5
                 001600
251       P:00FC 66F400            move              #conv_blue+384+128,r6
                 001A00
252       P:00FE 67F400            MOVE              #RGBMatrix,R7
                 0000E0
253       P:0100 0504A7            MOVEC             #<4,M7
254       P:0101 79DB00            move                          y:(r3)+,n1
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 6



255       P:0102 78DB00            move                          y:(r3)+,n0
256       P:0103 060081            DO      #256,rgb_conv_lp
                 000118
257       P:0105 233A00            move              n1,n2
258       P:0106 45E800            move              x:(r0+n0),x1            ; Y
259       P:0107 47E900            move              x:(r1+n1),y1            ; C
b
260       P:0108 46EA00            move              x:(r2+n2),y0            ; C
r
261       P:0109 4CDF00            move                          y:(R7)+,X0
262       P:010A 79DBA8            MPY     X1,X0,B               y:(r3)+,n1
263       P:010B 4CDF01            TFR     B,A                   y:(R7)+,X0
264       P:010C 4CDFD2            MAC     Y0,X0,A               y:(R7)+,X0
265       P:010D 219C01            TFR     B,A       A1,n4
266       P:010E 4CDFC6            MAC     -Y1,X0,A              y:(R7)+,X0
267       P:010F 4CDFD6            MAC     -Y0,X0,A              y:(R7)+,X0
268       P:0110 219DCA            MAC     Y1,X0,B   A1,n5
269       P:0111 21BE00            MOVE              B1,n6
270       P:0112 5EEC00            move                          y:(r4+n4),a
271       P:0113 4EED00            move                          y:(r5+n5),y0
272       P:0114 4EEE52            or      y0,a                  y:(r6+n6),y0
273       P:0115 78DB52            or      y0,a                  y:(r3)+,n0
274                                waitcts
276       P:0118 08CE2B            movep             a,x:HRX
277                      rgb_conv_lp
278       P:0119 05F427            MOVEC             #-1,M7
                 FFFFFF
279       P:011B 0C0042            jmp     nextmacroblock
280    
281       P:011C 08F4BF  start     movep             #$0c00,X:IPR
                 000C00
282       P:011E 08F4A0            movep             #$1,X:MYPBC
                 000001
283       P:0120 08F4BE            movep             #$0,X:BCR
                 000000
284       P:0122 00F0B8            andi    #$f0,mr
285       P:0123 0AA822            bset    #2,x:HCR                          ; e
nable host commands
286       P:0124 05F420            move              #>-1,m0
                 FFFFFF
287       P:0126 05F421            move              #>-1,m1
                 FFFFFF
288       P:0128 05F422            move              #>-1,m2
                 FFFFFF
289       P:012A 05F423            move              #>-1,m3
                 FFFFFF
290       P:012C 05F424            move              #>-1,m4
                 FFFFFF
291       P:012E 05F425            move              #>-1,m5
                 FFFFFF
292       P:0130 05F426            move              #>-1,m6
                 FFFFFF
293       P:0132 05F427            move              #>-1,m7
                 FFFFFF
294    
295       P:0134 64F400  make_yuv: move              #conv_red,r4
                 001000
296       P:0136 65F400            move              #conv_green,r5
                 001400
297       P:0138 66F400            move              #conv_blue,r6
                 001800
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 7



298       P:013A 67F400            move              #conv_gray,r7
                 001C00
299       P:013C 46F400            move              #>$0000,y0
                 000000
300       P:013E 068081            do      #384,first_lp
                 000143
301       P:0140 4E5C00            move                          y0,y:(r4)+
302       P:0141 4E5D00            move                          y0,y:(r5)+
303       P:0142 4E5E00            move                          y0,y:(r6)+
304       P:0143 4E5F00            move                          y0,y:(r7)+
305                      first_lp
306       P:0144 300000            move              #0,r0
307       P:0145 70F400            move              #$100,n0
                 000100
308    
309       P:0147 45F400            move              #>$f800,x1
                 00F800
310       P:0149 060081            do      #256,make_conv_rgb
                 000155
311       P:014B 220F00            move              r0,b
312       P:014C 44F46E            and     x1,b      #>($800000>>5),x0
                 040000
313       P:014E 21E600            move              b,y0
314       P:014F 5F5C00            move                          b,y:(r4)+
315       P:0150 44F4D0            mpy     x0,y0,a   #>($800000>>11),x0
                 001000
316       P:0152 5E5D18            add     a,b                   a,y:(r5)+
317       P:0153 2048D0            mpy     x0,y0,a   (r0)+n0
318       P:0154 5E5E18            add     a,b                   a,y:(r6)+
319       P:0155 5F5F00            move                          b,y:(r7)+
320                      make_conv_rgb
321       P:0156 46F400            move              #>$f800,y0
                 00F800
322       P:0158 47F400            move              #>$07c0,y1
                 0007C0
323       P:015A 44F400            move              #>$001f,x0
                 00001F
324       P:015C 45F400            move              #>$ffdf,x1
                 00FFDF
325       P:015E 068081            do      #384,last_lp
                 000163
326       P:0160 4E5C00            move                          y0,y:(r4)+
327       P:0161 4F5D00            move                          y1,y:(r5)+
328       P:0162 4C5E00            move                          x0,y:(r6)+
329       P:0163 4D5F00            move                          x1,y:(r7)+
330                      last_lp
331    
332       P:0164 64F400            move              #conv_clip,r4
                 002000
333       P:0166 46F400            move              #>$0000,y0
                 000000
334       P:0168 068081            do      #$180,first_lp2
                 00016A
335       P:016A 4E5C00            move                          y0,y:(r4)+
336       P:016B 300000  first_lp2 move              #0,r0
337       P:016C 380100            move              #$1,n0
338       P:016D 060081            do      #256,make_clip
                 000171
339       P:016F 220E00            move              r0,a
340       P:0170 204800            move              (r0)+n0
341       P:0171 5E5C00            move                          a,y:(r4)+
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 8



342                      make_clip
343       P:0172 46F400            move              #>$ff,y0
                 0000FF
344       P:0174 068081            do      #$180,last_lp2
                 000176
345       P:0176 4E5C00            move                          y0,y:(r4)+
346                      last_lp2
347    
348    
349    
350       P:0177 000000  forever   nop
351       P:0178 0C0177            jmp     forever
352    
353                      do_get_intra
354       P:0179 00F0B8            andi    #$f0,mr
355       P:017A 000000            nop
356       000000         i         set     0
357                                dup     64
358  m                             waitrts
359  m                             movep   x:HRX,y:(intra_matrix+i)
360  m                   i         set     i+1
361  m                             endm
618       P:027B 000004            rti
619    
620       X:0000                   org     x:$0
621       X:0000         temp_block ds     64
622       X:0040         dctblocks ds      64*6
623       X:01C0         quant     ds      1
624       X:01C1         saver7    ds      1
625    
626       X:1000                   org     x:$1000
627                      colour_output
628       X:1000                   ds      256*3
629    
630                      ; Y memory
631    
632       Y:0000                   org     y:$0
633       Y:0000                   ds      64
634       Y:0040         dct_const dc      c1,c13+c20+c23+c24,c2+c4,c24,c1,c23+c
24,c2,c20+c24
635       Y:0048                   dc      c1,c24,c2,c12+c21+c22+c24,-c1,c21+c24
,c2+c3,c22+c24
636       Y:0050                   dc      c1,c23+c24,-c2,c21+c24,-c1,c11+c21+c2
3+c24,-(c2+c3),c24
637       Y:0058                   dc      c1,c20+c24,-(c2+c4),c22+c24,c1,c24,-c
2,c10+c20+c22+c24
638                      zig_zag_scan:
639       Y:0060                   dc      0,1,8,16,9,2,3,10,17,24,32,25,18,11,4
,5
640       Y:0070                   dc      12,19,26,33,40,48,41,34,27,20,13,6,7,
14,21,28
641       Y:0080                   dc      35,42,49,56,57,50,43,36,29,22,15,23,3
0,37,44,51
642       Y:0090                   dc      58,59,52,45,38,31,39,46,53,60,61,54,4
7,55,62,63
643                      intra_matrix:
644       Y:00A0                   ds      64
645    
646       Y:00E0         RGBMatrix dc      65536*63
647       Y:00E1                   dc      104597*63                         ; c
rv
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 9



648       Y:00E2                   dc      25675*63                          ; c
gu
649       Y:00E3                   dc      53279*63                          ; c
gv
650       Y:00E4                   dc      132201*63                         ; c
bu
651    
652       Y:1000                   org     y:$1000
653       Y:1000         conv_red  ds      256*4
654       Y:1400         conv_green ds     256*4
655       Y:1800         conv_blue ds      256*4
656       Y:1C00         conv_gray ds      256*4
657       Y:2000         conv_clip ds      256*4
658    
659    
660                      offset_table
661       000000         count     set     0
662       000000         count2    set     0
663                                dup     4
664  m                             dc      count+0,count2+(0*64)+0
665  m                             dc      count+0,count2+(0*64)+1
666  m                             dc      count+1,count2+(0*64)+2
667  m                             dc      count+1,count2+(0*64)+3
668  m                             dc      count+2,count2+(0*64)+4
669  m                             dc      count+2,count2+(0*64)+5
670  m                             dc      count+3,count2+(0*64)+6
671  m                             dc      count+3,count2+(0*64)+7
672  m                             dc      count+4,count2+(1*64)+0
673  m                             dc      count+4,count2+(1*64)+1
674  m                             dc      count+5,count2+(1*64)+2
675  m                             dc      count+5,count2+(1*64)+3
676  m                             dc      count+6,count2+(1*64)+4
677  m                             dc      count+6,count2+(1*64)+5
678  m                             dc      count+7,count2+(1*64)+6
679  m                             dc      count+7,count2+(1*64)+7
680  m                   count2    set     count2+8
681  m                             dc      count+0,count2+(0*64)+0
682  m                             dc      count+0,count2+(0*64)+1
683  m                             dc      count+1,count2+(0*64)+2
684  m                             dc      count+1,count2+(0*64)+3
685  m                             dc      count+2,count2+(0*64)+4
686  m                             dc      count+2,count2+(0*64)+5
687  m                             dc      count+3,count2+(0*64)+6
688  m                             dc      count+3,count2+(0*64)+7
689  m                             dc      count+4,count2+(1*64)+0
690  m                             dc      count+4,count2+(1*64)+1
691  m                             dc      count+5,count2+(1*64)+2
692  m                             dc      count+5,count2+(1*64)+3
693  m                             dc      count+6,count2+(1*64)+4
694  m                             dc      count+6,count2+(1*64)+5
695  m                             dc      count+7,count2+(1*64)+6
696  m                             dc      count+7,count2+(1*64)+7
697  m                   count2    set     count2+8
698  m                   count     set     count+8
699  m                             endm
840    
841       000000         count2    set     0
842                                dup     4
843  m                             dc      count+0,count2+(2*64)+0
844  m                             dc      count+0,count2+(2*64)+1
845  m                             dc      count+1,count2+(2*64)+2
Motorola DSP56000 Assembler  Version 4.1.1   95-07-18  03:15:58  playcolr.a56
  Page 10



846  m                             dc      count+1,count2+(2*64)+3
847  m                             dc      count+2,count2+(2*64)+4
848  m                             dc      count+2,count2+(2*64)+5
849  m                             dc      count+3,count2+(2*64)+6
850  m                             dc      count+3,count2+(2*64)+7
851  m                             dc      count+4,count2+(3*64)+0
852  m                             dc      count+4,count2+(3*64)+1
853  m                             dc      count+5,count2+(3*64)+2
854  m                             dc      count+5,count2+(3*64)+3
855  m                             dc      count+6,count2+(3*64)+4
856  m                             dc      count+6,count2+(3*64)+5
857  m                             dc      count+7,count2+(3*64)+6
858  m                             dc      count+7,count2+(3*64)+7
859  m                   count2    set     count2+8
860  m                             dc      count+0,count2+(2*64)+0
861  m                             dc      count+0,count2+(2*64)+1
862  m                             dc      count+1,count2+(2*64)+2
863  m                             dc      count+1,count2+(2*64)+3
864  m                             dc      count+2,count2+(2*64)+4
865  m                             dc      count+2,count2+(2*64)+5
866  m                             dc      count+3,count2+(2*64)+6
867  m                             dc      count+3,count2+(2*64)+7
868  m                             dc      count+4,count2+(3*64)+0
869  m                             dc      count+4,count2+(3*64)+1
870  m                             dc      count+5,count2+(3*64)+2
871  m                             dc      count+5,count2+(3*64)+3
872  m                             dc      count+6,count2+(3*64)+4
873  m                             dc      count+6,count2+(3*64)+5
874  m                             dc      count+7,count2+(3*64)+6
875  m                             dc      count+7,count2+(3*64)+7
876  m                   count2    set     count2+8
877  m                   count     set     count+8
878  m                             endm
1019   
1020                               end

0    Errors
0    Warnings
