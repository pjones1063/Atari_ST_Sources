********************************************************
*	MEDWAY BOYS MENU 98, DIS-ASSEMBLED, AND ALTERED*
*	BY 'THE FINK'		30/5/91		       *	
********************************************************

Mem	MOVE.L	$4(A7),A0	DATA ALLOCATIONS
	PEA	$200
	PEA	(A0)
	PEA	$4A000
	TRAP	#1
	ADDA.L	#$C,A7
SUPER
	CLR.L	-(A7)		SUPERVISOR MODE
	MOVE.W	#$20,-(A7)
	TRAP	#1
	ADDQ.L	#6,A7
	MOVE.L	D0,SUPSPR
	
	EORI.B	#3,$484.W	ATTRIBUTE CONSOLE VECTOR
	
	LEA	$FF8240,A0
	MOVEQ	#7,D0
CLEAR	MOVE.L	#$7770777,(A0)+	SET ALL PALETTE REG. TO WHITE
	DBF	D0,CLEAR	CLEARING SCREEN
	
*	MOVE.L	#$C53E,$AA6C	50494 DUNNO WHAT THEY DO.....
*	MOVE.L	#$DF2E,$AAF2	57134
*	MOVE.L	#$B2FE,$AC50	45822
*	MOVE.L	#$B2FE,$B2CA	45822

	MOVE.L	$70,OLDVBL	SAVE OLD VBL ROUTINE
*	MOVE.L	#1,$A7C6
*	BSR	$6AA4E		SET UP MUSIC
*	BSR	$6AA56
		
*	MOVE.L	#VBL1,$70.W	NEW VBL ROUTINE
*	LEA	$F2F6,A5
*	LEA	$60000,A6	ADDRESS OF WORK_S
*	BSR	$6A7D6		OPENS FILE,READS FILE,CLOSES FILE
*	LEA	$60002,A0
*	MOVE.W	#3,D0		LOOP COUNTER
*LOOP	MOVE.L	(A0)+,$C(A0)
*	DBF	D0,LOOP		LOOP 4 TIMES
*	MOVE.W	#$777,(A0)
	
	MOVE.W	#2,-(A7)	GET SCREEN ADDRESS
	TRAP	#14
	ADDQ.L	#2,A7
	MOVE.L	D0,A6
	LEA	PICY+34,A1
	MOVE.L	#$7cff,D1	LOOP COUNTER 31999

COPY	MOVE.L	(A1)+,(A6)+	COPY GRAFIX TO SCREEN ADDRESS
*	CMPA.L	#$67D22,A1
*	BLT	COPY
	DBF	D1,COPY		COPY 32000 BYTES (SCREEN LENGHT)
	ADDQ	#6,D0
	MOVE.L	D0,A6		HOLDS START ADDRESS OF SCREEN+6 (4th BIT-PLANE)
	MOVE.L	d0,SCRPTR	SAVE IT
	MOVE.W	#$18,D6		LOOP COUNTER
SCREEN	MOVE.W	#9,D7		LOOP COUNTER
LINE	MOVEQ	#0,D5
	
	MOVE.W	#$11,-(A7)	GET RANDOM NUMBER (24-BIT)
	TRAP	#14
	ADDQ.L	#2,A7
	MOVE.L	D0,D1
	ANDI.L	#$F,D1		NOW HOLDS NUMBER
	BSET	D1,D5
	MOVE.W	D5,(A6)		PLACE IT ON SCREEN
	MOVEQ	#0,D5
	ROR.L	#8,D0		GET HIGH WORD OF RND NUMBER
	ANDI.L	#$F,D0	
	BSET	D0,D5		NOW HOLDS NUMBER
	MOVE.W	D5,$288(A6)	PLACE IT ON SCREEN,4 LINES DOWN,1 BYTE ACROSS
	LEA	$10(A6),A6	16 PIXELS ACROSS
	DBF	D7,LINE		DO 1 LINE OF RANDOM PIXELS
	LEA	$460(A6),A6	7 LINES DOWN
	DBF	D6,SCREEN	FILL SCREEN UP WITH RANDOM PIXELS
	MOVE.W	#6,D7
LOOP4	MOVE.W	#2,D0		LOOP COUNTER
	JSR	PAUSE
	JSR	PAUSE
	JSR	PAUSE
*LOOP2	CLR.W	$A7C2
*WAIT	TST.W	$A7C2
*	BEQ	WAIT
*	DBF	D0,LOOP2
	LEA	$FFFF8240.W,A0	PALETTE REGISTERS
	LEA	PICY+2,A1
	MOVE.W	#$F,D6
LOOP3	MOVEQ	#0,D2
	MOVE.W	(A0),D3
	MOVE.W	(A1),D4
	MOVE.W	D3,D0
	MOVE.W	D4,D1
	ANDI.W	#$700,D0
	ANDI.W	#$700,D1
	CMP.W	D0,D1
	BEQ	SKIP
	SUBI.W	#$100,D0
SKIP	OR.W	D0,D2
	MOVE.W	D3,D0
	MOVE.W	D4,D1
	ANDI.W	#$70,D0
	ANDI.W	#$70,D1
	CMP.W	D0,D1
	BEQ	SKIP2
	SUBI.W	#$10,D0
SKIP2	OR.W	D0,D2
	MOVE.W	D3,D0
	MOVE.W	D4,D1
	ANDI.W	#7,D0
	ANDI.W	#7,D1
	CMP.W	D0,D1
	BEQ	SKIP3
	SUBI.W	#1,D0
SKIP3	OR.W	D0,D2
	ANDI.W	#$777,D2
	MOVE.W	D2,(A0)
	LEA	$2(A0),A0
	LEA	$2(A1),A1
	DBF	D6,LOOP3	FADE IN PALETTE
	DBF	D7,LOOP4

MAINL	MOVE.L	SCRPTR,A0	SCREEN ADDRESS
	LEA	WORK_S,A1	WORK_SPACE FOR LINE,LOOPER
	MOVE.W	(A0),(A1)+
	MOVE.W	$8(A0),(A1)+
	MOVE.W	$10(A0),(A1)+	
	MOVE.W	$18(A0),(A1)+	
	MOVE.W	$20(A0),(A1)+	
	MOVE.W	$28(A0),(A1)+	
	MOVE.W	$30(A0),(A1)+	
	MOVE.W	$38(A0),(A1)+	
	MOVE.W	$40(A0),(A1)+	COPYS 1 BIT-PLANE, TOP LINE OF SCREEN	
	MOVE.W	$48(A0),(A1)+	INTO WORK_SPACE, READY TO BE PLACED AT
	MOVE.W	$50(A0),(A1)+	BOTTOM OF SCREEN FOR THE LOOPING EFFECT
	MOVE.W	$58(A0),(A1)+	
	MOVE.W	$60(A0),(A1)+	
	MOVE.W	$68(A0),(A1)+	
	MOVE.W	$70(A0),(A1)+	
	MOVE.W	$78(A0),(A1)+	
	MOVE.W	$80(A0),(A1)+	
	MOVE.W	$88(A0),(A1)+	
	MOVE.W	$90(A0),(A1)+	
	MOVE.W	$98(A0),(A1)+	
	JSR	PAUSE		SMALL PAUSE FOR THE SCROLLER TO SLOW DOWN
*	CLR.W	$A7C2
*WAIT2	TST.W	$A7C2
*	BEQ	WAIT2	
	MOVE.W	#$30,D0		LOOP COUNTER
SCROLL	MOVE.B	$280(A0),(A0)
	MOVE.B	$141(A0),$1(A0)
	MOVE.B	$281(A0),$141(A0)	
	MOVE.B	$288(A0),$8(A0)	
	MOVE.B	$149(A0),$9(A0)	
	MOVE.B	$289(A0),$149(A0)	
	MOVE.B	$290(A0),$10(A0)	
	MOVE.B	$151(A0),$11(A0)	
	MOVE.B	$291(A0),$151(A0)	
	MOVE.B	$298(A0),$18(A0)	
	MOVE.B	$159(A0),$19(A0)	
	MOVE.B	$299(A0),$159(A0)	
	MOVE.B	$2A0(A0),$20(A0)	
	MOVE.B	$161(A0),$21(A0)	
	MOVE.B	$2A1(A0),$161(A0)	
	MOVE.B	$2A8(A0),$28(A0)	
	MOVE.B	$169(A0),$29(A0)	
	MOVE.B	$2A9(A0),$169(A0)	
	MOVE.B	$2B0(A0),$30(A0)	
	MOVE.B	$171(A0),$31(A0)	
	MOVE.B	$2B1(A0),$171(A0)	
	MOVE.B	$2B8(A0),$38(A0)	
	MOVE.B	$179(A0),$39(A0)	
	MOVE.B	$2B9(A0),$179(A0)	
	MOVE.B	$2C0(A0),$40(A0)	
	MOVE.B	$181(A0),$41(A0)	
	MOVE.B	$2C1(A0),$181(A0)	
	MOVE.B	$2C8(A0),$48(A0)	
	MOVE.B	$189(A0),$49(A0)	
	MOVE.B	$2C9(A0),$189(A0)	
	MOVE.B	$2D0(A0),$50(A0)	
	MOVE.B	$191(A0),$51(A0)	
	MOVE.B	$2D1(A0),$191(A0)	
	MOVE.B	$2D8(A0),$58(A0)	
	MOVE.B	$199(A0),$59(A0)	
	MOVE.B	$2D9(A0),$199(A0)	
	MOVE.B	$2E0(A0),$60(A0)	
	MOVE.B	$1A1(A0),$61(A0)		
	MOVE.B	$2C1(A0),$1A1(A0)		
	MOVE.B	$2E8(A0),$68(A0)		
	MOVE.B	$1A9(A0),$69(A0)		
	MOVE.B	$2C9(A0),$1A9(A0)		
	MOVE.B	$2F0(A0),$70(A0)		
	MOVE.B	$1B1(A0),$71(A0)		
	MOVE.B	$2D1(A0),$1B1(A0)		
	MOVE.B	$2F8(A0),$78(A0)		
	MOVE.B	$1B9(A0),$79(A0)		
	MOVE.B	$2D9(A0),$1B9(A0)		
	MOVE.B	$300(A0),$80(A0)		
	MOVE.B	$1C1(A0),$81(A0)		
	MOVE.B	$2E1(A0),$1C1(A0)		
	MOVE.B	$308(A0),$88(A0)	ALL OF THIS JUST DOES 4 LINES OF SCROLLING
	MOVE.B	$1C9(A0),$89(A0)	OF THE PIXELS. IT DOES EVERY OTHER BYTE TWICE
	MOVE.B	$2E9(A0),$1C9(A0)	TO MAKE IT LOOK AS THOUGH THERE ARE 2 BIT-PLANES
	MOVE.B	$310(A0),$90(A0)	SCROLLING INSTEAD OF ONE
	MOVE.B	$1D1(A0),$91(A0)		
	MOVE.B	$2F1(A0),$1D1(A0)		
	MOVE.B	$318(A0),$98(A0)		
	MOVE.B	$1D9(A0),$99(A0)		
	MOVE.B	$2F9(A0),$1D9(A0)		
	LEA	$280(A0),A0		START 4 LINES FURTHER DOWN
	DBF	D0,SCROLL		LOOP 50 TIMES FOR THE ENTIRE SCREEN TO SCROLL
	
	LEA	WORK_S,A0
	MOVE.L	SCRPTR,A1
	ADDA.L	#$7A80,A1		LAST LINE OF SCREEN
	MOVE.W	(A0)+,(A1)
	MOVE.W	(A0)+,$8(A1)
	MOVE.W	(A0)+,$10(A1)	
	MOVE.W	(A0)+,$18(A1)	
	MOVE.W	(A0)+,$20(A1)	
	MOVE.W	(A0)+,$28(A1)	
	MOVE.W	(A0)+,$30(A1)	
	MOVE.W	(A0)+,$38(A1)	
	MOVE.W	(A0)+,$40(A1)	
	MOVE.W	(A0)+,$48(A1)	
	MOVE.W	(A0)+,$50(A1)	
	MOVE.W	(A0)+,$58(A1)	
	MOVE.W	(A0)+,$60(A1)	WORK_SPACE NOW COPIED TO BOTTOM OF	
	MOVE.W	(A0)+,$68(A1)	SCREEN
	MOVE.W	(A0)+,$70(A1)	
	MOVE.W	(A0)+,$78(A1)	
	MOVE.W	(A0)+,$80(A1)	
	MOVE.W	(A0)+,$88(A1)	
	MOVE.W	(A0)+,$90(A1)	
	MOVE.W	(A0)+,$98(A1)
	
	MOVE.W	#$FF,-(A7)	TEST KEYBOARD
	MOVE.W	#$6,-(A7)
	TRAP	#1
	ADDQ.L	#4,A7	
	
	TST.W	D0
	BEQ	MAINL		NOTHING HAS BEEN PRESSED SO LOOP
	CMP.B	#$31,D0		HAS '1' BEEN PRESSED ?
	BNE	KCHK		NO
*	LEA	$AA38,A6
*	BRA	$6A75E
KCHK	CMP.B	#$32,D0		HAS '2' BEEN PRESSED ?
	BNE	KCHK2		NO		
	BRA	ESCAPE
*	LEA	$AA42,A6
*	BRA	$6A75E
KCHK2	CMP.B	#$30,D0		HAS '0' BEEN PRESSED ?
	BNE	KCHK3		NO
	BCHG	#1,$FFFF820A.W	YES, SO CHANGE Hz
	BRA	MAINL
KCHK3	CMP.B	#$20,D0		HAS ' ' BEEN PRESSES ?
	BRA	KCHK4
*	LEA	$AA4C,A6
*	BRA	$6A75E
KCHK4	CMP.B	#$6D,D0		HAS 'm' BEEN PRESSED ?
	BNE	MAINL		NO
*	EORI.L	#3,$A7C6	CHANGE MUSIC
*	MOVE.L	$A7C6,D0
*	BSR	$6AA4E
	BRA	MAINL
	
*VBL1	MOVE.W	#1,$A7C2		VBL ROUTINE
*	MOVEM.L	D0-D7/A0-A6,-(A7)	PLAYS MUSIC
*	BSR	$6AA52
*	MOVEM.L	(A7)+,D0-D7/A0-A6
*	MOVE.L	$A7CA,-(A7)
*	RTS	


ESCAPE	EORI.B	#3,$484.W	NOT IN ORIGINAL PROGRAM,
	MOVE.L	SUPSPR,-(A7)	IT ABORTS THE PROGRAM,
	MOVE.W	#$20,-(A7)	SAVES ME TIME IN NOT HAVING TO RESET COMPUTER
	TRAP	#1		AND RE-LOAD DEVPAC EACH TIME
	ADDQ.L	#6,A7
	CLR.W	-(A7)
	TRAP	#1
	
PAUSE	MOVE.W	$468,D0		WAITS FOR VBL ROUTINE TO CHANGE,
NOT	CMP.W	$468,D0		CAUSES A SMALL PAUSE
	BEQ	NOT		NOT IN ORIGINAL PROGRAM, BUT DOES THE
	RTS			SAME THING AS THEIR ROUTINE



OLDVBL	DC.L	0
SCRPTR	DC.L	0
SUPSPR	DC.L	0
WORK_S	DS.W	20
PICY	INCBIN	"B:\MEDBOY98\MEDWAY.PI1"	