**********************************************************************
************** DIAMONDS MAIN PART TRUE COLOR - MARS 1995 *************
************** CODED BY ZANAK - (C) 1995 ATROCITY Corp.   ************
**********************************************************************  

LAR_ECR	EQU	384
HAU_ECR	EQU	240
NB_ECR	EQU	6
TIME	EQU	60
FONTE_X	EQU	16
FONTE_Y	EQU	17

	SECTION TEXT
	
**********************************************************************
************** MEMOIRE - ECRANS **************************************
**********************************************************************

	MOVE.L	4(SP),A0
	
	MOVE.L	12(A0),D0	; TAILLE SECTION TEXT	
	ADD.L	20(A0),D0	; TAILLE SECTION DATA
	ADD.L	28(A0),D0	; TAILLE SECTION BSS
	ADDI.L	#256,D0	; TAILLE BASEPAGE
	ADDI.L	#256,D0	; TAILLE ERROR

	MOVE.L	D0,-(SP)	; TAILLE BLOCK ENTIER
	MOVE.L	A0,-(SP)	; ADRESSE BLOCK
	MOVE.W	#0,-(SP)
	MOVE.W	#$4A,-(SP)	; MSHRINK
	TRAP	#1	; CALL GEMDOS
	ADD.L	#12,SP
	
	TST.L	D0	; TESTE SI ERREUR ...
	BMI	FIN	; SI OUI FIN SINON
			; ON CONTINUE ...

**********************************************************************

	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)	; SUPERVISEUR
	TRAP	#1
	ADDQ.L	#6,SP

	CLR.B	$FFFF8900.W		; IT DMA OFF
	CLR.B	$FFFF8901.W		; DMA STOP

************** CLS ***************************************************

	PEA	TEXT(PC)
	MOVE.W	#$9,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP

**********************************************************************
	
	MOVE.L	D0,-(SP)	; OLD REZ 

********* OVERSCAN PREPA ****************************************

;	MOVE.W	$FFFF8288.W,D0
;	MOVE.W	$FFFF828A.W,D1
;	MOVE.W	D0,HBB(a6)
;	MOVE.W	D1,HBL(a6)
	
**********************************************************************
	
	MOVE.W	#2,-(SP)	; OU EST L'ECRAN PHYSIQUE ?
	TRAP	#14
	ADDQ.L	#2,SP
	MOVE.L	D0,PSCR	; IL EST LA ...
	
	MOVE.W	#3,-(SP)	; OU EST L'ECRAN LOGIQUE ?
	TRAP	#14
	ADDQ.L	#2,SP
	MOVE.L	D0,LSCR	; IL EST LA AUSSI ...
	
	MOVE.W	#-1,-(SP)	; ET LA RESOLUTION ?
	MOVE.W	#88,-(SP)
	TRAP	#14
	ADDQ.L	#4,SP
	MOVE.W	D0,REZ	; ELLE EST LA ...

**********************************************************************

	MOVE.L	#SIZE1,D0		; TAILLE 1
	ADDI.L	#256,D0
	CLR.B	D0
	MOVE.L	D0,ECRAN1	; CONFIG ECRAN1
	
	MOVE.L	#SIZE2,D0		; TAILLE 2
	ADDI.L	#256,D0
	CLR.B	D0
	MOVE.L	D0,ECRAN2	; CONFIG ECRAN2
	
**********************************************************************

	MOVE.W	#%1100100,-(SP)	
	MOVE.W	#3,-(SP)
	MOVE.L	ECRAN1,-(SP)
	MOVE.L	ECRAN2,-(SP)
	MOVE.W	#5,-(SP)	; VSETMODE
	TRAP	#14
	ADD.L	#14,SP
	
**********************************************************************

	MOVE.B	$484.W,KEYBOARD	; COUPE LE CLAVIER
	CLR.B	$484.W
	
	DC.W	$A00A
	MOVE.B	#$12,$FFFFFC02.W	; COUPE LA SOURIS
		
************** SOUNDTRACK START **************************************

	LEA	PLAYER,A0
	BSR	RELOC
	MOVEQ	#1,D0
	LEA	MODULE,A0
	BSR	PLAYER+28
	PEA	INIT_CODEC
	MOVE.W	#$26,-(SP)
	TRAP	#14
	ADDQ.L	#6,SP

**********************************************************************
*********** ROUTINE PRINCIPALE ***************************************
**********************************************************************

	CLR.L	$FFFF9800.W
	
;	BSR	IMAGES
;	BSR	INTRO
;	BSR	MENU
	BSR	PRINTER
	
**********************************************************************	
*********** FIN DE LA DEMO *******************************************
**********************************************************************

FIN	
;	CMP.B	#$39+$80,$FFFFFC02.W
;	BNE	FIN
		
	DC.W	$A009
	MOVE.B	#8,$FFFFFC02.W
	MOVE.B	KEYBOARD,$484.W

	MOVE.W	REZ,-(SP)
	MOVE.W	#3,-(SP)
	MOVE.L	PSCR,-(SP)	; REMET ECRAN PHYSIQUE
	MOVE.L	LSCR,-(SP)	; REMET ECRAN LOGIQUE
	MOVE.W	#5,-(SP)
	TRAP	#14
	ADD.L	#14,SP
		
;	MOVE.W	HBB(a6),D0
;	MOVE.W	HBL(a6),D1
;	MOVE.W	D0,$FFFF8288.W
;	MOVE.W	D1,$FFFF828A.W

************** SOUNDTRACK STOP ****************************************
	
	PEA	OFF
	MOVE.W	#$26,-(SP)
	TRAP	#14
	ADDQ.L	#6,SP
	BSR	PLAYER+28+4

	CLR.L	-(SP)
	MOVE.W	#32,-(SP)	; USER	
	TRAP	#1
	ADDQ.L	#6,SP

	CLR	-(SP)	; RETOUR AU BUREAU
	TRAP	#1
	
**********************************************************************
*********** SOUS-ROUTINES ********************************************
**********************************************************************
	
************** LA VBL*************************************************

VBL0	MOVE.L	$466.W,D7
VBL1	CMP.L	$466.W,D7
	BEQ.B	VBL1
	RTS

WAIT	BSR	VBL0
	DBF	D0,WAIT
	RTS
	
RANGER_LES_IMAGES
	LEA	BUFFER,A0
	ADDA.L	#2*LAR_ECR*HAU_ECR,A0
	
	LEA	IMAGE1,A1
	ADDA.L	#128,A1
	MOVE.L	#LAR_ECR*HAU_ECR,D0
COPY1	MOVE.W	(A1)+,(A0)+
	DBF	D0,COPY1

	LEA	IMAGE2,A1
	ADDA.L	#128,A1
	MOVE.L	#LAR_ECR*HAU_ECR,D0
COPY2	MOVE.W	(A1)+,(A0)+
	DBF	D0,COPY2

	LEA	IMAGE3,A1
	ADDA.L	#128,A1
	MOVE.L	#LAR_ECR*HAU_ECR,D0
COPY3	MOVE.W	(A1)+,(A0)+
	DBF	D0,COPY3

	LEA	IMAGE4,A1
	ADDA.L	#128,A1
	MOVE.L	#LAR_ECR*HAU_ECR,D0
COPY4	MOVE.W	(A1)+,(A0)+
	DBF	D0,COPY4
	
	RTS
		
HARDSCROLL
	MOVE.W	#HAU_ECR*2,D0
	MOVE.L	#BUFFER,D2
	ADD.B	#$FF,D2
	CLR.B	D2
	
MOVE	BSR	VBL0
	MOVE.L	D2,D1
	SWAP	D1
	MOVE.B	D1,$FFFF8201.W
	SWAP	D1	
	MOVE.B	D1,D3
	LSR.W	#8,D1
	MOVE.B	D1,$FFFF8203.W
	MOVE.B	D3,$FFFF820D.W
	BSR	VBL0
	ADD.L	#LAR_ECR*4,D2
	DBF	D0,MOVE
	RTS
	
IMAGES	LEA	IMAGE1+128,A0
	MOVE.L	#BUFFER,D1
	ADD.W	#256,D1
	CLR.B	D1
	MOVE.L	D1,A1
	MOVE.L	#HAU_ECR*LAR_ECR,D0
IMAGESA	MOVE.L	(A0)+,(A1)+
	DBF	D0,IMAGESA
	
;	LEA	BUFFER,A0
;	MOVE.L	A0,D0
;	ADD.B	#$FF,D0
;	CLR.B	D0
;	MOVE.L	D0,D1
	
	MOVE.L	D1,A0
IMAGESB	SWAP	D1	
	MOVE.B	D1,$FFFF8201.W
	SWAP	D1
	MOVE.B	D1,D2
	LSR.W	#8,D1
	MOVE.B	D1,$FFFF8203.W
	MOVE.B	D2,$FFFF820D.W
	RTS
	
INTRO	BSR.S	ATROCITY
	BSR	PRESENTS
	BSR	DIAMONDS
	BSR	MAIN_MENU
	RTS
	
MENU	CMP.B	#$3B,$FFFFFC02.W	; F1
	BEQ	PLAY
	CMP.B	#$3C,$FFFFFC02.W	; F2
	BEQ	PRINTER
	CMP.B	#$3D,$FFFFFC02.W	; F3
;	BEQ	MUZAXX
	CMP.B	#$3E,$FFFFFC02.W	; F4
	BEQ.S	THE_END
	BRA	MENU
THE_END	RTS

ATROCITY	
; ON RANGE L'IMAGE1 EN BAS DU BUFFER
	LEA	BUFFER,A0
	MOVE.L	A0,D0
	ADD.L	#256,D0
	CLR.B	D0
	MOVE.L	D0,D2
	MOVE.L	D0,A1
	
	LEA	IMAGE2+128,A0
	ADDA.L	#2*LAR_ECR*HAU_ECR,A1
	MOVE.L	#LAR_ECR*HAU_ECR/2,D0
IMAGE1_A	MOVE.L	(A0)+,(A1)+
	DBF	D0,IMAGE1_A
	
; ON AFFICHE L'ECRAN1 (NOIR)
	MOVE.W	#HAU_ECR/2,D0
IMAGE1_B	MOVE.L	D2,D1
	SWAP	D1
	MOVE.B	D1,$FFFF8201.W
	SWAP	D1	
	MOVE.B	D1,D3
	LSR.W	#8,D1
	MOVE.B	D1,$FFFF8203.W
	MOVE.B	D3,$FFFF820D.W
	ADD.L	#LAR_ECR*4,D2
	BSR	VBL0
	DBF	D0,IMAGE1_B
	MOVE.W	#TIME,D0
	BSR	WAIT
	RTS

PRESENTS
; ON RANGE L'IMAGE2 EN HAUT DU BUFFER
	LEA	BUFFER,A0
	MOVE.L	A0,D0
	ADD.L	#256,D0
	CLR.B	D0
	MOVE.L	D0,D2
	MOVE.L	D0,A1

	LEA	IMAGE3+128,A0
	MOVE.L	#LAR_ECR*HAU_ECR/2,D0
IMAGE2_A	MOVE.L	(A0)+,(A1)+
	DBF	D0,IMAGE2_A
	
; ON AFFICHE L'ECRAN2 (ATROCITY)
	MOVE.W	#HAU_ECR/2,D0
	ADD.L	#2*LAR_ECR*HAU_ECR,D2
IMAGE2_B	MOVE.L	D2,D1
	SWAP	D1
	MOVE.B	D1,$FFFF8201.W
	SWAP	D1	
	MOVE.B	D1,D3
	LSR.W	#8,D1
	MOVE.B	D1,$FFFF8203.W
	MOVE.B	D3,$FFFF820D.W
	SUB.L	#LAR_ECR*4,D2
	BSR	VBL0
	DBF	D0,IMAGE2_B
	MOVE.W	#TIME,D0
	BSR	WAIT
	RTS

DIAMONDS
; ON RANGE L'IMAGE3 EN BAS DU BUFFER
	LEA	BUFFER,A0
	MOVE.L	A0,D0
	ADD.L	#256,D0
	CLR.B	D0
	MOVE.L	D0,D2
	MOVE.L	D0,A1

	LEA	IMAGE4+128,A0
	ADDA.L	#2*LAR_ECR*HAU_ECR,A1
	MOVE.L	#LAR_ECR*HAU_ECR/2,D0
IMAGE3_A	MOVE.L	(A0)+,(A1)+
	DBF	D0,IMAGE3_A
	
; ON AFFICHE L'ECRAN3 (PRESENTS)
	MOVE.W	#HAU_ECR/2,D0
IMAGE3_B	MOVE.L	D2,D1
	SWAP	D1
	MOVE.B	D1,$FFFF8201.W
	SWAP	D1	
	MOVE.B	D1,D3
	LSR.W	#8,D1
	MOVE.B	D1,$FFFF8203.W
	MOVE.B	D3,$FFFF820D.W
	ADD.L	#LAR_ECR*4,D2
	BSR	VBL0
	DBF	D0,IMAGE3_B
	MOVE.W	#TIME,D0
	BSR	WAIT
	RTS

MAIN_MENU
; ON RANGE L'IMAGE4 EN HAUT DU BUFFER
	LEA	BUFFER,A0
	MOVE.L	A0,D0
	ADD.L	#256,D0
	CLR.B	D0
	MOVE.L	D0,D2
	MOVE.L	D0,A1

	LEA	IMAGE5+128,A0
	MOVE.L	#LAR_ECR*HAU_ECR/2,D0
IMAGE4_A	MOVE.L	(A0)+,(A1)+
	DBF	D0,IMAGE4_A
	
; ON AFFICHE L'ECRAN2 (ATROCITY)
	MOVE.W	#HAU_ECR/2,D0
	ADD.L	#2*LAR_ECR*HAU_ECR,D2
IMAGE4_B	MOVE.L	D2,D1
	SWAP	D1
	MOVE.B	D1,$FFFF8201.W
	SWAP	D1	
	MOVE.B	D1,D3
	LSR.W	#8,D1
	MOVE.B	D1,$FFFF8203.W
	MOVE.B	D3,$FFFF820D.W
	SUB.L	#LAR_ECR*4,D2
	BSR	VBL0
	DBF	D0,IMAGE4_B
	MOVE.W	#TIME,D0
	BSR	WAIT
	RTS
PLAY
; ON RANGE L'IMAGE5 EN BAS DU BUFFER
	LEA	BUFFER,A0
	MOVE.L	A0,D0
	ADD.L	#256,D0
	CLR.B	D0
	MOVE.L	D0,D2
	MOVE.L	D0,A1

	LEA	IMAGE1+128,A0
	ADDA.L	#2*LAR_ECR*HAU_ECR,A1
	MOVE.L	#LAR_ECR*HAU_ECR/2,D0
IMAGE5_A	MOVE.L	(A0)+,(A1)+
	DBF	D0,IMAGE5_A
	
; ON AFFICHE L'ECRAN4 (MAIN_MENU)
	MOVE.W	#HAU_ECR/2,D0
IMAGE5_B	MOVE.L	D2,D1
	SWAP	D1
	MOVE.B	D1,$FFFF8201.W
	SWAP	D1	
	MOVE.B	D1,D3
	LSR.W	#8,D1
	MOVE.B	D1,$FFFF8203.W
	MOVE.B	D3,$FFFF820D.W
	ADD.L	#LAR_ECR*4,D2
	BSR	VBL0
	DBF	D0,IMAGE5_B
	MOVE.W	#TIME,D0
	BSR	WAIT
SPACE	CMP.B	#$39+$80,$FFFFFC02.W
	BNE	SPACE
	BSR	MAIN_MENU
	BRA	MENU

************** INITIALISATION DU CODEC POUR LE SOUNDTRACK ************

INIT_CODEC	
	LEA	SAVE,A0
	MOVE.L	$120.W,(A0)+
	MOVE.B	$FFFFFA1B.W,(A0)+
	MOVE.B	$FFFFFA1F.W,(A0)+
	MOVE.B	#246,$FFFFFA1F.W
	MOVE.B	#7,$FFFFFA1B.W
	MOVE.L	#TIMER_B,$120.W
	BSET	#0,$FFFFFA13.W
	BSET	#0,$FFFFFA07.W
	RTS
	
OFF	BCLR	#0,$FFFFFA07.W
	BCLR	#0,$FFFFFA13.W
	LEA	SAVE,A0
	MOVE.L	(A0)+,$120.W
	MOVE.B	(A0)+,$FFFFFA1B.W
	MOVE.B	(A0)+,$FFFFFA21.W
	RTS

TIMER_B	MOVEM.L	D0-A6,-(SP)
	BSR	PLAYER+28+8
	MOVEM.L	(SP)+,D0-A6
	BCLR	#0,$FFFFFA0F.W
	RTE
	
************** RELOCATION ********************************************

RELOC	MOVE.L	2(A0),D0
	ADD.L	6(A0),D0
	ADD.L	14(A0),D0
	ADDA.L	#$1C,A0
	MOVE.L	A0,D1
	MOVEA.L	A0,A1
	MOVEA.L	A1,A2
	ADDA.L	D0,A1
	MOVE.L	(A1)+,D0
	ADDA.L	D0,A2
	ADD.L	D1,(A2)
	CLR.L	D0
RELOC1	MOVE.B	(A1)+,D0
	BEQ.S	RELOC3
	CMP.B	#1,D0
	BEQ.S	RELOC2
	ADDA.L	D0,A2
	ADD.L	D1,(A2)
	BRA	RELOC1
RELOC2	ADDA.L	#$FE,A2
	BRA	RELOC1
RELOC3	RTS	

;PRINTER	
; ON RANGE RIEN EN BAS DU BUFFER
	LEA	BUFFER,A0
	MOVE.L	A0,D0
	ADD.L	#256,D0
	CLR.B	D0
	MOVE.L	D0,D2
	LEA	ADR_ECRAN,A1
	MOVE.L	D0,(A1)
	MOVE.L	D0,A1

	ADDA.L	#2*LAR_ECR*HAU_ECR,A1
	MOVE.L	#LAR_ECR*HAU_ECR/2,D0
IMAGE6_A	MOVE.L	#0,(A1)+
	DBF	D0,IMAGE6_A
	
; ON AFFICHE RIEN
	MOVE.W	#HAU_ECR/2,D0
IMAGE6_B	MOVE.L	D2,D1
	SWAP	D1
	MOVE.B	D1,$FFFF8201.W
	SWAP	D1	
	MOVE.B	D1,D3
	LSR.W	#8,D1
	MOVE.B	D1,$FFFF8203.W
	MOVE.B	D3,$FFFF820D.W
	ADD.L	#LAR_ECR*4,D2
	BSR	VBL0
	DBF	D0,IMAGE6_B

; RECHERCHE DU CODE A AFFICHER

PRINTER	MOVE.L	#0,D3
	LEA	CREDITS,A0
	MOVE.L	ECRAN1,A3
	MOVE.W	#14,D5
GOGO	MOVE.W	#22,D4
GO	MOVE.W	#0,D0
	LEA	FONTE+128,A2
	MOVE.B	(A0)+,D1
	LEA	TABLE,A1
SEARCH	CMP.B	(A1)+,D1
	BEQ.S	FOUND
	ADDQ.B	#1,D0
	BRA	SEARCH	
	
; RECHERCHE DE LA LIGNE DE LA LETTRE
FOUND	CMP.B	#20,D0
	BLT.S	LIGNE_1
	CMP.B	#40,D0
	BLT.S	LIGNE_2
	BRA.S	LIGNE_3
LIGNE_1	MULU.W	#2*FONTE_X,D0
	ADDA.L	D0,A2
	BRA.S	AFFICHE_FONTE
	
LIGNE_2	SUB.W	#20,D0
	ADDA.L	#2*FONTE_Y*LAR_ECR,A2
	MULU.W	#2*FONTE_X,D0
	SUB.L	#2*FONTE_X*8,D0
	ADDA.L	D0,A2
	BRA.S	AFFICHE_FONTE
	
LIGNE_3	SUB.W	#40,D0
	ADDA.L	#4*FONTE_Y*LAR_ECR,A2
	MULU.W	#2*FONTE_X,D0
	SUB.L	#2*FONTE_X*16,D0
	ADDA.L	D0,A2
	
; ON AFFICHE LA FONTE SUR L'ECRAN
AFFICHE_FONTE
	MOVE.W	#FONTE_Y,D0
AFFICHE_LETTRE
	MOVE.W	#16,D1
AFF_1	MOVE.W	(A2)+,(A3)+
	DBF	D1,AFF_1
	ADDA.L	#2*320-2*FONTE_X-2,A2
	ADDA.L	#2*LAR_ECR-2*FONTE_X-2,A3
	DBF	D0,AFFICHE_LETTRE
	BSR	VBL0
	BSR	VBL0
	SUB.L	#2*(FONTE_Y+1)*LAR_ECR-2*FONTE_X,A3
	DBF	D4,GO
	ADD.L	#2*LAR_ECR*FONTE_Y,D3
	MOVE.L	ECRAN1,A3
	ADDA.L	D3,A3
	DBF	D5,GOGO
	BRA	MENU
	
**********************************************************************
	SECTION DATA
**********************************************************************

TEXT	DC.B	$1B,"E"
	DC.B	0

PLAYER	INCBIN	F:\ASM\SOURCES.ZAK\TRACK
	EVEN	

MODULE	INCBIN	F:\MODULES\MOD\MR.MOD
	EVEN			

IMAGE1	INCBIN	E:\DIAMONDS.TPI		; ECRAN JEU
	EVEN

IMAGE2	INCBIN	E:\ATROCITY.TPI		; LOGO 1
	EVEN

IMAGE3	INCBIN	E:\PRESENTS.TPI		; LOGO 2
	EVEN

IMAGE4	INCBIN	E:\DIAMOND2.TPI		; LOGO 3
	EVEN

IMAGE5	INCBIN	E:\PACMAN.TPI		; PRESENTATION
	EVEN

FONTE	INCBIN	E:\FONTES.TPI
	EVEN
	
TABLE	DC.B	'123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ()!?.0*;=:+ '

CREDITS	DC.B	'  = DIAMONDS VS 0.1 =  '
	DC.B	'                       '
	DC.B	'                       '
	DC.B	'CODED BY   PHILX       '
	DC.B	'           ZANAK       '
	DC.B	'                       '
	DC.B	'GRAPHXX BY ARTEK       '
	DC.B	'                       '
	DC.B	'MUZAXX  BY BLUE SILENCE'
	DC.B	'                       '
	DC.B	'                       '
	DC.B	'                       '
	DC.B	'(C) 1995 ATROCITY CORP.'
	DC.B	'                       '
	 		
**********************************************************************
	SECTION BSS
**********************************************************************

TEXTE	DS.W	2
SIZE1	DS.W	384*240+128
SIZE2	DS.W	384*240+128
PSCR	DS.W	2
LSCR	DS.W	2
REZ	DS.W	1
ECRAN1	DS.W	2
ECRAN2	DS.W	2
HBB	DS.W	1
HBL	DS.W	1
KEYBOARD	DS.B	1
SAVE	DS.B	6
ADR_ECRAN	DS.W	2
BUFFER	DS.W	2*384*240+256

	END