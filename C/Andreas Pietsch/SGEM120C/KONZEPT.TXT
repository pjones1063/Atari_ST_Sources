Alle GEM-Programme haben eins gemeinsam: Sie rufen laufend evnt_multi
auf und warten darauf, daû fÅr sie eine Nachricht einfliegt, auf die
dann reagiert werden soll. Ebenso ist es mit viel Aufwand verbunden,
Dialoge in Fenster zu legen. Man muû sich um die Positionen kÅmmern,
Mausklicks und Tasten abfragen und immer schauen, ob der Benutzer
nicht irgendwas im Fenster gemacht hat...

SysGem verfolgt die Philosophie, daû weniger mehr ist. Sie sagen nur
noch, ein Fenster soll aufgehen, und Sie geben an, wie dies aussehen
soll. SysGem verwaltet dann die ganze Arbeit, verschiegen, vergrîûern,
fullen etc.

FÅr den/die Programmierer/in wÑre es nur wichtig zu wissen, wenn der
Benutzer etwas macht, auf das reagiert werden soll. Alle diese
Funktionen stecken in der Funktion \#HandleSysGem\#. Fast alle Ver-
waltungsaufgaben Åbernimmt diese Funktion. Warum soll man sich darum
kÅmmern, auf welche Position die Slider zu setzen sind? Es reicht doch,
wenn man weis, daû die Slider verschoben oder verÑndert wurden...

FÅr die Fenster und Dialoge geben Sie bei SysGem jeweils eine Funktion
an (oder auch nicht), an die alle BenutzeraktivitÑten gemeldet werden;
Sie entscheiden dann, wie darauf reagiert werden soll.

Ein kleines Beispiel:

     Sie: Hallo Lib! Mach ein Fenster auf, in dem der Dialog xy liegen
          soll und melde mit alle Aktionen an die Funktion z.
  SysGem: Klar Mann!
     Sie: Dann mach noch ein Fenster auf und lege den Text z7 da rein.
          KÅmmer dich um alles, bis der Benutzer das Fenster schlieût
          und lass mich in Ruhe!
  SysGem: Ja, Master. Ist gebongt!
Benutzer: Aha. Ein Fensterdialog! Nett. Was passiert wohl, wenn dich
          den Button "mach was" anklicke? [Benutzer klickt...]
  SysGem: Na endlich was zu tun! Ein Mausklick! Wohin eigentlich?
          Ach so, Dialog xy. Oh, Button "mach was". Mal sehen, "Sie"
          hat eine Funktion angegeben, also melden wir das mal.

          He, Funktion z! Der Benutzer hat "mach was" angeklickt!
 Funk. z: Is ja gut. Aha, bei "mach was" soll der Dialog verlassen
          werden. He, Lib! Mach das Fenster zu.
  SysGem: Jo, geschlossen.
Benutzer: Oh, ein Textfenster. Scrollen wir mal...
  SysGem: Aha, Textfenster. Keine Funktion angegeben, also Arbeit
          fÅr mich. Wir scrollen, updaten...
Benutzer: Is dat scheen!
     Sie: Warum kompliziert, wenn man SysGem nehmen kann...


Sie sehen, SysGem liefert nur Nachrichten an Handler. Sie kînnen sich
also auf das wesentliche des Programms konzentrieren, ohne auf die
Verwaltung des GEM RÅcksicht zu nehmen.

