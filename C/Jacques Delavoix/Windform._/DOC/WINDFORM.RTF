{\rtf1\pc{\fonttbl{\f7\fnil Dutch 801 Roman;}
{\f8\fnil Dutch 801 Italic;}
{\f9\fnil Dutch 801 Bold;}
{\f10\fnil Dutch 801 Bold Italic;}
{\f16\fnil Park Avenue;}
{\f18\fnil VAG Rounded;}
}\paperw11904\paperh16836\margl567\margr567\margt850\margb850\pgnstart1
\ftntj\ftnrestart\makeback
\sectd\pgndec\headery283\footery850\cols1\colsx567\pgndec
\qj\tx3061\f18\fs40 La mise en oeuvre facile des Fen\'88tres de dialogue non 
modales.\tab\fs24 en Pure C, par  Jacques  Delavoix .\fs40\par
\pard\qj\li567\fi-567\ri567\f7\fs24 Mise \'85 jour du 24/03/1996\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tab\tab Comme ce titre l'indique, ces routines, dont je viens de terminer la mise au point, ont \'82t\'82 
\'82tudi\'82es pour permettre une mise en oeuvre tr\'8As fa\'87ile des formulaires en fen\'88tres non 
bloquants, encore \lang1036\hyphpar appel\'82s\hyphpar0  "fen\'88tres de dialogue non modales", avec une architecture similaire 
(mais pas identique) \'85 celle employ\'82e lors de la mise en oeuvre de formulaires bloquants par 
"\f9 form_do\f7 ()".\par
\tab\tab Il \'82tait \'82galement \hyphpar important d'\'82viter une dispersion et un m\'82lange du code et aussi d'ob
tenir une bonne structuration de celui_ ci; le code g\'82rant le fonctionnement des fen\'88tres de 
dialogue est ici ind\'82pendant du code de gestion des fen\'88tres principales. Cette structuration 
offre en outre l'avantage de faciliter la mise en oeuvre, la mise au point et le d\'82boggage des 
programmes.\par
\pard\qj\li567\fi-567\ri567\tx567\par
\pard\qj\li567\fi-567\ri567\tx1134\tab\tab Il est important de noter que les routines fournies ici donnent une base pour la program
mation des fen\'88tres de dialogue, mais que ce code peut \'88tre modifi\'82 pour \'88tre adapt\'82 aux be
soins propres de chaque programmeur. On peut \'82galement utiliser ces routines pour la pro
grammation d'un accessoire ou d'un executable mixte \f9 ACC/APP\f7 .\par
\pard\qj\li567\fi-567\ri567\tx567\par
\tab Quatre routines sont \'85 la disposition des programmeurs pour la gestion de ces fen\'88tres :\par
\tab - \f9 init_var()\f7  pour l'initialisation de chaque fen\'88tre.\par
\tab - \f9 open_dialog()\f7  pour ouvrir une fen\'88tre de dialogue.\par
\tab - \f9 close_dialog()\f7  pour la refermer.\par
\tab - \f9 windform_do()\f7  pour g\'8Arer le dialogue actuellement actif, le coeur du dispositif, \'82quivalent 
en gestion non bloquante \'85 la fonction form_do().\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tab\tab Pour la suite des explications, le terme de "routine \f9 utilisateur\f7 ", servira \'85 d\'82signer les 
fonctions ayant une action particuli\'8Are dans votre programme et qui vont \f9 utiliser\f7  les fen\'88tres 
de dialogue; par exemple une fonction de Recherche et Remplacement ou tout simplement 
une routine affichant la traditionnelle boite d'Informations du programme (baptis\'82e "\f9 infor
me()\f7 " dans le programme d'exemple fourni).\par
\pard\qj\li567\fi-567\ri567\tx567\par
\f18\fs28 Le principe de fonctionnement :\par
\f7\fs24\par
\pard\li567\fi-567\ri567\tx567 Voyons donc ce qui se passe dans le cas o\'97 l'on appele la boite "\f9 Informations\f7 " :\par
\pard\qj\li567\fi-567\ri567\tx1134\par
\tab\tab Regardez tout d'abord dans la fonction "\f9 main()\f7 ", apr\'8As l'appel \'85 \f9 evnt_multi()\f7 : on com
mence, dans un premier temps, par d\'82coder l'option de menu correspondante et on appele la 
routine \f9 utilisateur\f7  "\f9 informe()\f7 ". Vous remarquerez que l'on transmet un param\'8Atre baptis\'82 
"\f9 OPEN_DIAL\f7 " \'85 cette routine. Ce param\'8Atre, comme son nom le laisse supposer, indique \'85 
cette routine que l'on demande l'ouverture du dialogue. Cette routine va donc ouvrir la fen\'88
tre d'"\f9 Informations\f7 " puis va retourner dans la boucle d'attente des \'82v\'8Anements.\par
\tab\tab Maintenant un probl\'8Ame se pose, car il est n\'82c\'82ssaire de retourner dans cette routine \'85 
chaque fois que l'on re\'87oit un \'82v\'8Anement concernant cette fen\'88tre de dialogue, (et donc pour 
g\'82rer le dialogue), comment faire ?\par
\pard\li567\fi-567\ri567\tx1134\par
\pard\qj\li567\fi-567\ri567\tx1134\tab\tab En fait c'est simple: Il suffit, apr\'8As le d\'82codage des options de menus, d'effectuer \f9 un ai
guillage\f7  \f9 en fonction du Handle de fen\'88tre renvoy\'82 par la fonction "evnt_multi()"\f7  et d'appeler 
\'85 nouveau la routine \f9 utilisateur\f7  concern\'82e (et donc la routine "\f9 informe()\f7 " dans le cas pr\'82sent) 
mais cette fois en lui transmettant la variable des flags d'\'82v\'8Anements en param\'8Atre.\par
\pard\li567\fi-567\ri567\tx1134\tab\tab Etant donn\'82 que le param\'8Atre "\f9 OPEN_DIAL\f7 " emprunte le m\'88me chemin, sa valeur a \'82t\'82 
fix\'82e suffisamment haute pour ne pas interf\'82rer avec les flags d'\'82v\'8Anements. \par
\pard\qj\li567\fi-567\ri567\tx567\par
\pard\qj\li567\fi-567\ri567\tx1134\tab\tab\f9 Mais avant de faire ceci\f7  il reste quand m\'88me un petit probl\'8Ame \'85 r\'82gler: en effet, le 
handle de fen\'88tre renvoy\'82 dans le mot \f9 3\f7  du buffer de message n'est valable que pour les \'82v\'8A
nements "\f9 Message\f7 "... \par
\pard\li567\fi-567\ri567\tx1134\tab\tab Et bien peu inporte car il suffit, au pr\'82alable, d'affecter un handle de fen\'88tre aux \'82v\'8Ane
ments qui en sont d\'82pourvus :\par
\pard\qj\li567\fi-567\ri567\tx567\par
\pard\li567\fi-567\ri567\tab - Pour "\f9 MU_KEYBD\f7 " nous demandons le handle de la fen\'88tre qui se trouve au premier plan.\par
\pard\li567\fi-567\ri567\tx1134\par
\tab - Pour "\f9 MU_BUTTON\f7 " nous demandons, par "\f9 wind_find()\f7 ", le handle de la fen\'88tre qui se 
trouve sous la souris :\par
\pard\qj\li567\fi-567\ri567\tx1134\tab\tab Si le handle de Fen\'88tre est \'82gal \'85 \f9 z\'82ro\f7 , cela signifie que c'est le \f9 Bureau\f7  du programme 
qui se trouve concern\'82 et qu'il est possible alors, le cas \'82ch\'82ant, d'aiguiller le programme vers 
un traitement des objets \'82ventuellements pr\'82sents sur ce bureau (non employ\'82 dans l'exemple 
fourni).\par
\pard\qj\li567\fi-567\ri567\tx567\par
\f18\fs28 Les Variables :\f7\fs24\par
\pard\qj\li567\fi-567\ri567\tx1134\par
\tab\tab Pour pouvoir faire fonctionner les fen\'88tres de dialogue, un certain nombre de variables 
s'av\'8Arent n\'82c\'82ssaires: L'\ul adresse du formulaire\ul0 , le \ul Handle de la fen\'88tre\ul0  et les \ul coordonn\'82es\ul0  de 
celle-ci ainsi que deux variables n\'82c\'82ssaires \'85 la \ul gestion des champs de texte \'82ditables\ul0 .\par
\tab\tab Ces variables, qui sont personnelles \'85 chaque fen\'88tre, ont \'82t\'82 regroup\'82es dans une struc
ture de type "\f9 WINDFORM_VAR\f7 ".\par
\tab\tab L'adresse de la structure concern\'82e sera transmise par la routine \f9 utilisateur\f7  aux fonc
tions de gestion du dialogue (voir le fichier "\f9 WINDFORM.H\f7 "). Il faudra donc pr\'82voir une 
structure "\f9 WINDFORM_VAR\f7 " (et bien \'82videmment une routine \f9 utilisateur\f7 ) pour chaque fe
n\'88tre de dialogue que l'on compte utiliser.\par
\pard\qj\li567\fi-567\ri567\tx567\par
\f18\fs28 La Routine "Utilisateur" :\par
\pard\qj\li567\fi-567\ri567\tx1134\f7\fs24\par
\tab\tab Pour que le fonctionnement soit possible cette routine doit \'88tre con\'87ue selon un sh\'82mas 
particulier, d'une mani\'8Are similaire \'85 ce que l'on ferait pour une gestion bloquante par 
"\f9 form_do\f7 ()", et dont voici le principe :\par
\pard\qj\li567\fi-567\ri567\tx567\par
Routine utilisateur (\'82v\'8Anements)\par
\tab Si \'82v\'8Anements == \f9 OPEN_DIAL\f7\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tab\tab /* Initialisations \'82ventuelles (champs \'82ditables et/ou radio_buttons) */\par
\tab\tab Alors Ouverture du dialogue\par
\tab sinon Choix = Gestion du dialogue\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx4308\tab\tab Si Choix diff\'82rent de Z\'82ro\tab /* si Choix == 0 le dialogue n'est pas termin\'82. */\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tab\tab\tab Alors Fermeture possible du dialogue\par
\tab\tab\tab Si Choix == \f9 CLOSE_DIAL\f7   /* La case de fermeture a \'82t\'82 cliqu\'82e. */\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\tab\tab\tab\tab\tab Choix = \f9 ANNULER\f7    /* C'est \'85 vous de le d\'82cider ! */\par
\tab\tab\tab fin Si\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tab\tab\tab Si Choix diff\'82rent de \f9 ANNULER\f7\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\tab\tab\tab Alors action demand\'82e\par
\tab\tab\tab fin Si\par
\tab\tab fin Si\par
\tab fin Si\par
Retour\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268 Voyons donc ce qui se passe dans le cas de la proc\'82dure "\f9 color_window\f7 ()":\par
\par
\tab\tab Si cette routine re\'87oit le param\'8Atre "\f9 OPEN_DIAL\f7 ": apr\'8As avoir v\'82rifi\'82 que la fen\'88tre 
n'est pas d\'82j\'85 ouverte, nous initialisons l'unique champ de texte \'82ditable pr\'82sent dans cette 
boite, (notez que dans la boite "\f9 Client\f7 " les champs de texte ne sont initialis\'82s que lors du d\'82
marrage du programme (c'est suivant ce que vous voulez faire)), puis nous appellons la proc\'82
dure d'ouverture.\par
\tab\tab Sinon le param\'8Atre re\'87u est un \'82v\'8Anement, et nous appellons la fonction de gestion du 
dialogue "\f9 windform_do()\f7 "; au retour de cette fonction, nous commen\'87ons par tester si le dia
logue est termin\'82: \par
\tab\tab Dans ce cas la valeur renvoy\'82e (r\'82cup\'82r\'82e dans la variable "\f9 choix\f7 ") est diff\'82rente de z\'82ro 
et le reste du traitement est identique \'85 celui que l'on aurait eu dans le cas d'une gestion par 
"\f9 form_do()\f7 ", except\'82 la prise en compte de la valeur "\f9 CLOSE_DIAL\f7 " indiquant un Clic sur la 
case de fermeture de la fen\'88tre, normalement consid\'82r\'82e comme \'82quivalente \'85 "\f9 ANNULER\f7 ", 
comme c'est le cas dans l'exemple fourni, mais vous pouvez bien entendu en d\'82cider autre
ment.\par
\tab\tab Sinon, la valeur renvoy\'82e par "\f9 windform_do()\f7 " est \'82gale \'85 z\'82ro, et dans ce cas le dialogue 
doit continuer.\par
\par
\tab\tab Observez attentivement les routines "\f9 informe()\f7 ", "\f9 fiche_client()\f7 "  et "\f9 color_window()\f7 " 
dans le programme et comparez les avec le mod\'8Ale que je viens de d\'82crire.\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\f9\par
\tab NOTE :\f7  Remarquez le bouton '\f9 noir\f7 ' dans la boite "\f9 Couleur Fen\'88tre\f7 "\f9  \f7 qui a \'82t\'82 d\'82clar\'82 "\f9 DISA
BLED\f7 ".\par
\par
\f18\fs28\page
Les quatre routines principales :\f7\fs24\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\par
\tab\tab Ces quatre routines re\'87oivent toutes l'adresse de la structure \f9 WINDFORM_VAR\f7  concer
n\'82e en premier param\'8Atre. Leurs prototypes se trouvent dans le fichier "\f9 WINDFORM.H\f7 " ainsi 
que les diff\'82rentes d\'82finitions utilis\'82es par les routines "\f9 WINDFORM\f7 ".\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\f18\fs28 La routine d'initialisation :\f7\fs24\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Cette routine doit \'88tre appel\'82e durant la phase d'initialisation du programme pour cha
que fen\'88tre de dialogue. Le deuxi\'8Ame param\'8Atre est l'index du formulaire dans le fichier res
source, donn\'82 par le fichier header associ\'82 (.H). Les deux param\'8Atres "inf_x" et "inf_y" sont 
pr\'82vus pour \'88tre utilis\'82s en conjonction avec la lecture d'un fichier "\f9 .INF\f7 " o\'97 pourront \'88tre 
sauvegard\'82es les coordonn\'82es initiales X et Y de chaque fen\'88tre (sauvegarde des pr\'82f\'82ren
ces). Si ces deux param\'8Atres sont \'85 z\'82ro, la fen\'88tre sera centr\'82e \'85 l'\'82cran.\par
\tab\tab Cette routine permet maintenant un recadrage automatique de la fen\'88tre de dialogue, si 
les donn\'82es fournies par "inf_x" et "inf_y" tendent \'85 faire sortir le formulaire de l'\'82cran.\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\f9 Voir la proc\'82dure "init_prog()" dans le programme d'exemple "WINFDEMO.PRG".\f7\par
\f18\fs28\par
La routine d'ouverture :\f7\fs24\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Cette routine assure l'ouverture de la fen\'88tre de dialogue. Les deux autres param\'8Atres \'85 
passer sont un pointeur sur le titre de la fen\'88tre et l'index de l'objet texte \'82ditable o\'97 doit ap
paraitre le curseur d'\'82dition (ou '0' sinon).\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\f18\fs28 La routine de fermeture :\f7\fs24\par
\tab Fermeture de la fen\'88tre de dialogue concern\'82e.\par
\par
\f18\fs28 La routine de gestion du dialogue :\f7\fs24\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Voici enfin cette fameuse routine ! Le deuxi\'8Ame param\'8Atre est constitu\'82 des flags d'\'82v\'8A
nement retransmis par la routine \f9 utilisateur\f7  appelante. La valeur retourn\'82e est soit :\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\tab - Z\'82ro : Le dialogue n'est pas termin\'82.\par
\tab - \f9 CLOSE_DIAL\f7   : Valeur -1, la case de fermeture de la fen\'88tre a \'82t\'82 cliqu\'82e.\par
\tab - Une valeur Positive : Dans ce cas l'utilisateur a actionn\'82 un bouton de sortie et cette valeur 
en repr\'82sente l'index.\par
\par
\f18\fs28 La Mise en Oeuvre :\f7\fs24\par
\tab Elle doit \'88tre faite de la fa\'87on suivante, en vous inspirant du programme d'exemple fourni :\par
\par
\tab\f9 1\f7 , D\'82clarez une structure \f9 WINDFORM_VAR\f7  pour chaque fen\'88tre de dialogue que vous d\'82si
rez mettre dans votre programme, et en lui donnant un nom explicite.\par
\par
\tab\f9 2\f7 , Si ce n'est d\'82j\'85 fait, structurez le traitement des \'82v\'8Anements, effectu\'82 aussit\'93t apr\'8As le re
tour de l'appel \f9 evnt_multi()\f7 , en traitant d'abord les options de Menu, puis en affectant un 
Handle de fen\'88tre aux \'82v\'8Anements voulus et en effectuant ensuite des aiguillages sur vos pro
c\'82dures \f9 "utilisateur"\f7  en fonction de ce Handle. Je laisse \'85 votre initiative le traitement d'au
tres \'82v\'8Anements comme par exemple l' \'82v\'8Anement \f9 MU_TIMER,\f7  utile si vous voulez g\'82rer un 
ou plusieurs ph\'82nom\'8Anes p\'82riodiques (par ex.: sauvegarde automatique du document actif 
toute les \f9 n\f7  secondes et/ou un curseur clignotant, etc...), mais ne l'utilisez pas, comme je l'ai 
d\'82j\'85 vu faire, uniquement pour que "l'\f9 AES\f7  rende la main", ce qui est inutile si le programme 
n'a rien \'85 faire.\par
\tab\f9 3\f7 , Lors de l'initialisation du programme, effectuez un appel \'85 \f9 init_var()\f7  pour chaque fen\'88tre 
de dialogue, en passant en param\'8Atres : L'adresse de la structure concern\'82e, l'Indice du for
mulaire concern\'82 et \'82ventuellement les coordonn\'82es \f9 X\f7  et \f9 Y\f7  de d\'82part (pouvant provenir de la 
lecture d'un fichier \f9 INF)\f7 .\par
\par
\tab\f9 4\f7 ,  Concevez vos fonctions "\f9 utilisateurs\f7 " conform\'82ment \'85 ce qui a \'82t\'82 d\'82crit plus haut.\par
\par
\f18\fs28 Les Formulaires :\f7\fs24\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Ils seront \'82dit\'82s de la m\'88me fa\'87on que pour une mise en oeuvre classique avec des ra
dio_buttons, champs de texte \'82ditables, ic\'93nes couleurs, boutons de sortie et un bouton par 
d\'82faut \'82ventuel. Libre \'85 vous de mettre en oeuvre les menus \f9 POP_UP\f7  du \f9 FALCON\f7  , les 
\f9 USERDEFS\f7  et autres...\par
\tab\tab Notez que l'\'82paisseur du cadre du formulaire doit \'88tre au moins \'82gal \'85 \f9 2\f7  pour les boites 
en \f9 3D\f7 , il est \'82galement possible de lui donner une \'82paisseur de \f9 3\f7  si l'on veut que ce cadre soit 
visible dans la fen\'88tre.\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\f18\fs28 Les extensions :\f7\fs24\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab\f9 WINDFORM_DO\f7  permet des commandes \'82tendues, tout d'abord pour les champs \'82di
tables, avec le positionnement du curseur en d\'82but ou en fin de champ par les touches "\f9 Con
trol\f7 " + les touches  curseur gauche et droite, sauter un mot par la touche "\f9 Shift\f7 " + ces m\'88me 
touches curseur et positionner le curseur sur une lettre avec la souris ainsi que le fait de d\'82
placer ce curseur dans le champ en maintenant le bouton de la souris enfonc\'82.\par
\pard\li567\fi-567\ri567\tx1134\tx1701\tx2268\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Une possibilit\'82 nouvelle est apparue depuis le mois d'Aout 1995 : les fen\'88tres compor
tent maintenant une case "\f9 FULLER\f7 " qui permet de r\'82duire la fen\'88tre \'85 sa seule barre de titre, 
cette commande agit en bascule, c'est \'85 dire qu'un second clic sur la case \f9 Plein \'82cran\f7  permet 
de retrouver l'int\'82gralit\'82 de la fen\'88tre de dialogue. Une fen\'88tre "R\'82duite" ne peut bien sur pas 
recevoir de commandes. Adjonction due \'85 \f9 R\'82mi VANEL \f7 .\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\f18\fs28\par
Les Raccourcis clavier :\f7\fs24\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Ils sont trait\'82s pour les Boutons dont l'OB_TYPE \'82tendu comporte la valeur 18 et la let
tre concern\'82e doit \'88tre pr\'82c\'82d\'82e du symbole "\f9 [\f7 " standard. Dans ces conditions le dessin et le 
comportement de ces boutons est tout \'85 fait conforme aux boutons du \f9 GEM\f7  par le truche
ment de la routine \f9 USERDEF\f7  fournie ici, avec l'affichage du raccourci par un soulignement.\par
\pard\li567\fi-567\ri567\tx1134\tx1701\tx2268\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab La documentation d\'82veloppeur \f9 ATARI\f7  sp\'82cifie que les raccourcis clavier pour les \f9 Me
nus D\'82roulants\f7  doivent \'88tre d\'82clench\'82s par la touche "\f9 Control\f7 "; en cons\'82quence de ceci, il pa
rait logique que la touche utilis\'82e pour le d\'82clenchement des raccourcis clavier dans les \f9 fen\'88
tres de dialogue\f7  soit la touche "\f9 Alternate\f7 " comme c'est le cas dans \f9 WINDFORM\f7 . Ces disposi
tions permettent d'\'82viter d'\'82ventuels conflits dans la gestion des raccourcis claviers entre les 
Menus et les Fen\'88tres de dialogue, et d'ailleurs, depuis quelques temps, de nombreux pro
grammes fonctionnent de cette mani\'8Are.\par
\pard\li567\fi-567\ri567\tx1134\tx1701\tx2268\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Les flags \f9 3D\f7  du nouveau \f9 TOS\f7  sont \'82galement pris en compte (\f9 ob_flags 9\f7  et\f9  ob_flags 10\f7 ), 
seul l'\'82tat \f9 SHADOWED\f7  n'est pas trait\'82 par la routine (faute d'avoir eu le temps de m'en occu
per). J'ai cependant dot\'82 cette routine d'une possibilit\'82 suppl\'82mentaire, accessible en donnant 
la valeur 22 au lieu de 18 pour l'OB_TYPE \'82tendu, et qui affiche alors un "\f9 mini bouton\f7 " (d\'82
crit un peu plus bas).\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\f9\ul Les valeurs utilis\'82es :\f7\ul0\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Afficher des raccourcis clavier dans des boutons transform\'82s en \f9 USERDEFS\f7  est une 
chose, en assurer la d\'82tection dans la routine de gestion en est une autre. On pourrait penser 
qu'il suffit de d\'82tecter la valeur 18 pour d\'82cider que le bouton puisse comporter un raccourci 
clavier, mais on se retrouve alors limit\'82 \'85 un seul type de bouton; rajouter des tests sur d'au
tres valeurs est tout aussi limitatif, et de plus il faudrait encore d\'82cider quelle seraient les va
leurs \'85 employer.\par
\par
\tab\tab J'ai donc opt\'82 pour le syst\'8Ame suivant : La valeur 18, pr\'82conis\'82e par \f9 INTERFACE\f7  pour 
les raccourcis clavier, positionne le bit Num\'82ro 1 de OB_TYPE \'82tendu (valeur 2), la d\'82tection 
des raccourcis clavier se fera donc en testant si ce bit est \'85 1, ce qui nous laisse une belle bro
chette de valeurs pour les routines de boutons avec raccourcis que nous pourrons impl\'82men
ter.\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\f9\ul Les "mini boutons" :\f7\ul0\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Cette possibilit\'82 est accessible en donnant une valeur de 22 \'85 l'OB_TYPE \'82tendu au lieu 
de 18, on a alors acc\'82s \'85 un bouton \f9 GEM\f7  de taille r\'82duite et dont le texte est affich\'82 avec la 
plus petite fonte syst\'8Ame (fonte des Ic\'93nes de hauteur \f9 4\f7 ). Il sera par contre utile, dans ce cas, 
de r\'82duire la largeur du bouton lors de l'\'82dition du ressource.\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\f9\ul Les "boutons bistables" :\f7\ul0\par
\par
\pard\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\tab Il ne s'agit pas d'une nouveaut\'82, puisque cette possibilit\'82 a toujours exist\'82 dans le \f9 GEM\f7 .\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\tab\f9 WINDFORM\f7  permet maintenant l'affichage correct des raccourcis clavier dans ce type 
de boutons.\par
\pard\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\tab Un bouton de ce type est d\'82fini lorsqu'il est d\'82clar\'82 \f9 SELECTABLE\f7  et \'82ventuellement 
\f9 TOUCHEXIT \f7 et que les flags suivants : \f9 DEFAULT\f7 ,\f9  EXIT\f7 ,\f9  EDITABLE \f7 et \f9 RBUTTON \f7 soient 
tous \'85 z\'82ro.\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\pard\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\tab L'\'82tat de ce bouton s'inverse \'85 chaque fois que l'on clique dessus; utile, par exemple, 
pour activer/d\'82sactiver une ou plusieurs option(s) individuellement. Si le bouton \f9 Bistable\f7  est 
d\'82clar\'82 \f9 TOUCHEXIT\f7 , il provoquera une sortie du dialogue (c'est \'85 dire que son \f9 index\f7  sera re
tourn\'82) \'85 chaque sollicitation de ce bouton, cette possibilit\'82 de sortie permet une action im
m\'82diate de ce bouton \f9 Bistable\f7 .\par
\tab\f9 Voir l'exemple dans la boite 'Informations' de "WINFDEMO.PRG".\f7\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\f9\ul\par
Les routines USERDEFS :\f7\ul0\par
\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab -\f9 set_user()\f7  : Cette routine parcours le formulaire \'85 la recherche des objets \'85 transformer en 
\f9 USERDEFS\f7  et appelle, dans ce cas, la routine \f9 set_objc()\f7  qui r\'82alise cette transformation, en 
lui transmettant l'adresse de l'objet et l'adresse de la routine de dessin \'85 utiliser (\f9 under_but
ton() \f7 ou d'autres Routines \'82ventuellement).\par
\pard\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Une particularit\'82 du \f9 TOS 4.02\f7  fait que les flags \f9 3D\f7  en \f9 ob_flag 9\f7  et \f9 ob_flag 10\f7  ne sont pas 
directement utilisables avec des Ojets \f9 Userdefs\f7 ; ils sont donc automatiquement d\'82plac\'82s dans 
\f9 ob_flags 11\f7  et \f9 ob_flags 12\f7  si n\'82c\'82ssaire.\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Ces flags sont d\'82finis au d\'82but du fichier \f9 WINDFORM.C\f7  par \f9 USR_INDICATOR\f7  et 
\f9 USR_ACTIVATOR\f7 .\par
\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\f18\fs28 Les Accessoires :\f7\fs24\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\par
\tab\tab Le fichier \f9 ACC_FORM.C\f7  est un squelette pour la programmation d'un accessoire (mixte 
\f9 ACC / APP\f7 ) utilisant les routines \f9 WINDFORM\f7 .\par
\pard\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab L'utilisation d'une allocation dynamique de m\'82moire \'82tant d\'82conseill\'82e dans le cas d'un 
accessoire, il suffit alors de r\'82server un tableau de structures \f9 USERBLK\f7  dont le nombre d'\'82l\'82
ments sera au moins \'82gal au nombre de boutons contenu dans le Ressource. La fonction 
\f9 set_objc()\f7  doit dans ce cas \'88tre modifi\'82e en cons\'82quence, une variable globale sera alors utili
s\'82e, comme compteur, pour indexer ce tableau d'\f9 USERBLKs\f7  et incr\'82m\'82nt\'82e apr\'8As chaque 
transformation en \f9 USERDEF\f7  (voir \f9 USER_ACC.TXT\f7  dans le dossier \f9 SOURCES\f7 ).\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\f18\fs28\par
Annexe :\f7\fs24\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Le fichier "\f9 USAGE\f7 " est destin\'82 \'85 l'utilisateur de votre programme et est pr\'82vu pour \'88tre 
incorpor\'82 dans le Manuel de celui_ci.\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\f18\fs28 Les d\'82fauts :\f7\fs24\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\tab\tab Malgr\'8As une \'82tude approfondie, je n'ai pu \'82viter un ph\'82nom\'8Ane de non_r\'82apparition du 
curseur  d'\'82dition dans certains cas, assez rares il est vrai. Si cela se produit, il suffit d'activer 
une autre fen\'88tre puis de r\'82activer la fen\'88tre de dialogue en cliquant dessus \hyphpar0 (ceci peut se 
produire si une fen\'88tre \'85 \'82t\'82 d\'82plac\'82e sur notre fen\'88tre de dialogue puis red\'82plac\'82e 
compl\'8Atement en dehors de celle_ci, puis ferm\'82e, autant dire qu'il faut presque le faire 
expr\'8As).\hyphpar\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\f18\fs28\par
Nouvelles Fonctionnalit\'82s :\f7\fs24\par
\par
\tab Deux nouvelles fonctions on fait leur apparition :\par
\par
\tab\f9 int load_rsc( char *rsc_name, int wind_fail )\f7\tab :\par
\pard\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\tab Cette routine assure le chargement du Fichier Ressource (par \f9 rsrc_load()\f7  ) et la r\'82cup\'82
ration\f9  \f7 de l'adresse d'une chaine d'Alerte "Plus de Fen\'88tres", qui doit \f9 Obligatoirement \'88tre pla
c\'82e dans le Ressource\f7 , pour la Fonction "\f9 open_dialog()\f7 ". Les param\'8Atres \'85 passer sont :\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab - Le nom du Fichier Ressource.\par
\tab - L'index de la chaine Libre d'Alerte "NO_WINDOW".\par
\tab La valeur retourn\'82e par cette fonction est celle renvoy\'82e par \f9 rsrc_load()\f7 .\par
\tab Exemple :\tab\f9 load_rsc( "winfdemo.rsc", NO_WINDOW );\f7\par
\par
\tab\f9 char * rsrc_get_string( int index )\f7  :\par
\pard\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\tab Cette routine renvoie l'adresse d'une chaine libre plac\'82e dans le ressource, et dont l'\f9 in
dex\f7  est pass\'82 en param\'8Atre. Cette fonction est utilis\'82e par \f9 load_rsc()\f7 .\par
\par
\tab Ces deux fonctions ont \'82t\'82 rajout\'82es de fa\'87on \'85 faciliter la mise en oeuvre de chaines libres 
dans le fichier ressource, en vue de pouvoir facilement traduire son programme dans une au
tre Langue sans avoir \'85 recompiler (en mettant les chaines de caract\'8Ares dans le ressource).\par
\par
\tab Voir les Fichiers \f9 WINFDEMO.C\f7  et \f9 ACC_FORM.C\f7 .\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\f18\fs28\par
Le Programme d'exemple :\f7\fs24\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\par
\tab Ce programme est founi sous la forme de  plusieurs fichiers source :\par
\pard\li567\fi-567\ri567\tx680\tx1701\tx2268\tab\f9 -\f7  \f9 WINDFORM.C \f7 : Contient les routines de gestion du dialogue ainsi que \f9 rc_intersect()\f7  et\-\par
\pard\li567\fi-567\ri567\tx794\tx1701\tx2268\tab\tab s\f9 tdkey()\f7 . \f9 Ce fichier est  pr\'82vu pour \'88tre incorpor\'82 directement dans un projet logiciel\f7 .\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab  \f9 ATTENTION\f7  : Ce fichier utilise des variables externes d\'82finies dans le programme principal\par
\pard\qj\li567\fi-567\ri567\tx794\tx1134\tx1701\tx2268\tab\tab et il vous faudra mettre les noms des variables concern\'82es en concordance.\par
\pard\qj\li567\fi-567\ri567\tx1134\tx1701\tx2268\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\tab\f9 -\f7  \f9 WINFDEMO.C\f7  : Le programme d'exemple proprement dit.\par
\tab\f9 ATTENTION\f7  : V\'82rifier dans votre fichier \f9 AES.H\f7  si la structure utilis\'82e par votre version de 
PURE C se nomme \f9 _GemParBlk\f7 ; Si elle se nomme \f9 _VDIParBlk\f7  , alors mettez en service la 
ligne de red\'82finition situ\'82e au d\'82but du fichier \f9 WINDFORM.H\f7 .\par
\par
\tab\f9 -\f7  \f9 WINDFORM.H\f7  contient les prototypes des fonctions et les d\'82clarations utilis\'82es pour la\par
\pard\qj\li567\fi-567\ri567\tx794\tx1134\tx1701\tx2268\tab\tab gestion des dialogues.\par
\pard\qj\li567\fi-567\ri567\tx567\tx1134\tx1701\tx2268\par
\tab\f9 -\f7  \f9 ACC_FORM.C\f7  : Squelette d'un accessoire utilisant les routines WINDFORM.\par
\par
\pard\qj\li567\fi-567\ri567\tqc\tx5102\f16\fs36\par
\tab\tab A bient\'93t, Jacques Delavoix.}