#####################################################################
#
#	GUI_DEFS file for XAES 1.00
#	Written for XAES by Ken Hollis
#
#	All comments in this file are signified by:
#	'#', '[' (ending with a ']'), ';', '*', Single quote, '!'
#
#	Blank lines are also counted as commented lines, but must not
#	contain any text.  Make sure you follow the rules for creating
#	comments, or your GUI_DEFS.SYS file will break.  :-)
#
#	In all commands that can be set, these are ALL CaSe-SeNsItIvE!
#	Please enter them exactly as you see them, or you will get an
#	error message.
#
#	Use TABS instead of spaces to indent your comments.  They don't
#	work with spaces.  They will soon, but not currently.
#
#####################################################################

#####################################################################
#
#	The following is a listing of the default color names that are
#	legal for this program.  Falcon030 and STe extended palettes are
#	not supported; only GEM/VDI 16 color naming conventions are
#	allowed.
#
#	Low resolution colors available or Medium w/16+ color mode:
#	WHITE, BLACK, RED, GREEN, BLUE, CYAN, YELLOW, LWHITE, LBLACK,
#	GREY, LRED, LGREEN, LBLUE, LCYAN, LYELLOW, LMAGENTA
#
#	Medium resolution colors available w/o 3D Emulation in 4 colors:
#	WHITE, BLACK, RED, GREEN
#
#	Medium resolution colors available w/ 3D Emulation in 4 colors:
#	WHITE, BLACK, GREY, LWHITE
#
#	I know that LWHITE doesn't make sense.  I didn't make it that
#	way, VDI did.  This color is a shade between GREY and WHITE.
#	LBLACK and GREY both point to exactly the same color.  It made
#	more sense to put a GREY in there instead of an LBLACK.
#
#####################################################################

#####################################################################
#
# 	Allow left border moving like WinX
#	[LEFT_BORDER_MOVE=(TRUE/FALSE)]
#
#	This lets you move windows off of the left side of the desktop
#	like WinX lets you do with normal windows.
#
#	Default value: LEFT_BORDER_MOVE=TRUE
#
#####################################################################
#
#	Stay compatible with all of WinX's messages (trap illegals)
#	[WINX_COMPATIBILITY=(TRUE/FALSE)]
#
#	This also means that if the mouse is over a non-custom window,
#	no right-mouse button popup handling is handled unless the button
#	is over either the desktop, or a custom window.
#
#	Default value: WINX_COMPATIBILITY=TRUE
#
#####################################################################
#
#	Change mouse when activating window element
#	[CHANGE_MOUSE_ELEMENT=(TRUE/FALSE)]
#
#	This mode changes the mouse form when your mouse selects a custom
#	window element.  This only changes when you select this.
#
#	Default value: CHANGE_MOUSE_ELEMENT=TRUE
#
#####################################################################
#
#	Window center technique.  This action only takes place if a
#	window is created with -1 coordinates for centering.
#
#	SCREEN_CENTER is to the visual coordinates of the screen.  This
#	takes into any programs that may enlarge screen coordinates
#	or viewing area.
#
#	PHYSICAL_CENTER is to the physical screen coordinates.  This does
#	not take into account any chance that you may be running a
#	virtual screen enlarger.
#
#	MOUSE_CENTER centers any windows to the mouse.
#
#	[WINDOW_CENTER=(SCREEN_CENTER/PHYSICAL_SCREEN/MOUSE_CENTER)]
#
#	Default value: WINDOW_CENTER=SCREEN_CENTER
#
#####################################################################
#
#	Active redrawing of windows.  This is a flag that tells whether
#	you allow active redrawing windows or not.  This flag is only
#	available if you are running WinX.  If the user is not running
#	WinX, active redraw is not available no matter what.  This will
#	eventually change, though.
#
#	[ACTIVE_WINDOW_REDRAW=(TRUE/FALSE)]
#
#	Default value: ACTIVE_WINDOW_REDRAW=TRUE
#
#####################################################################
#
#	Modalize dialogs if windows cannot be drawn.  This limits you to
#	close the dialog since modal dialogs for TOS are blocking.  This
#	is not a forced option, and can be done only if you need it to
#	be done.  I recommend it be turned off.
#
#	[MODALIZE_WINDOWS=(TRUE/FALSE)]
#
#	Default value: MODALIZE_WINDOWS=FALSE
#
#####################################################################
#
#	Geneva compatibility mode.  True enables fixing of some Geneva
#	bugs that Dan Wilga won't admit, and also fixes some other
#	nasty bugs that Geneva and NeoDesk like to cause.  (This is
#	usually default, since it's only used if the 'Gnva' cookie is
#	found.)
#
#	[GENEVA_COMPATIBILITY=(TRUE/FALSE)]
#
#	Default value: GENEVA_COMPATIBILITY=TRUE
#
#####################################################################
#
#	Inactive window text color.  This sets the color of the inactive
#	window text.
#
#	[INACTIVE_WINDOW_TEXT=(YOUR_COLOR)]
#
#	Default value: INACTIVE_WINDOW_TEXT=WHITE
#	In monochrome mode, the default is WHITE.
#
#####################################################################
#
#	Active window text color.  This is the color of the title bar
#	text when it becomes active.
#
#	[ACTIVE_WINDOW_TEXT=(YOUR_COLOR)]
#
#	Default value: ACTIVE_WINDOW_TEXT=BLACK
#	In monochrome mode, the default is BLACK.
#
#####################################################################
#
#	Backgroundability.  This enables you to make windows accept
#	"background" clicks, meaning that a window does not have to be
#	topped in order to receive a command click.  Keep in mind that
#	this is only for program-made windows.  Some windows that were
#	made by XAES are permanently backgroundable, so this option will
#	not override XAES, just programs made with this.
#
#	[BACKGROUNDABILITY=(TRUE/FALSE)]
#
#	Default value: BACKGROUNDABILITY=TRUE
#
#####################################################################
#
#	Change mouse for when moved over different window elements.  This
#	makes the mouse change to a different shape representing the
#	function of a window element.
#
#	With MultiTOS (or as an accessory), when the mouse is moved over
#	no window, it becomes an arrow.
#
#	Without MultiTOS, the mouse becomes an "X" when moved over the
#	desktop area.
#
#	[AUTO_CHANGE_MOUSE=(TRUE/FALSE)]
#
#	Default value: AUTO_CHANGE_MOUSE=TRUE
#
#####################################################################
#
#	Press-in objects when selected for window elements.  This will
#	select an object if it's being used.  If the object is not, or
#	the button is released, it will pop it back out.  Quite a nice
#	feature that was presented in quite a few window managers for
#	Linux.  I felt it was my job to put them in here as well.  :-)
#
#	[ELEMENT_SELECTION=(TRUE/FALSE)]
#
#	Default value: ELEMENT_SELECTION=TRUE
#
#####################################################################

**************************************************** Extended Objects

#####################################################################
#
#	Force InterFace drawing emulation of whitened object (1 pixel out)
#	[FORCE_INTERFACE_EMULATION=(TRUE/FALSE)]
#
#	Default value: FORCE_INTERFACE_EMULATION=FALSE
#
#####################################################################
#
#	Current drawing style (can be switched between 6 different ones)
#	[3D_DRAW_STYLE=(Standard/MultiTOS/Geneva/Zoom/Motif/LTMF/XAES)]
#
#	3D settings are as follows:
#
#	Standard = Standard (non-3D) drawing style (black activates obj)
#	MultiTOS = MultiTOS (and Falcon030 3D TOS) drawing style
#	Geneva   = Geneva multitasking operating system object drawing
#	Zoom     = Olaf Meisiek's Zoom! Color icon editor 3D style
#	Motif    = X11R6 drawing style (throw off of the popular style)
#	           Note: Motif is not available in Monochrome, and it
#	           defaults to Zoom if it is used in 2 color mode.
#	LTMF     = Let 'em Fly 1.30's pre-designed object drawing style
#	XAES     = Our own XAES designed drawing style
#
#	Default value: 3D_DRAW_STYLE=Zoom
#
#####################################################################
#
#	Rounded objects.  This is for selectable objects that appear as
#	3D objects.  This makes the objects look a little better, and it
#	makes them look more like Windows objects.  What fun.  :-P
#
#	[ROUNDED_OBJECTS=(TRUE/FALSE)]
#
#	Default value: ROUNDED_OBJECTS=FALSE
#
#####################################################################
#
#	Rounded shadowing.  This is for objects that have shadowed bits
#	enabled.  (Thought it would be a good idea, anyway.  :-)
#
#	[ROUNDED_SHADOW=(TRUE/FALSE)]
#
#	Default value: ROUNDED_SHADOW=FALSE
#
#####################################################################
#
#	Hotkey underlining color (if this is other than white, it will
#	appear as the specified color: BLACK or RED.  If you are using
#	two-color mode, the default is BLACK unless WHITE is specified.)
#
#	Under medium resolution with 3D medium resolution color changes,
#	this defaults to BLACK.
#
#	[UNDERLINE_COLOR=(BLACK/RED/WHITE)]
#
#	Default value: UNDERLINE_COLOR=RED
#	In monochrome, this automatically defaults to BLACK.
#
#####################################################################
#
#	Change mouse shape if it encounters a slider.  Horizontal and
#	vertical sliders show both left-and-right arrows, and up-and-down
#	arrows.  (Almost reminds you of Geneva, but not quite...  Thank
#	God!  :-)
#
#	[SLIDER_MOUSE_CHANGE=(TRUE/MOUSE)]
#
#	Default value: SLIDER_MOUSE_CHANGE=TRUE
#
#####################################################################
#
#	This setting lets you have the 'niceline' setting to be either
#	a solid line, or dashed line.  ENABLED=TRUE means that the setting
#	is a dashed line.  FALSE is a solid line.
#
#	[NICELINE_ENABLED=(TRUE/FALSE)]
#
#	Default value: NICELINE_ENABLED=TRUE
#
#####################################################################
#
#	Display 3D type objects with a hatched fill for display
#	compatibility in high (2 color) resolution.
#
#	[DRAW3D_COMPATIBILITY=(TRUE/FALSE)]
#
#	Default value: DRAW3D_COMPATIBILITY=TRUE
#
#####################################################################
#
#	Use the extended Medium Resolution color palette for the 3D look
#	in medium resolution.  This automatically checks for the STe
#	system (since we run one) and makes things easier on your part.
#	Only use this setting if you REALLY want to get the colour
#	palette changed to a different setting (but don't worry, it
#	changes it back after the program exits!)
#
#	[MEDIUM_EMULATION=(TRUE/FALSE)]
#
#	Default value: MEDIUM_EMULATION=TRUE
#
#####################################################################

************************************************* Configurable colors

#####################################################################
#
#	These are the hatching types for the windows that can be set.
#
#	SIZER_UL	- The upper left hand sizer gadget
#	SIZER_TOP	- The top sizer gadget
#	SIZER_UR	- The upper right hand sizer gadget
#	SIZER_RIGHT	- The right hand sizer gadget
#	SIZER_LR	- The lower left hand sizer gadget
#	SIZER_BOT	- The bottom sizer gadget
#	SIZER_LL	- The lower left hand sizer gadget
#	SIZER_LEFT	- The left hand sizer gadget
#	MOVER		- The window mover bar
#
#	GADGET_NAME=[(FILLS)]
#
#	These can be colored, and stay this color even when the focus
#	is lost for the window.
#
#	HOR_SLIDER	- The horizontal window slider
#	HOR_TRACK	- The horizontal window track
#	VER_SLIDER	- The vertical window slider
#	VER_TRACK	- The vertical window track
#
#	GADGET_NAME=[(COLORS)],[(FILLS)]
#
#	Hatched fill ranges are from 0 to 8, 0 being the lightest, and
#	8 being a solid fill (just like VDI)
#
#####################################################################
#
#	These are the default colors for all of the elements in a window
#	when they are on the top focus or in the background.
#
#	TOPPED_FOCUS=[(COLOR)]
#	UNTOPPED_FOCUS=[(COLOR)]
#
#	In monochrome mode, the colors automatically default to:
#
#	TOPPED_FOCUS=BLACK
#	UNTOPPED_FOCUS=WHITE
#
#	In 16 color mode, they default to:
#
#	TOPPED_FOCUS=RED
#	UNTOPPED_FOCUS=BLUE
#
#####################################################################
#
#	Shading colors for Zoom, Motif, MultiTOS, and Geneva 3D looks.
#	These can all be manipulated seperately, or they can be global
#	colors.
#
#	SHADE_LOWER_PART	- The lower part of the shade
#	SHADE_UPPER_PART	- The upper part of the shade
#	SHADE_FILL			- The color of the inside of the object
#
#	Shading colors are the range of 16 colors that can be used, and
#	the names of the shading conventions can be:
#
#	ZOOM, MOTIF, MULTITOS, GENEVA, or ALL.
#
#	SHADE_NAME=[(COLOR)] , [(NAME CONVENTION)]
#
#	Defaults are:
#	For 4/16 color mode:
#
#	SHADE_LOWER_PART=GREY,ALL
#	SHADE_UPPER_PART=WHITE,ALL
#	SHADE_FILL=LWHITE,ALL
#
#	For 2 color mode:
#
#	SHADE_LOWER_PART=BLACK,ALL
#	SHADE_UPPER_PART=WHITE,ALL
#	SHADE_FILL=LWHITE,ALL
#
#####################################################################

[ STANDARD XAES WINDOW SETTINGS ]
LEFT_BORDER_MOVE=TRUE			' Allow left border movement
WINX_COMPATIBILITY=TRUE			' Right-mouse button WinX compatible
CHANGE_MOUSE_ELEMENT=TRUE		' Change mouse element on special win
WINDOW_CENTER=SCREEN_CENTER		' Centering type
MODALIZE_WINDOWS=FALSE			' Modalize dialogs if windows unavail.
ACTIVE_WINDOW_REDRAW=TRUE		' Active redrawing of windows
GENEVA_COMPATIBILITY=TRUE		' Enable Geneva compatibility
INACTIVE_WINDOW_TEXT=WHITE		' Inactive window text is white
ACTIVE_WINDOW_TEXT=BLACK		' Active window text is black
BACKGROUNDABILITY=TRUE			' Enable window backgrounding
AUTO_CHANGE_MOUSE=TRUE			' Change mouse for window elements
ELEMENT_SELECTION=TRUE			' Press-in selected element

[ STANDARD XAES ENHANCEMENT SETTINGS ]
FORCE_INTERFACE_EMULATION=TRUE	' Force interface object emulation
3D_DRAW_STYLE=Zoom				' 3D drawing style
ROUNDED_OBJECTS=FALSE			' Windoze-type rounded objects
ROUNDED_SHADOW=FALSE			' Rounded shadowing (non-Windoze!)
UNDERLINE_COLOR=RED				' Color of hotkey activation key
SLIDER_MOUSE_CHANGE=TRUE		' Change mouse form on sliders
NICELINE_ENABLED=TRUE			' Shade out nicelines
DRAW3D_COMPATIBILITY=TRUE		' 3D appearance in two-color mode
MEDIUM_EMULATION=FALSE			' Medium res. 3D Color emulation

[ If you don't like some of these colors, CHANGE 'EM!  :-]

[ CONFIGURABLE ELEMENTS ]
SIZER_UL=8						' These are some things that FVWM,
SIZER_TOP=5						' OpenLook, CTWM, TWM, MWM, and all
SIZER_UR=8						' of the programs for the Atari ST
SIZER_RIGHT=5					' line cannot configure.  This is a
SIZER_LR=8						' first (maybe a last?) for the Atari
SIZER_BOT=5						' and is an original.  Sort of.
SIZER_LL=8
SIZER_LEFT=5
MOVER=2

HOR_SLIDER=WHITE,0				' ARGH!  You can change the colors
HOR_TRACK=BLUE,5				' of the sliders!  I may change it so
VER_SLIDER=WHITE,0				' you can change colors of elements,
VER_TRACK=BLUE,5				' but not right now.  :-)

[ CONFIGURABLE COLORS -> 3D ]
SHADE_LOWER_PART=GREY,ALL		' These are defaults if they are not
SHADE_UPPER_PART=WHITE,ALL		' in here.  These can be commented
SHADE_FILL=LWHITE,ALL			' out if you so desire.

[ WINDOW FOCUS COLORS ]
TOPPED_FOCUS=RED				' Ghee, don't these remind you of
UNTOPPED_FOCUS=BLUE				' FVWM for Linux?  :-)
