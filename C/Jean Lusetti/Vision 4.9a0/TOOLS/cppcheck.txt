D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\CATALOG.C:1687:34: warning: Condition 'mfdb_conv->fd_nplanes>8' is always false [knownConditionTrueFalse]
      if ( mfdb_conv->fd_nplanes > 8 ) inf_conv.lformat = IID_JPEG ;
                                 ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\CATALOG.C:1683:27: note: mfdb_conv->fd_nplanes is assigned value -1
    mfdb_conv->fd_nplanes = -1 ; /* Conserver le nombre de plans */
                          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\CATALOG.C:1687:34: note: Condition 'mfdb_conv->fd_nplanes>8' is always false
      if ( mfdb_conv->fd_nplanes > 8 ) inf_conv.lformat = IID_JPEG ;
                                 ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\GWINDOWS.C:991:9: warning: Possible null pointer dereference: last_gwnd [nullPointer]
        last_gwnd->OnMouseMove && !last_gwnd->KnowMouseIsOut )
        ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\GWINDOWS.C:954:34: note: Assignment 'last_gwnd=(void*)0', assigned value is 0
  static GEM_WINDOW* last_gwnd = NULL ;
                                 ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\GWINDOWS.C:991:9: note: Null pointer dereference
        last_gwnd->OnMouseMove && !last_gwnd->KnowMouseIsOut )
        ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JCMARKER.C:134:27: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
  emit_byte(cinfo, (value >> 8) & 0xFF);
                          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JCMASTER.C:55:27: warning: Checking if unsigned expression 'cinfo->image_height' is less than zero. [unsignedLessThanZero]
  if (cinfo->image_height <= 0 || cinfo->image_width <= 0
                          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JCMASTER.C:55:54: warning: Checking if unsigned expression 'cinfo->image_width' is less than zero. [unsignedLessThanZero]
  if (cinfo->image_height <= 0 || cinfo->image_width <= 0
                                                     ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDAPISTD.C:133:23: warning: Variable 'cinfo->global_state' is reassigned a value before the old one has been used. [redundantAssignment]
  cinfo->global_state = cinfo->raw_data_out ? DSTATE_RAW_OK : DSTATE_SCANNING;
                      ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDAPISTD.C:101:25: note: cinfo->global_state is assigned
    cinfo->global_state = DSTATE_PRESCAN;
                        ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDAPISTD.C:133:23: note: cinfo->global_state is overwritten
  cinfo->global_state = cinfo->raw_data_out ? DSTATE_RAW_OK : DSTATE_SCANNING;
                      ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDHUFF.C:454:13: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
  { 0, ((-1)<<1) + 1, ((-1)<<2) + 1, ((-1)<<3) + 1, ((-1)<<4) + 1,
            ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDHUFF.C:455:10: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    ((-1)<<5) + 1, ((-1)<<6) + 1, ((-1)<<7) + 1, ((-1)<<8) + 1,
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDHUFF.C:456:10: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    ((-1)<<9) + 1, ((-1)<<10) + 1, ((-1)<<11) + 1, ((-1)<<12) + 1,
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDHUFF.C:457:10: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    ((-1)<<13) + 1, ((-1)<<14) + 1, ((-1)<<15) + 1 };
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDHUFF.C:457:42: warning: Shifting signed 16-bit value by 15 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    ((-1)<<13) + 1, ((-1)<<14) + 1, ((-1)<<15) + 1 };
                                         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDMARKER.C:909:38: warning: The statement 'if (cinfo->marker->discarded_bytes!=0) cinfo->marker->discarded_bytes=0' is logically equivalent to 'cinfo->marker->discarded_bytes=0'. [duplicateConditionalAssign]
  if (cinfo->marker->discarded_bytes != 0) {
                                     ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDMARKER.C:911:36: note: Assignment 'cinfo->marker->discarded_bytes=0'
    cinfo->marker->discarded_bytes = 0;
                                   ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDMARKER.C:909:38: note: Condition 'cinfo->marker->discarded_bytes!=0' is redundant
  if (cinfo->marker->discarded_bytes != 0) {
                                     ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDMARKER.C:269:27: warning: Checking if unsigned expression 'cinfo->image_height' is less than zero. [unsignedLessThanZero]
  if (cinfo->image_height <= 0 || cinfo->image_width <= 0
                          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDMARKER.C:269:54: warning: Checking if unsigned expression 'cinfo->image_width' is less than zero. [unsignedLessThanZero]
  if (cinfo->image_height <= 0 || cinfo->image_width <= 0
                                                     ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDMARKER.C:1196:14: warning: Variable 'action' is assigned a value that is never used. [unreadVariable]
  int action = 1;
             ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDPHUFF.C:214:13: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
  { 0, ((-1)<<1) + 1, ((-1)<<2) + 1, ((-1)<<3) + 1, ((-1)<<4) + 1,
            ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDPHUFF.C:215:10: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    ((-1)<<5) + 1, ((-1)<<6) + 1, ((-1)<<7) + 1, ((-1)<<8) + 1,
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDPHUFF.C:216:10: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    ((-1)<<9) + 1, ((-1)<<10) + 1, ((-1)<<11) + 1, ((-1)<<12) + 1,
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDPHUFF.C:217:10: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    ((-1)<<13) + 1, ((-1)<<14) + 1, ((-1)<<15) + 1 };
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDPHUFF.C:496:17: warning: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
  int m1 = (-1) << cinfo->Al; /* -1 in the bit position being coded */
                ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JDPHUFF.C:217:42: warning: Shifting signed 16-bit value by 15 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    ((-1)<<13) + 1, ((-1)<<14) + 1, ((-1)<<15) + 1 };
                                         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:320:15: warning: Either the condition 'hdr_ptr==((void*)0)' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  data_ptr += hdr_ptr->hdr.bytes_used; /* point to place for object */
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:288:15: note: Assuming that condition 'hdr_ptr==((void*)0)' is not redundant
  if (hdr_ptr == NULL) {
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:320:15: note: Null pointer dereference
  data_ptr += hdr_ptr->hdr.bytes_used; /* point to place for object */
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:321:3: warning: Either the condition 'hdr_ptr==((void*)0)' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  hdr_ptr->hdr.bytes_used += sizeofobject;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:288:15: note: Assuming that condition 'hdr_ptr==((void*)0)' is not redundant
  if (hdr_ptr == NULL) {
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:321:3: note: Null pointer dereference
  hdr_ptr->hdr.bytes_used += sizeofobject;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:322:3: warning: Either the condition 'hdr_ptr==((void*)0)' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  hdr_ptr->hdr.bytes_left -= sizeofobject;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:288:15: note: Assuming that condition 'hdr_ptr==((void*)0)' is not redundant
  if (hdr_ptr == NULL) {
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:322:3: note: Null pointer dereference
  hdr_ptr->hdr.bytes_left -= sizeofobject;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:370:3: warning: Either the condition 'hdr_ptr==((void*)0)' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  hdr_ptr->hdr.next = mem->large_list[pool_id];
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:365:15: note: Assuming that condition 'hdr_ptr==((void*)0)' is not redundant
  if (hdr_ptr == NULL)
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:370:3: note: Null pointer dereference
  hdr_ptr->hdr.next = mem->large_list[pool_id];
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:374:3: warning: Either the condition 'hdr_ptr==((void*)0)' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  hdr_ptr->hdr.bytes_used = sizeofobject;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:365:15: note: Assuming that condition 'hdr_ptr==((void*)0)' is not redundant
  if (hdr_ptr == NULL)
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:374:3: note: Null pointer dereference
  hdr_ptr->hdr.bytes_used = sizeofobject;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:375:3: warning: Either the condition 'hdr_ptr==((void*)0)' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  hdr_ptr->hdr.bytes_left = 0;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:365:15: note: Assuming that condition 'hdr_ptr==((void*)0)' is not redundant
  if (hdr_ptr == NULL)
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:375:3: note: Null pointer dereference
  hdr_ptr->hdr.bytes_left = 0;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1068:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.alloc_small = alloc_small;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1068:3: note: Null pointer dereference
  mem->pub.alloc_small = alloc_small;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1069:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.alloc_large = alloc_large;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1069:3: note: Null pointer dereference
  mem->pub.alloc_large = alloc_large;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1070:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.alloc_sarray = alloc_sarray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1070:3: note: Null pointer dereference
  mem->pub.alloc_sarray = alloc_sarray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1071:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.alloc_barray = alloc_barray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1071:3: note: Null pointer dereference
  mem->pub.alloc_barray = alloc_barray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1072:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.request_virt_sarray = request_virt_sarray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1072:3: note: Null pointer dereference
  mem->pub.request_virt_sarray = request_virt_sarray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1073:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.request_virt_barray = request_virt_barray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1073:3: note: Null pointer dereference
  mem->pub.request_virt_barray = request_virt_barray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1074:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.realize_virt_arrays = realize_virt_arrays;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1074:3: note: Null pointer dereference
  mem->pub.realize_virt_arrays = realize_virt_arrays;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1075:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.access_virt_sarray = access_virt_sarray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1075:3: note: Null pointer dereference
  mem->pub.access_virt_sarray = access_virt_sarray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1076:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.access_virt_barray = access_virt_barray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1076:3: note: Null pointer dereference
  mem->pub.access_virt_barray = access_virt_barray;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1077:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.free_pool = free_pool;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1077:3: note: Null pointer dereference
  mem->pub.free_pool = free_pool;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1078:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.self_destruct = self_destruct;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1078:3: note: Null pointer dereference
  mem->pub.self_destruct = self_destruct;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1081:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.max_alloc_chunk = MAX_ALLOC_CHUNK;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1081:3: note: Null pointer dereference
  mem->pub.max_alloc_chunk = MAX_ALLOC_CHUNK;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1084:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.max_memory_to_use = max_to_use;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1084:3: note: Null pointer dereference
  mem->pub.max_memory_to_use = max_to_use;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1090:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->virt_sarray_list = NULL;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1090:3: note: Null pointer dereference
  mem->virt_sarray_list = NULL;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1091:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->virt_barray_list = NULL;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1091:3: note: Null pointer dereference
  mem->virt_barray_list = NULL;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1093:3: warning: Either the condition 'mem==((void*)0)' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->total_space_allocated = SIZEOF(my_memory_mgr);
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1062:11: note: Assuming that condition 'mem==((void*)0)' is not redundant
  if (mem == NULL) {
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:1093:3: note: Null pointer dereference
  mem->total_space_allocated = SIZEOF(my_memory_mgr);
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:319:32: warning: Either the condition 'hdr_ptr==((void*)0)' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
  data_ptr = (char *) (hdr_ptr + 1); /* point to first data byte in pool */
                               ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:288:15: note: Assuming that condition 'hdr_ptr==((void*)0)' is not redundant
  if (hdr_ptr == NULL) {
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:319:32: note: Null pointer addition
  data_ptr = (char *) (hdr_ptr + 1); /* point to first data byte in pool */
                               ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:378:32: warning: Either the condition 'hdr_ptr==((void*)0)' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
  return (void FAR *) (hdr_ptr + 1); /* point to first data byte in pool */
                               ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:365:15: note: Assuming that condition 'hdr_ptr==((void*)0)' is not redundant
  if (hdr_ptr == NULL)
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\JPEG\JMEMMGR.C:378:32: note: Null pointer addition
  return (void FAR *) (hdr_ptr + 1); /* point to first data byte in pool */
                               ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\NUMSLD.C:125:34: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
  else                           sscanf( buf, "%d(%s)", &val, tmp ) ;
                                 ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1398:31: warning: The address of local variable 'pixel' is accessed at non-zero index. [objectIndex]
          *pt_img++ = pt_pixel[1] ;
                              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1382:49: note: Address of variable taken here.
    unsigned char *pt_pixel = (unsigned char *) &pixel ; /* --> 0RVB */
                                                ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1398:31: note: The address of local variable 'pixel' is accessed at non-zero index.
          *pt_img++ = pt_pixel[1] ;
                              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1399:31: warning: The address of local variable 'pixel' is accessed at non-zero index. [objectIndex]
          *pt_img++ = pt_pixel[2] ;
                              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1382:49: note: Address of variable taken here.
    unsigned char *pt_pixel = (unsigned char *) &pixel ; /* --> 0RVB */
                                                ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1399:31: note: The address of local variable 'pixel' is accessed at non-zero index.
          *pt_img++ = pt_pixel[2] ;
                              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1400:31: warning: The address of local variable 'pixel' is accessed at non-zero index. [objectIndex]
          *pt_img++ = pt_pixel[3] ;
                              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1382:49: note: Address of variable taken here.
    unsigned char *pt_pixel = (unsigned char *) &pixel ; /* --> 0RVB */
                                                ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\RASTEROP.C:1400:31: note: The address of local variable 'pixel' is accessed at non-zero index.
          *pt_img++ = pt_pixel[3] ;
                              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XALLOC.C:625:8: warning: Array 'ptr[128]' accessed at index 128, which is out of bounds. [arrayIndexOutOfBounds]
    ptr[128] = '*' ;
       ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XALLOC.C:559:20: warning: Memory pointed to by 'puser' is freed twice. [doubleFree]
      if ( usize ) Xfree( puser ) ; /* If usize=0, already freed previously */
                   ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XALLOC.C:528:26: note: Memory pointed to by 'puser' is freed twice.
  else if ( usize == 0 ) Xfree(puser) ;
                         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XALLOC.C:559:20: note: Memory pointed to by 'puser' is freed twice.
      if ( usize ) Xfree( puser ) ; /* If usize=0, already freed previously */
                   ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XALLOC.C:638:3: warning: Memory leak: ptr [memleak]
  return 0 ;
  ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XFILE.C:633:7: warning: %ld in format string (no. 1) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
      sprintf( fname, "%ld.tst", file_sizes[s] ) ;
      ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XGEM.C:1782:12: warning: Condition 'max' is always true [knownConditionTrueFalse]
      if ( max ) pc = (short) ((100L*(current >> 7))/max) ;
           ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XGEM.C:1775:8: note: Assuming that condition 'max' is not redundant
  if ( max )
       ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XGEM.C:1781:17: note: Assignment 'max=max>>7', assigned value is 0
      max = max >> 7 ;
                ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XGEM.C:1782:12: note: Condition 'max' is always true
      if ( max ) pc = (short) ((100L*(current >> 7))/max) ;
           ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: warning: Returning pointer to local variable 'object' that will be invalid when returning. [returnDanglingLifetime]
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:322:15: note: Address of variable taken here.
   the_addr = &all_ptr.object->ob_spec;
              ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:288:11: note: Variable created here.
  OBJECT *object;
          ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: note: Returning pointer to local variable 'object' that will be invalid when returning.
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:383:7: warning: Local variable 'tmpnam' shadows outer function [shadowFunction]
 BYTE tmpnam[128];
      ^
D:\app\EasyMint\host_fs\PURE_C\INCLUDE\stdio.h:119:10: note: Shadowed declaration
char    *tmpnam( char *s );
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:383:7: note: Shadow variable
 BYTE tmpnam[128];
      ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: warning: Returning pointer to local variable 'tedinfo' that will be invalid when returning. [returnDanglingLifetime]
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:329:16: note: Address of variable taken here.
    the_addr = &all_ptr.tedinfo->te_pvalid;
               ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:289:12: note: Variable created here.
  TEDINFO *tedinfo;
           ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: note: Returning pointer to local variable 'tedinfo' that will be invalid when returning.
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: warning: Returning pointer to local variable 'tedinfo' that will be invalid when returning. [returnDanglingLifetime]
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:331:16: note: Address of variable taken here.
    the_addr = &all_ptr.tedinfo->te_ptmplt;
               ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:289:12: note: Variable created here.
  TEDINFO *tedinfo;
           ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: note: Returning pointer to local variable 'tedinfo' that will be invalid when returning.
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: warning: Returning pointer to local variable 'iconblk' that will be invalid when returning. [returnDanglingLifetime]
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:338:16: note: Address of variable taken here.
    the_addr = &all_ptr.iconblk->ib_pdata;
               ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:290:12: note: Variable created here.
  ICONBLK *iconblk;
           ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: note: Returning pointer to local variable 'iconblk' that will be invalid when returning.
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: warning: Returning pointer to local variable 'iconblk' that will be invalid when returning. [returnDanglingLifetime]
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:340:16: note: Address of variable taken here.
    the_addr = &all_ptr.iconblk->ib_ptext;
               ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:290:12: note: Variable created here.
  ICONBLK *iconblk;
           ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\XRSRC.C:363:10: note: Returning pointer to local variable 'iconblk' that will be invalid when returning.
 return (the_addr);
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\aupdate.c:165:10: warning: %lu in format string (no. 2) requires 'unsigned long *' but the argument type is 'size_t * {aka unsigned long *}'. [invalidScanfArgType_int]
    if ( sscanf( buf, "%s %lu %s", filename, &url_filesize, url_str_sha256 ) == 3 )
         ^
D:\app\EasyMint\host_fs\PURE_C\PROJECTS\TOOLS\aupdate.c:165:10: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
    if ( sscanf( buf, "%s %lu %s", filename, &url_filesize, url_str_sha256 ) == 3 )
         ^
nofile:0:0: warning: Cppcheck cannot find all the include files (use --check-config for details) [missingIncludeSystem]

