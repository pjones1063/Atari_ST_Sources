Notes regarding codec error handling:

Problem:
zView has no protocol for reporting errors from inside a codec.
It uses a very simple pass or fail scheme. A codec returns true or false
regardless of the error. The codec knows exactly what caused the error, but
has no way to send this information back to zView. There's also no simple
way to display an error message as the codec is not allowed to call the AES.

The results are normally this when a codec encounters an error:
1) Progress bar option on:  progress dialog appears for a second and vanishes
2) Progress bar option off: appears to ingore your request to load a file

In either case the file isn't loaded, nor is the user informed as to why.
This can be very confusing if not frustrating.

Solution:
If the codec detects an error and this file is found in the codec path,
then Salert() is called to report the error from inside the codec.

To clarify:
This file doesn't exist: Salert() isn't called, user is left wondering
This file does exist: Salert() is called by the codec with and error message

Configuration:
To disable this feature: rename this file "salert.off"
To enable this feature:  rename this file "salert.txt"

AES issues:
XaAES: alert is displayed and/or logged depending on XaAES configuration
N.AES: requires additional app to display alert and/or log Salert() calls
       install NEWALERT.ACC from your N.AES master disk
MyAES: not tested

Comments:
Calling Salert() for this purpose might be seen as abusing the function, thus
the on/off option.

This works because the AES is calling form_alert() for the codec and not
the codec calling it itself.

eof

