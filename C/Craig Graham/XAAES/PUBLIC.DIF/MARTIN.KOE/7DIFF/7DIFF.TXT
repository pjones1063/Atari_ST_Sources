
Hi all!

Here's another set of patches:

objects.c, objects.h, many *.c:
   BUGFIX:
   Changed parameter list for set_clip() from `x1,y1,x2,y2' to `x,y,w,h'.
   Changing all set_clip() calls accordingly removed many of the `+1'
   errors, and saved a few bytes, too.
objects.c:
   clear_clip() now doesn't really turn clipping off but only sets the
   clipping rectangle to the entire screen - this is safer since
   otherwise memory areas outside the screen might be overwritten by
   buggy code! (Probably depending on function called and VDI version...)
rectlist.c:
   BUGFIX:
   Since the redraw problems had actually gotten *worse* after the
   set_clip() changes (some bugs had apparently cancelled each other),
   I first replaced rc_intersect() with a time-proven version; but this
   wasn't the problem...
   (I kept the new version because it's more readable and actually
   about 50 bytes shorter than the original. :-))
   The *real* bugs were in generate_rect_list(): after removing
   several instances of `-1'/`+1', redraws work *much* better now...
   (There are still a few problems - I suspect bugs in the calculation
   of window work/border areas...)
shellwrt.c, new_clnt.c, bootup.c:
   BUGFIX:
   shel_write() used to free the command line and the command
   tail - much too early!
   Moved this to XA_client_exit().
wind_fns.c:
   Added test-and-set-mode to wind_update() (BEG_UPDATE|0x100,
   BEG_MCTRL|0x100); would somebody please try this out? ;-)
appl_ini.c:
   EXPERIMENTAL:
   Put AES version number 1.4 (instead of 4.1) into global[] array;
   possibly some programs are crashing because they expect MTOS (AES 4.x)
   features to be present that are not yet implemented???
getinfo.c:
   Some changes to info_tab[]:
   - mode 4: indicate that appl_search() is implemented
   - mode 10: indicate shel_write() modes supported
   - mode 11: indicate `wind_update() check and set present'
getinfo.c:
   BUGFIX:
   appl_find(NULL) should returns the AES process id of current
   process, *not* the menu bar owner - at least according to all
   documentation I have access to.
getinfo.c:
   appl_find("?AGI") now returns 0, indicating that appl_getinfo()
   is understood by the current AES - normally this function is
   only present in AES versions >= 4.0 (i.e. MTOS; old AES versions
   display an "Illegal Function" alert instead).
   The "?AGI" feature was invented by Martin Osieka for his
   AES extension WINX, which adds appl_getinfo() (and other
   things) to "old" AES versions; MagiC 4.0 (AES 3.99!) supports
   "?AGI", too.
   The proper way of checking for the presence of appl_getinfo()
   is:
   `has_appl_getinfo = (global[0]>=0x400) || (appl_find("?AGI")==0) ;'
appl_ini.c, c_window.c, new_clnt.c:
   Replaced direct accesses to clients[] array by Pid2Client() calls.

Martin
