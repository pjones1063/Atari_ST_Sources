Received: from cheviot.ncl.ac.uk (cheviot.ncl.ac.uk [128.240.2.10]) by burnmoor.ncl.ac.uk (8.6.12/8.6.10-cf revision 2 for Solaris 2.x) with ESMTP id HAA11735; Fri, 23 Feb 1996 07:51:43 GMT
Received: from tellus.thn.htu.se by cheviot.ncl.ac.uk id <HAA18836@cheviot.ncl.ac.uk>
  (8.6.12/ for ncl.ac.uk) with SMTP; Fri, 23 Feb 1996 07:54:22 GMT
Received: from rand.thn.htu.se.noname by tellus.thn.htu.se with smtp
	(Smail3.1.28.1 #1) id m0tpsFy-0002fJC; Fri, 23 Feb 96 08:49 NFT
Received: by rand.thn.htu.se.noname (4.1/SMI-4.1)
	id AA01874; Fri, 23 Feb 96 08:45:46 GMT
Resent-Date: Fri, 23 Feb 96 8:48:49 MEZ
Old-Return-Path: <binder@rbg.informatik.th-darmstadt.de>
Message-Id: <9602230845.AA01861@rand.thn.htu.se.noname>
From: Thomas Binder aka Gryf <binder@rbg.informatik.th-darmstadt.de>
Subject: My stuff
To: xaaes@rand.thn.htu.se
Date: Fri, 23 Feb 96 8:48:49 MEZ
Reply-To: binder@rbg.informatik.th-darmstadt.de
Mailer: Elm [revision: 70.85.1.76]
Resent-Message-Id: <"lB8Pb3.0.FT.wwNBn"@rand.thn.htu.se>
Resent-From: xaaes@rand.thn.htu.se
X-Mailing-List: <xaaes@rand.thn.htu.se> archive/latest/46
X-Loop: xaaes@rand.thn.htu.se
Precedence: list
Resent-Sender: xaaes-request@rand.thn.htu.se
Content-Type: text
Content-Length: 5471
X-Status: A
Status: RO
X-UIDL: 825364315.027

Hi there!


First, excuse me if some of the things I post here have already been 
done by others, but I haven't checked my mail since tuesday.

XaAES beta 2 was the first version I was able to install, and it looks 
very interesting. But to be honest, I should rather be called alpha 
instead of beta (no offense, Craig, good work!)

I created some diffs relative to XaAES beta 2. They are too long to be 
posted here, so I sent them directly to Craig. If you want them, too, 
mail me. I've done the following stuff (maybe even more, I haven't 
noted every little step):

- all(?) files:
  Port to Pure C, it is not 100% complete, but it already runs nearly 
  as stable as the original Lattice version. I had to do many changes 
  (especially I had to convert all //-comments into standard C-
  comments), but I hope they don't influence compiling with Lattice C.
- many files:
  While I was porting, I added many missing #include-statements (no 
  "Missing prototype"-messages any more). I also fixed a bug in a 
  typedef (don't know what it was right now, look at the diffs).
- bootup.c
  The error message that MiNT is not installed is now written to the 
  console, because xaaes is a .tos, and the necessary initialisations 
  for using do_form_alert haven't been done at this time.
- wind_fns.c, xa_globl.h:
  I added support for nested wind_update-calls (at least I think this 
  wasn't correct before, because one END_xxxx-call would have released 
  the lock even if there had been 2 or more BEGIN_xxxx-calls).
- shell_wrt.c:
  shel_write now works if the drive specification is in uppercase -> 
  Thing can start programs now.
- xa_aes.prj,xa_codes.h,kernal.c:
  appl_write for 16-byte-messages implemented -> Thing can now redraw 
  its windows when you change directory.
- bootup.c:
  XaAES now sets memory protections flags to F_OS_SPECIAL, so that it 
  can read other processes memory even if this is private. 
  Unfortunately, XaAES still crashes with memory protection enabled, 
  did I miss something?
- bootup.c:
  When system.rsc wasn't found, XaAES will halt with a "Fatal"-message 
  (boy, did it take long till I found out what was going wrong when I 
  first installed XaAES...)

Furthermore, I've got some questions/remarks:
- Point-to-type policy may be quite nice with X11, but it violates the 
  official GEM-documentation. This states that keyboard input is 
  _always_ sent to the application which owns the active window (or 
  which has grabbed keyboard control with wind_update()). So, nearly 
  all applications rely on the fact that they have a window topped when 
  they receive keyboard input, which may cause wrong screen displays. 
  Furthermore, there are no applications which support this yet, so 
  point-to-type has no real effect. For example, if QED has three 
  windows open, all input still goes to the top window, because QED 
  receives a simple keyboard-event. How should it now which window is 
  the correct one?
- As Craig writes, MouseServ is still a busy waiter. Would it be 
  possible to use signals in the mouse-handler-routines? So, MouseSrv 
  sleeps, and everytime an event occurs it will be woken up by a signal 
  sent by the handlers. Possible or completely senseless?
- The SIGCHLD-handler of XaAES seems to remove windows which were open 
  when the child exited. But when I kill a program that has windows 
  open, they stay open and can still be operated (of course, nobody 
  reacts on the WM_xxx-messages...)
- XaAES sometimes crashes when you play around in the menu bar. 
  Interesting thing is that it seems to be the MiNT-kernel itself that 
  crashes, not XaAES... Anybody can confirm this?

Here's my current to-do-list. If anybody else has already started or 
even finished working on some of the points, please tell me.
- Support for USERDEFs (the lack of real USERDEF-routines if the reason 
  why Thing doesn't display color icons: They are realised with 
  USERDEFs, so that they can be displayed on older versions of the AES 
  as well)
- Better color-icon support. They need a lot of work as far as I have 
  seen.
- form_keybd-support.
- correct info-bar-drawing (currently, if an application changes the 
  text, it is transparently written over the old one, does not look 
  nice...)
- graf_mouse(M_ON/OFF) should work with an application-depended 
  counter, so that if an applications exits or crashes with the mouse 
  switched off, it gets visible again. This also prevents calling 
  graf_mouse(M_OFF) even if the mouse is visible for that application, 
  because this may cause serious mouse-trouble)
- Completing the Pure-C-port, because there sure are some places left 
  where Craig either used some Lattice specials (such as vs_clip with 
  NULL-pointer to switch clipping off) or made calculations which may 
  cause an overflow with shorts (the last thing is as bit strange 
  because it should also happen with Lattice...) I hope that you all 
  support me by not using any Lattice specials or C++-style-comments in 
  the future, thanks...

OK, that's all for now, keep hackin'


Ciao

Thomas


--
Thomas Binder (IRCNick: Gryf)                - "Quick to judge, quick to
Johann-Valentin-May-Strasse 7                -  anger, slow to understand,
64665 Alsbach-Haehnlein / Germany            -  ignorance, prejudice and
Email: binder@rbg.informatik.th-darmstadt.de -  fear walk hand in hand."
PGP-key available on request!                -                        Rush


.