
 So many things changed on the aes side that you're best off just reading
 the new gemfast function reference doc.  Below is a list of changes I 
 started, but I'm not sure I even recorded every new function, let alone
 the descriptions of the changes.  Still, I've been sitting on this release
 for six months already, and I'm not going to hold it up any longer just
 because I don't have time to flesh out these notes right now.  ::sigh::

 Version notes for AESFAST...

 v1.8   02/21/91    Miscellanious fixes and additions.

   - apl_malloc     New stuff.  As the utilities get more complex, they
     apl_free       need more system-level services.  You can provide the
                    services by coding these routines, or let default
                    routines be picked up from the aesfast library.

   - apl_vopen      New.  These functions open and close a VDI workstation
     apl_vclose     and implement the (new) concept of a single shared
     apl_vshared    workstation which all gemfast utilties will use.  Your
                    application can use it too, or can also use this to
                    open a separate (private) workstation for its own use.

   - appl_init      Now appl_init/exit are vectored through apl_xinit/xexit
     appl_exit      functions via macros in GEMFAST.H.  This revectoring
     apl_xinit      is required to use new utilties.  The xinit/xexit
     apl_xexit      functions just set up some new gl_whatever global vars.

   - apl_cleanup

   - frm_dsdial     Renamed to frm_dsdialog(), and switched around the
                    order of the parms.  A macro in GEMFAST.H provides
                    compatibility with existing code. Also, any string that
                    starts with 0x7F is now centered.  It also recognizes
                    several new values in the graphicflag parameter.

   - frm_nldialog   New.  This builds and conducts a dynamic string dialog
                    like frm_dsdialog() does, but the text lines are
                    passed as one huge string with NL delimiting each line.

   - frm_dialog     New.  This conducts a complete dialog, or just part
                    of one, based on the flags you pass to it.

   - frm_printf     New.  Does about what you'd think: you pass it parms
     frm_vprintf    like you would to printf() (or vprintf()), and it makes
                    a dialog out of it.  (You also pass buttons, and it
                    returns the exit button number, so this is really
                    what form_alert() always should have been).

   - frm_confine
   - frm_desktop
   - frm_enableblit
   - frm_sizes
   - frm_error
     frm_verror
   - frmx_dial

   - exterror
   - exterrset
          
   - fsl_dialog     New.  This conducts a complete file selector dialog.

   - grfx_dragbox

   - grf_blit       New.  Blit between screen and memory buffer.

   - grf_memblit    New.  Either allocates a memory buffer and saves a
                    piece of the screen into it, or restores the screen
                    then frees the buffer.

   - mnu_bar
     mnu_enable
     mnu_disable

   - obj_clcalc

   - obj_mxuserdef

   - obj_ppstring

   - rc_intersect   Now returns FALSE when the width or height of the
                    resulting rectangle is zero.  Also, now copes with
                    negative x/y values properly (but width and height
                    better be >= 0).

    - rc_gtov       The gtov now calcs ending x as grect->x+grect->w-1.
      rc_vtog       Likewise for the y.  (It didn't used to apply the -1
                    adjustment.)  The vtog has the inverse adjustment.
                    I hope this doesn't break any existing code, but the
                    old way was wrong.  For example, it would convert
                    the mono desktop grect to (0,0,640,400) and if you pass
                    that to VDI v_bar() you end up drawing a box 1 pixel
                    bigger than the screen.
 
   - rc_intersect   Now returns FALSE when the width or height are zero.

   - rc_confine

   - rsc_rrbuttons

   - rsc_cubuttons

   - rsc_gtrees     New.  Gets the address of multiple resource trees in
                    one call.  Like what rsc_gstrings() does for strings.

   - wind_update    Now vectored through wnd_update() function.  The new
     wnd_update     function treats wind_update() calls in a stack-like
                    fashion, just like graf_mouse().  If you do BEG_UPDATE
                    3 times, then it takes 3 END_UPDATE calls before the
                    real wind_update(END_UPDATE) is passed to the AES.
                    Same deal with BEG/END_MCTRL.  This is required for the
                    new utility functions, which need to change the update
                    status without hosing up the application.  Since both
                    the utils and the ap are forced through wnd_update(),
                    the stack-like logic keeps it all straight.
                    

   - frm_mdo
   - frm_menu
   - frm_dsmenu
   - frm_nlmenu
   - rc_ptinrect
   - frm_move
   - frm_init
   - frm_cleanup
   - frm_start
   - frm_draw
   - frm_do
   - frm_finish
   
   - frm_question
   - frm_qmenu
   - frm_qerror
   - frm_qtext
   - wnd_top
   
   
