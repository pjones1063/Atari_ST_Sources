List of changes in c68 v4.4.4 relative to v4.4.3:
-------------------------------------------------
- major clean-up of all the changes I did; conditionalized the
  inline-trap-generation code (compile with -DTRAP_GEN)
- new file out68k_jas.c (basically a copy of out68k_cpm.c)
- fixed an error in getsym.c: '$' must not be part of an identifier
  (we now use isxdigit() and iscym() from ctype.h)
- applied Dave Walker's bug fixes to modf.s and modff.s (the latter
  being a non-standard function that does to float what modf() does
  to double quantities)
- new files xdiv.s and xmul.s replacing the original support routines
  in xdivs.s, xdivu.s, xmuls.s and xmulu.s; the new ones are shorter
  and probably a bit faster
- added library functions for stackcheck option (use with caution)
- Atari's GEMDOS Reference Manual says that registers d0-d2 and a0-a2
  can be modified during OS-traps; changed MAX_ADDR in gen.h to meet
  this requirement, recompiled everything
- sorted libc.a and libm.a using Scott Bigham's libsort utility; ld
  should work faster now because we don't have to invoke it with -p
- patched code generation for switches: no need to define RELOC_BUG
  anymore (as a side-effect c68 will always put switch-tables into
  the text-segment, even with option -separate given - I think we can
  live with that until JAS can handle Label1-Label2 expressions); to
  enable the patch, compile with -DJAS_PATCH


List of changes in c68 v4.4.3 relative to v4.4.2:
-------------------------------------------------
- "-[no]traps" is now called "-[no]trap"
- the built-in optimizer no longer replaces traps with jsr (a?)
- speed improvements in analyze.c: bsort()
- fraction returned by frexp() now has the correct sign (compared
  to all other implementations of this routine that I could check;
  K&R 2nd Ed. is a bit vague about this one)
- modf() is now implemented in assembler (but see file 'bugs')
- libm.a now includes all functions from PML PL23, except it's
  excentric error handling


List of changes in c68 v4.4.2 relative to v4.4.1:
-------------------------------------------------
- IEEE floating point support routines translated to JAS syntax and
  brought in line with MiNTlibs
- bootstraped a version of c68 with full IEEE-fp-support
- replaced the buggy modf.s with an implementation in C (it's slow
  of course, but at least it works)
- _stksize=-1L in cmain.c (see MiNTlibs' crtinit.c); strtoul() and
  strtol() compile successfully now
- generate traps for OS calls to gemdos, xbios and bios (not 100%
  perfect yet - sometimes the optimizer will replace such a trap
  with a (slow) jsr (a?) call to _gemdos, _xbios or _bios); option
  "-notraps" disables trap generation


List of changes in c68 v4.4.1 relative to v4.4:
-------------------------------------------------
- fixed some bugs in out68k_cpm.c (it now generates JAS compatible
  assembler code)
- changed hash function in getsym.c and symbol.c (I prefer a some-
  what more complex method than to add the ascii-values)
- use mode "wb" for output streams (JAS can deal with UNIX-style
  files and it should be faster this way)
- fixed a bug in xdivs.s (.Xldiv and .Xlrem sometimes ran into an
  infinite loop)
- warning "size of parameter %d changed by prototype on function %s"
  is now level 4 instead of level 2 (because of sizeof(int)==2 and
  sizeof(size_t)==4 this warning appeared a little bit to often)
- changed manual page to reflect TOS port
- enlarged buffer for input lines from 500 to 1024 bytes
