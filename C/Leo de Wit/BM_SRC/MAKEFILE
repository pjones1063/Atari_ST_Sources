# @(#)Makefile	1.2
DEF	=
CFLAGS	= $(DEF) -O
STRIP	= -s
LDFLAGS	= $(STRIP)
O = bin
SOURCES =  bm.h bm.c Execute.c Extern.h\
	GetPatFi.c Global.c MakeDesc.c MakeSkip.c \
	MatchFou.c \
	MkDescVe.c MoveResi.c PrintLin.c PutUsage.c Search.c
OBJECTS = bm.$(O) Execute.$(O) \
	GetPatFi.$(O) Global.$(O) MakeDesc.$(O) MakeSkip.$(O) \
	MatchFou.$(O) \
	MkDescVe.$(O) MoveResi.$(O) Search.$(O) PrintLin.$(O) PutUsage.$(O)
BASEFILES = $(SOURCES) Makefile README bm.1

ALL	= bm

all::	$(ALL)

cp cmp:: $(ALL)
	for i in $(ALL); do $@ $$i $$ROOT/usr/local/$$i; done

clean::	; rm -f a.out core *.s *.$(O) errs $(ALL)
get::	; getall
unget::	; ungetall

bm: $(OBJECTS)
	link.ttp -with bm -prog bm
#	$(CC) -s -o bm $(CCFLAGS) $(OBJECTS)

bm.$(O): bm.c bm.h Extern.h
	cc -c $(CCFLAGS) bm.c
PutUsage.$(O): PutUsage.c bm.h 
	cc -c $(CCFLAGS) PutUsage.c
MakeSkip.$(O): MakeSkip.c bm.h 
	cc -c $(CCFLAGS) MakeSkip.c
Search.$(O): Search.c bm.h Extern.h
	cc -c $(CCFLAGS) Search.c
Execute.$(O): Execute.c bm.h 
	cc -c $(CCFLAGS) Execute.c
MoveResidue.$(O): MoveResidue.c bm.h Extern.h
	cc -c $(CCFLAGS) MoveResidue.c
MatchFound.$(O): MatchFound.c bm.h Extern.h
	cc -c $(CCFLAGS) MatchFound.c
PrintLine.$(O): PrintLine.c Extern.h
	cc -c $(CCFLAGS) PrintLine.c
MkDescVec.$(O): MkDescVec.c bm.h
	cc -c $(CCFLAGS) MkDescVec.c
GetPatFile.$(O): GetPatFile.c bm.h
	cc -c $(CCFLAGS) GetPatFile.c
MakeDesc.$(O): MakeDesc.c bm.h
	cc -c $(CCFLAGS) MakeDesc.c
Global.$(O): Global.c
	cc -c $(CCFLAGS) Global.c

