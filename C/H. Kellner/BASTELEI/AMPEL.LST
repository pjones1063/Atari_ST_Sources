'
'   AMPEL.GFA
'
'   Eine Ampelsteuerung als Anwendungsbeispiel fÅr das 16-Bit-I/O-Interface
'
'   GFA-Basic Version 3.5E D
'
'
' *****  Voreinstellungen  *****
'
GOSUB first
'
ON BREAK GOSUB last
'
DIM phase%(15),zeit%(15),text$(15)
HIDEM
'
CLS
PRINT AT(2,2);"Ampelsteuerung als Anwendungsbeispiel"
PRINT AT(2,7);"alle Ports als AusgÑnge:"
PRINT AT(2,9);"Port 1  -->  Rot  Seitenstrasse"
PRINT AT(2,10);"Port 2  -->  Gelb Seitenstrasse"
PRINT AT(2,11);"Port 3  -->  GrÅn Seitenstrasse"
PRINT AT(2,12);"Port 4  -->  nicht belegt"
PRINT AT(2,13);"Port 5  -->  nicht belegt"
PRINT AT(2,14);"Port 6  -->  Rot  FÅûgÑnger Seitenstrasse"
PRINT AT(2,15);"Port 7  -->  GrÅn FuûgÑnger Seitenstrasse"
PRINT AT(2,16);"Port 8  -->  nicht belegt"
PRINT AT(2,17);"Port 9  -->  nicht belegt"
PRINT AT(2,18);"Port 10 -->  Rot  Hauptstrasse"
PRINT AT(2,19);"Port 11 -->  Gelb Hauptstrasse"
PRINT AT(2,20);"Port 12 -->  GrÅn Hauptstrasse"
PRINT AT(2,21);"Port 13 -->  nicht belegt"
PRINT AT(2,22);"Port 14 -->  nicht belegt"
PRINT AT(2,23);"Port 15 -->  Rot  FuûgÑnger Hauptstrasse"
PRINT AT(2,24);"Port 16 -->  GrÅn FuûgÑnger Hauptstrasse"
'
RESTORE takt_zyklen
DO
  READ takt%
  EXIT IF takt%=15
  READ phase%(takt%),zeit%(takt%),text$(takt%)
LOOP
'
takt_zyklen:
'
'         1111111000000000
'         6543210987654321
'         HH  HHH  SS  SSS
'         GR  GGR  GR  GGR
'         ro  reo  ro  reo
'         Åt  Ålt  Åt  Ålt
'   Takt  n   nb   n   nb
DATA 01,&X0100001000100001,2, Rot             Rot
DATA 02,&X0100011000100001,2, Rot/Gelb        Rot
DATA 03,&X0100100000100001,1, GrÅn            Rot
DATA 04,&X0100100001000001,0, GrÅn            Rot
DATA 05,&X0100100000100001,3, GrÅn            Rot
DATA 06,&X0100010000100001,2, Gelb            Rot
DATA 07,&X0100001000100001,4, Rot             Rot
DATA 08,&X0100001000100011,2, Rot             Rot/Gelb
DATA 09,&X0100001000100100,1, Rot             GrÅn
DATA 10,&X1000001000100100,0, Rot             GrÅn
DATA 11,&X0100001000100100,3, Rot             GrÅn
DATA 12,&X0100001000100010,2, Rot             Gelb
DATA 13,&X0100001000100001,2, Rot             Rot
DATA 14,&H0000000000000000,0, Aus             Aus
DATA 15
'
GOSUB init(&HFFFF)
GOSUB outword(phase%(14))
'
ein_hau:
PRINT AT(2,4);"Dauer der GrÅnphase Hauptstrasse (14-60 Sekunden): ";
INPUT zeit%(4)
IF zeit%(4)<14 OR zeit%(4)>60
  GOTO ein_hau
ENDIF
zeit%(4)=zeit%(4)-zeit%(3)-zeit%(5)
'
ein_sei:
PRINT AT(2,4);"Dauer der GrÅnphase Seitenstrasse (14-40 Sekunden): ";
INPUT zeit%(10)
IF zeit%(10)<14 OR zeit%(10)>40
  GOTO ein_sei
ENDIF
zeit%(10)=zeit%(10)-zeit%(9)-zeit%(11)
'
PRINT AT(2,4);"Takt Nr.    Dauer    Hauptstrasse    Seitenstrasse    Zeit     "
'
ALERT 1,"RESET-Taste|    des| Interface| betÑtigen !",1," OK ",but%
'
' *****  Hauptprogramm  *****
'
DO
  FOR takt%=1 TO 13
    PRINT AT(2,5);takt%;"        "
    PRINT AT(14,5);zeit%(takt%);" sec    "
    PRINT AT(22,5);text$(takt%);"        "
    GOSUB outword(NOT phase%(takt%))
    ta%=TIMER
    DO
      ti%=INT((TIMER-ta%)/200)
      PRINT AT(56,5);ti%+1;" sec     "
      EXIT IF zeit%(takt%)=ti%
    LOOP
    exit%=ASC(INKEY$)
    IF exit%=32
      GOSUB last
    ENDIF
  NEXT takt%
LOOP
'
'  *****  Unterprogramme  *****
'
> PROCEDURE first
  '
  DIM bin_code%(500),regs%(16)
  adr%=VARPTR(bin_code%(0))
  BLOAD "INTERFAC.MOD",adr%
  index%=0
  WHILE (index%<500) AND (bin_code%(index%)<>&H4AFCDB9F)
    index%=index%+1
  WEND
  IF index%=500 THEN
    ALERT 3,"Startadresse nicht gefunden",1,"Dann nicht",index%
    END
  ENDIF
  init%=VARPTR(bin_code%(SUCC(index%)))
  deinit%=init%+4
  read%=deinit%+4
  write%=read%+4
  readreg%=write%+4
  wrreg%=readreg%+4
  '
RETURN
'
> PROCEDURE init(dir%)
  '
  regs%(0)=dir%
  RCALL init%,regs%()
  '
RETURN
'
> PROCEDURE outword(word%)
  '
  regs%(0)=word%
  RCALL write%,regs%()
  '
RETURN
'
PROCEDURE last
  '
  GOSUB outword(phase%(14))
  RCALL deinit%,regs%()
  END
  '
RETURN
'
END
