***********************************
*=================================*
* RESERVOIR GODS LIBRARY ROUTINES *
*=================================*
*       |                |        *
*       |  SOUND LIBRARY |        *
*       |                |        *
***********************************
* CODE: MR. PINK | (C): 2/03/96  *
***********************************
* UPDATE: 2/03/96  *
********************

**************************************************************************
	SECTION TEXT
**************************************************************************

rlsd_sound_constructor:
	movem.l	a0-1/d0,-(a7)
	move.w	sr,-(a7)
	ori.w	#$0700,sr
	lea	rlsd_sound_space,a0
	lea	rlsd_old_dma_int(a0),a1
	move.w	$ffff8900.w,(a1)+	; DMA
	move.b	$ffff8903.w,(a1)+	; Start - High
	move.b	$ffff8905.w,(a1)+	; Start - Med
	move.b	$ffff8907.w,(a1)+	; Start - Low
	move.b	$ffff890f.w,(a1)+	; End - High
	move.b	$ffff8911.w,(a1)+	; End - Med
	move.b	$ffff8913.w,(a1)+	; End - Low
	move.w	$ffff8920.w,(a1)+	; montitor/play, 8/16, Mono/Stereo
	move.w	$ffff8930.w,(a1)+	; Matrice : Sources
	move.w	$ffff8932.w,(a1)+	; Matrice : Destination
	move.w	$ffff8934.w,(a1)+	; Frequency divider
	move.w	$ffff8936.w,(a1)+	; Nb Voies Record+CODEC input source
	move.w	$ffff8938.w,(a1)+	; CODEC ADC input+gain
	move.b	$ffff893a.w,(a1)+	; volume
	move.b	$ffff8909.w,(a1)+	; current high
	move.b	$ffff890b.w,(a1)+	; current mid
	move.b	$ffff890d.w,(a1)+	; current low

	movea.w	#$8800,a2

	moveq	#12,d0
.save_psg
	move.b	d0,(a2)			; select PSG register
	move.b	(a2),(a1)+		; save PSG register
	dbra	d0,.save_psg

	move.b	#14,(a2)
	move.b	(a2),d0
	and.b	#%01000000,d0
	move.b	d0,(a1)+		;save old port a

	move.b	$484,rlsd_old_484(a0)	
	andi.b	#2,$484.w

	move.w	(a7)+,sr
	movem.l	(a7)+,a0-1/d0
	rts

rlsd_sound_deconstructor:
	movem.l	a0-1,-(a7)
	move.w	sr,-(a7)
	ori.w	#$0700,sr
	lea	rlsd_sound_space,a0
	lea	rlsd_old_dma_int(a0),a1
	move.w	(a1)+,$ffff8900.w	; DMA
	move.b	(a1)+,$ffff8903.w	; Start - High
	move.b	(a1)+,$ffff8905.w	; Start - Med
	move.b	(a1)+,$ffff8907.w	; Start - Low
	move.b	(a1)+,$ffff890f.w	; End - High
	move.b	(a1)+,$ffff8911.w	; End - Med
	move.b	(a1)+,$ffff8913.w	; End - Low
	move.w	(a1)+,$ffff8920.w	; montitor/play, 8/16, Mono/Stereo
	move.w	(a1)+,$ffff8930.w	; Matrice : Sources
	move.w	(a1)+,$ffff8932.w	; Matrice : Destination
	move.w	(a1)+,$ffff8934.w	; Frequency divider
	move.w	(a1)+,$ffff8936.w	; Nb Voies Record+CODEC input source
	move.w	(a1)+,$ffff8938.w	; CODEC ADC input+gain
	move.b	(a1)+,$ffff893a.w	; volume
	move.b	(a1)+,$ffff8909.w	; current high
	move.b	(a1)+,$ffff890b.w	; current mid
	move.b	(a1)+,$ffff890d.w	; current low

	movea.w	#$8800,a2

	moveq	#12,d0
.restore_psg
	move.b	d0,(a2)			; select PSG register
	move.b	(a1)+,2(a2)		; restore PSG register
	dbra	d0,.restore_psg

	move.b	#14,(a2)		; select port a
	move.b	(a2),d0
	bclr	#6,d0
	or.b	(a1)+,d0
	move.b	#14,(a2)		; select port a
	move.b	d0,2(a2)		; restore speaker state
	move.b	rlsd_old_484(a0),$484.w

	move.w	(a7)+,sr
	movem.l	(a7)+,a0-1
	rts

rlsd_turn_speaker_on:
	movem.l	d0/a0,-(a7)
	movea.w	#$8800,a0
	move.b	#14,(a0)
	move.b	(a0),d0
	bclr	#6,d0
	move.b	d0,2(a0)
	movem.l	(a7)+,d0/a0
	rts

rlsd_turn_speaker_off:
	movem.l	d0/a0,-(a7)
	movea.w	#$8800,a0
	move.b	#14,(a0)
	move.b	(a0),d0
	bset	#6,d0
	move.b	d0,2(a0)
	movem.l	(a7)+,d0/a0
	rts

rlsd_toggle_speaker:
	movem.l	d0/a0,-(a7)
	movea.w	#$8800,a0
	move.b	#14,(a0)
	move.b	(a0),d0
	bchg	#6,d0
	move.b	d0,2(a0)
	movem.l	(a7)+,d0/a0
	rts

rlsd_return_speaker_state:
	movem.l	d0/a0,-(a7)
	movea.w	#$8800,a0
	move.b	#14,(a0)
	move.b	(a0),d0
	btst	#6,d0
	movem.l	(a7)+,d0/a0
	rts

rlsd_set_left_volume:
	movem.l	a0/d0-1,-(a7)
	movea.w	#$893a,a0
	and.b	#%1111,d0
	lsl.b	#4,d0
	move.b	(a0),d1
	and.b	#%1111,d1
	or.b	d0,d1
	move.b	d1,(a0)
	movem.l	(a7)+,a0/d0-1
	rts

rlsd_get_left_volume:
	movem.l	a0,-(a7)
	movea.w	#$893a,a0
	move.b	(a0),d0
	lsr.b	#4,d0	
	and.w	#%1111,d0
	movem.l	(a7)+,a0
	rts

rlsd_set_right_volume:
	movem.l	a0/d0-1,-(a7)
	movea.w	#$893a,a0
	and.b	#%1111,d0
	move.b	(a0),d1
	and.b	#%11110000,d1
	or.b	d0,d1
	move.b	d1,(a0)
	movem.l	(a7)+,a0/d0-1
	rts

rlsd_get_right_volume:
	move.l	a0,-(a7)
	movea.w	#$893a,a0
	move.b	(a0),d0
	and.w	#%1111,d0
	move.l	(a7)+,a0
	rts

rlsd_set_lr_volume:
	movem.l	a0/d0-1,-(a7)
	movea.w	#$893a,a0
	and.w	#%1111,d0
	move.w	d0,d1
	lsl.w	#4,d1
	or.w	d0,d1
	lsl.w	#4,d1
	move.w	d1,(a0)
	movem.l	(a7)+,a0/d0-1
	rts

rlsd_get_lr_volume:
	movem.l	a0/d1,-(a7)
	movea.w	#$893a,a0
	move.w	(a0),d0
	lsr.w	#4,d0
	move.w	d0,d1
	lsr.w	#4,d1
	and.w	#%1111,d0
	and.w	#%1111,d1
	add.w	d1,d0
	lsr.w	d0
	movem.l	(a7)+,a0/d1
	rts

**************************************************************************
	SECTION BSS
**************************************************************************
	even
	RSRESET
rlsd_old_dma_int	rs.b	1
rlsd_old_dma_control	rs.b	1
rlsd_old_start_high	rs.b	1
rlsd_old_start_mid	rs.b	1
rlsd_old_start_low	rs.b	1
rlsd_old_end_high	rs.b	1
rlsd_old_end_mid	rs.b	1
rlsd_old_end_low	rs.b	1
rlsd_old_play_monitor	rs.b	1
rlsd_old_stereo_freq	rs.b	1
rlsd_old_matrice_output	rs.w	1
rlsd_old_matrice_input	rs.w	1
rlsd_old_freq_divider	rs.w	1
rlsd_old_record_select	rs.b	1
rlsd_old_codec_input	rs.b	1
rlsd_old_adc_input	rs.b	1
rlsd_old_gain		rs.b	1
rlsd_old_attenuation	rs.b	1
rlsd_old_current_high	rs.b	1
rlsd_old_current_mid	rs.b	1
rlsd_old_current_low	rs.b	1
rlsd_old_psg_ca_ftune	rs.b	1
rlsd_old_psg_ca_ctune	rs.b	1
rlsd_old_psg_cb_ftune	rs.b	1
rlsd_old_psg_cb_ctune	rs.b	1
rlsd_old_psg_cc_ftune	rs.b	1
rlsd_old_psg_cc_ctune	rs.b	1
rlsd_old_psg_noise	rs.b	1
rlsd_old_psg_mixer	rs.b	1
rlsd_old_psg_ca_volume	rs.b	1
rlsd_old_psg_cb_volume	rs.b	1
rlsd_old_psg_cc_volume	rs.b	1
rlsd_old_psg_env_ftune	rs.b	1
rlsd_old_psg_env_ctune	rs.b	1
rlsd_old_psg_port_a	rs.b	1
rlsd_old_484:		rs.b	1
rlsd_sound_buffer	rs.b	0
	even
rlsd_sound_space:	ds.b	rlsd_sound_buffer
	even