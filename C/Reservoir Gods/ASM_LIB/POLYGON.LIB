***********************************
*=================================*
* RESERVOIR GODS LIBRARY ROUTINES *
*=================================*
*       |                |        *
*       | POLYGON LIBRARY|        *
*       |                |        *
***********************************
* CODE: MR. PINK | (C): 19/02/96  *
***********************************
* UPDATE: 19/2/96  *
********************

***************************************************************************
	SECTION TEXT
***************************************************************************	

; enter with a0->poly points, a1->dest points space
;            d0=z0, d1=x0, d2=y0, a2=tx, a3=ty, a4=tz

rlpn_rotate_object_points:

	move.w	(a0)+,d7	; number of points to rotate-1
	bmi	.no_rotate
	move.w	d7,(a1)+

	move.w	(rlmt_sin_table,d0.w*2),d4
	move.w	(rlmt_sin_table,d1.w*2),d5
	move.w	(rlmt_sin_table,d2.w*2),d6
	swap	d4
	swap	d5
	swap	d6	
	move.w	(rlmt_cos_table,d0.w*2),d4
	move.w	(rlmt_cos_table,d1.w*2),d5
	move.w	(rlmt_cos_table,d2.w*2),d6

.rot_all
	move.w	(a0)+,d0	; get x
	move.w	(a0)+,d1	; get y
	move.w	(a0)+,d2	; get z

	add.w	d0,d0
	add.w	d1,d1
	add.w	d2,d2

	move.w	d0,a5

.rotate_x
	move.w	d1,d0		; copy y
	move.w	d2,d3		; copy z
	muls.w	d4,d1		; Ycos0
	swap	d4		; get sin0
	muls.w	d4,d3		; Zsin0
	sub.l	d3,d1		; Ycos0-Zsin0

	muls.w	d4,d0		; Ysin0
	swap	d4		; get cos0
	muls.w	d4,d2		; Zcos0
	add.l	d0,d2		; Ysin0+Zcos0

	swap	d1		; get integer part of Y
	swap	d2		; get integer part of Z

	add.w	d1,d1
	add.w	d2,d2

.rotate_y
	exg	a5,d1		; get x, save y
	move.w	d1,d0		; copy x
	move	d2,d3		; copy z
	muls.w	d5,d0		; Xcos0
	swap	d5		; get sin0
	muls.w	d5,d3		; Zsin0
	add.l	d3,d0		; Xcos0+Zsin0

	muls.w	d5,d1		; Xsin0
	swap	d5		; get cos0
	muls.w	d5,d2		; Zcos0
	sub.l	d1,d2		; Zcos0-Xsin0

	swap	d0		; get integer part of x
	swap	d2		; get integer part of Z

	add.w	d0,d0

.rotate_z
	exg	d2,a5		; get y, save z
	move.w	d2,d1		; copy y

	move	d0,d3		; copy x
	muls.w	d6,d0		; Xcos0
	swap	d6		; get sin 0
	muls.w	d6,d2		; Ysin0
	sub.l	d2,d0		; Xcos0-Ysin0

	muls.w	d6,d3		; Xsin0
	swap	d6		; get cos 0
	muls.w	d6,d1		; Ycos0
	add.l	d3,d1		; Xsin0+Ycos0

	swap	d0		; get integer part of X
	swap	d1		; get integer part of Y


	add.w	d0,d0
	add.w	d1,d1

	move.w	a5,d2		; get z
	cmp.w	#20,d2
	blt.s	.zmax
	move.w	#20,d2
.zmax	move.w	(rlmt_one_over_table,d2.w*2),d2
	muls.w	d2,d0
	muls.w	d2,d1	
	swap	d0
	swap	d1

	add.w	a2,d0
	add.w	a3,d1
	add.w	a4,a5

	move.w	d0,(a1)+	; save X
	move.w	d1,(a1)+	; save Y
	move.w	a5,(a1)+	; save Z

	dbra	d7,.rot_all
.no_rotate
	rts


; enter with a0-> poly object, a1-> screen

rlpn_show_polygon_dots:

	move.w	(a0)+,d7		
	bmi	.no_poly
	lea	rlmt_one_over_table,a2
.display
	move.w	(a0)+,d0	;x
	move.w	(a0)+,d1	;y
	move.w	(a0)+,d2	;z
	muls.w	(a2,d2.w*2),d0
	muls.w	(a2,d2.w*2),d1
	swap	d0
	swap	d1

	tst.w	d0		
	bmi.s	.next
	cmp.w	#320,d0
	bge.s	.next
	tst.w	d1
	bmi.s	.next
	cmp.w	#240,d1
	bge.s	.next

	move.l	a1,a3
	add.l	(rlsc_screen_space+rlsc_line_offsets,d1.w*4),a3
	move.w	#-1,(a3,d0.w*2)

.next
	dbra	d7,.display

.no_poly
	rts