***********************************
*=================================*
* RESERVOIR GODS LIBRARY ROUTINES *
*=================================*
*      |                |         *
*      |GRAPHICS LIBRARY|         *
*      |                |         *
***********************************
* CODE: MR. PINK | (C): 19/02/96  *
***********************************
* UPDATE: 19/2/96  *
********************

***************************************************************************
	SECTION TEXT
***************************************************************************	

rlgfx_gfx_constructor:
	rts

rlgfx_gfx_deconstructor:
	rts

;a0->line, a1->screen

rlgfx_draw_line:
	movem.l	d0-a6,-(a7)

.loop	move.w	(a0)+,d1
	bmi.s	.endline
	lea	(a1,d1.w*2),a2
	move.w	(a0)+,d1
	bmi.s	.endline
	add.l	(rlsc_screen_space+rlsc_line_offsets,d1.w*4),a2
	move.w	d0,(a2)		
	bra.s	.loop
.endline	
	movem.l	(a7)+,d0-a6
	rts

;a0->line, a1->screen

rlgfx_draw_back_line:
	movem.l	d0-a6,-(a7)

.loop	move.w	(a0)+,d1
	bmi.s	.endline
	lea	(a1,d1.w*2),a2
	move.w	(a0)+,d1
	bmi.s	.endline
	add.l	(rlsc_screen_space+rlsc_line_offsets,d1.w*4),a2
	tst.w	(a2)
	bne.s	.loop
	move.w	d0,(a2)		
	bra.s	.loop
.endline	
	movem.l	(a7)+,d0-a6
	rts

;a0->line, a1->screen, a2->save buffer

rlgfx_save_line:
	movem.l	d0/a0-1/a3,-(a7)

.loop	move.w	(a0)+,d0
	bmi.s	.endline
	lea	(a1,d0.w*2),a3
	move.w	(a0)+,d0
	bmi.s	.endline
	add.l	(rlsc_screen_space+rlsc_line_offsets,d0.w*4),a3
	move.w	(a3),(a2)+
	move.l	a3,(a2)+
	bra.s	.loop
.endline	
	movem.l	(a7)+,d0/a0-1/a3
	rts

;a0->line, a1->screen

rlgfx_add_line:
	movem.l	d0-a6,-(a7)

.loop	move.w	(a0)+,d1
	bmi.s	.endline
	lea	(a1,d1.w*2),a2
	move.w	(a0)+,d1
	bmi.s	.endline
	add.l	(rlsc_screen_space+rlsc_line_offsets,d1.w*4),a2
	add.w	d0,(a2)		
	bra.s	.loop
.endline	
	movem.l	(a7)+,d0-a6
	rts

rlgfx_calc_line2:
	movem.l	d0-a6,-(a7)

	moveq	#1,d4		;x adder
	moveq	#1,d5		;y adder

	sub.w	d0,d2		;x2-x1=dx
	bpl.s	.plsdx		;+dx
	moveq	#-1,d4		;flag -dx 
	neg.w	d2		;|dx|
.plsdx
	sub.w	d1,d3		;y2-y1=dy
	bpl.s	.plsdy		;+dy
	moveq	#-1,d5		;flag -dy
	neg.w	d3		;|dy|
.plsdy
	tst.w	d2
	beq	rlgfx_vertical_line2
	tst.w	d3
	beq	rlgfx_horizontal_line2

	cmp.w	d2,d3
	bge	rlgfx_calc_yline2

rlgfx_calc_xline2
	ext.l	d1		;clear high word

	moveq	#1,d6		;dy value+1
	add.w	d3,d6					;dy
	add.w	d6,d6					;*2
	muls.w	(rlmt_one_over_table+2,d2.w*2),d6	;dy/dx
	tst.w	d5					;y value
	bpl.s	.posy
	neg.l	d6		;make subx value
.posy	swap	d6		;frac->high word, int->low word

	move.w	d2,d5		;dx=loop amount
	moveq	#4,d3		;offset to next x/y word

	lea	2(a0),a1
.calcy	move.w	d1,(a1)		;store y
	lea	(a1,d3.w),a1	;next y pos
	addx.l	d6,d1		;calc next y
	dbra	d5,.calcy	;loop dx

.calcx	move.w	d0,(a0)		;store x
	lea	(a0,d3.w),a0	;next x pos
	add.w	d4,d0		;calc next x
	dbra	d2,.calcx	;loop dx

	move.l	#-1,(a0)+	;flag end of line
	movem.l	(a7)+,d0-a6
	rts

rlgfx_calc_yline2
	ext.l	d0

	moveq	#1,d6
	add.w	d2,d6				;dx
	add.w	d6,d6
	muls.w	(rlmt_one_over_table,d3.w*2),d6	;dx/dy
	tst.w	d4				;x value
	bpl.s	.posx
	neg.l	d6
.posx	swap	d6

	move.w	d3,d4		
	moveq	#4,d2

	move.l	a0,a1
.calcx	move.w	d0,(a1)		;store x
	lea	(a1,d2.w),a1	;get to next x
	addx.l	d6,d0		;calc x
	dbra	d4,.calcx	;loop dy

	addq.w	#2,a0
.calcy	move.w	d1,(a0)		;store y
	lea	(a0,d2.w),a0	;get to next y
	add.w	d5,d1		;calc y
	dbra	d3,.calcy	;loop dy

	move.l	#-1,(a0)+	;flag end of line
	movem.l	(a7)+,d0-a6
	rts


rlgfx_vertical_line2
	tst.w	d3
	beq	.noline

.vert	move.w	d0,(a0)+		;store x
	move.w	d1,(a0)+		;store y
	add.w	d5,d1			;go down
	dbra	d3,.vert		;loop dy

.noline	
	move.l	#-1,(a0)+
	movem.l	(a7)+,d0-a6
	rts


rlgfx_horizontal_line2
	tst.w	d2			;calc dx
	beq	.noline

.horiz	move.w	d0,(a0)+		;store x
	move.w	d1,(a0)+		;store y
	add.w	d4,d0			;go left/right
	dbra	d2,.horiz		;loop dy

.noline
	move.l	#-1,(a0)+	
	movem.l	(a7)+,d0-a6
	rts


* New Computer Graphics Routines
* From "CG:P&P"

* d0=x1, d1=y1, d2=x2, d3=y2, a0-> buffer

rlgfx_calc_line:
	movem.l	d0-a6,-(a7)

	move.w	d0,(a0)+	;first x
	move.w	d1,(a0)+	;first y

	cmp.w	d0,d2
	beq	rlgfx_midpoint_vertical

	moveq	#0,d7	

	move.w	d2,d4			;d4=x2
	sub.w	d0,d4			;dx=x2-x1
	bpl.s	.pos_dx
	neg.w	d4			;|dx|
	moveq	#1,d7
.pos_dx
	move.w	d3,d5			;d5=y2
	sub.w	d1,d5			;dy=x2-x2
	bpl.s	.pos_dy
	neg.w	d5			;|dy|
	addq.w	#2,d7
.pos_dy
	cmp.w	d5,d4
	bgt.s	.dx_big
	addq.w	#4,d7
.dx_big

	jmp	([rlgfx_mid_sloper_rout1,d7.w*4])

.no_line
	rts


rlgfx_mid_sloper_rout1
*               	                          >dx +dy +dx
	dc.l	rlgfx_mid_sloper_rightd            0   0   0
	dc.l	rlgfx_mid_sloper_leftd             0   0   1
	dc.l	rlgfx_mid_sloper_rightu            0   1   0
	dc.l	rlgfx_mid_sloper_leftu             0   1   1
	dc.l	rlgfx_mid_sloper_rdown             1   0   0
	dc.l	rlgfx_mid_sloper_ldown             1   0   1
	dc.l	rlgfx_mid_sloper_rup               1   1   0
	dc.l	rlgfx_mid_sloper_lup               1   1   1


* '\__ 
*     \

rlgfx_mid_sloper_rightd

	move.w	d5,d7		;dy
	sub.w	d4,d7		;dy-dx
	add.w	d7,d7		;incrNE=2(dy-dx)

	add.w	d5,d5		;2dy
	move.w	d5,d6		;incrE=2dy

	sub.w	d4,d5		;d=(2dy-dx)

.loop	cmp.w	d2,d0
	bge.s	.end_line

	addq.w	#1,d0		;inc x (right)

	tst.w	d5		;check d
	bgt.s	.choose_ne

	add.w	d6,d5		;d=d+incrE
	bra.s	.store

.choose_ne
	add.w	d7,d5		;d=d+incrNE
	addq.w	#1,d1		;inc y (down)

.store
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	bra.s	.loop

.end_line
	move.l	#-1,(a0)+	;mark eol
	movem.l	(a7)+,d0-a6

	rts
*  __/'
* /

rlgfx_mid_sloper_leftd

	move.w	d5,d7		;dy
	sub.w	d4,d7		;dy-dx
	add.w	d7,d7		;incrNE=2(dy-dx)

	add.w	d5,d5		;2dy
	move.w	d5,d6		;incrE=2dy

	sub.w	d4,d5		;d=(2dy-dx)

.loop	cmp.w	d2,d0
	ble.s	.end_line

	subq.w	#1,d0		;dec x (left)

	tst.w	d5		;check d
	bgt.s	.choose_ne

	add.w	d6,d5		;d=d+incrE
	bra.s	.store

.choose_ne
	add.w	d7,d5		;d=d+incrNE
	addq.w	#1,d1		;inc y (down)

.store
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	bra.s	.loop

.end_line
	move.l	#-1,(a0)+	;mark eol
	movem.l	(a7)+,d0-a6

	rts
*   __/
* ./

rlgfx_mid_sloper_rightu
	
	move.w	d5,d7		;dy
	sub.w	d4,d7		;dy-dx
	add.w	d7,d7		;incrNE=2(dy-dx)

	add.w	d5,d5		;2dy
	move.w	d5,d6		;incrE=2dy

	sub.w	d4,d5		;d=(2dy-dx)

.loop	cmp.w	d2,d0
	bge.s	.end_line

	addq.w	#1,d0		;inc x (right)

	tst.w	d5		;check d
	bgt.s	.choose_ne

	add.w	d6,d5		;d=d+incrE
	bra.s	.store

.choose_ne
	add.w	d7,d5		;d=d+incrNE
	subq.w	#1,d1		;dec y (up)

.store
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	bra.s	.loop

.end_line
	move.l	#-1,(a0)+	;mark eol
	movem.l	(a7)+,d0-a6
	
	rts
* \__
*    \.

rlgfx_mid_sloper_leftu

	move.w	d5,d7		;dy
	sub.w	d4,d7		;dy-dx
	add.w	d7,d7		;incrNE=2(dy-dx)

	add.w	d5,d5		;2dy
	move.w	d5,d6		;incrE=2dy

	sub.w	d4,d5		;d=(2dy-dx)

.loop	cmp.w	d2,d0
	ble.s	.end_line

	subq.w	#1,d0		;dec x (leftt)

	tst.w	d5		;check d
	bgt.s	.choose_ne

	add.w	d6,d5		;d=d+incrE
	bra.s	.store

.choose_ne
	add.w	d7,d5		;d=d+incrNE
	subq.w	#1,d1		;dec y (up)

.store
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	bra.s	.loop

.end_line
	move.l	#-1,(a0)+	;mark eol
	movem.l	(a7)+,d0-a6

	rts
* '\
*   \

rlgfx_mid_sloper_rdown
	
	move.w	d4,d7		;dx
	sub.w	d5,d7		;dx-dy
	add.w	d7,d7		;incrNE=2(dy-dx)
this_ok
	add.w	d4,d4		;2dx
	move.w	d4,d6		;incrE=2dx

	sub.w	d5,d4		;d=(2dx-dy)

.loop	cmp.w	d3,d1
	bge.s	.end_line

	addq.w	#1,d1		;inc y (down)

	tst.w	d4		;check d
	bgt.s	.choose_ne

	add.w	d6,d4		;d=d+incrE
	bra.s	.store

.choose_ne
	add.w	d7,d4		;d=d+incrNE
	addq.w	#1,d0		;inc x (right)

.store
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	bra.s	.loop

.end_line
	move.l	#-1,(a0)+	;mark eol
	movem.l	(a7)+,d0-a6

	rts
*  /'
* /

rlgfx_mid_sloper_ldown

	move.w	d4,d7		;dx
	sub.w	d5,d7		;dx-dy
	add.w	d7,d7		;incrNE=2(dy-dx)

	add.w	d4,d4		;2dx
	move.w	d4,d6		;incrE=2dx

	sub.w	d5,d4		;d=(2dx-dy)

.loop	cmp.w	d3,d1
	bge.s	.end_line

	addq.w	#1,d1		;inc y (down)

	tst.w	d4		;check d
	bgt.s	.choose_ne

	add.w	d6,d4		;d=d+incrE
	bra.s	.store

.choose_ne
	add.w	d7,d4		;d=d+incrNE
	subq.w	#1,d0		;dec x (left)

.store
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	bra.s	.loop

.end_line
	move.l	#-1,(a0)+	;mark eol
	movem.l	(a7)+,d0-a6

	rts
*   /
* ./

rlgfx_mid_sloper_rup

	move.w	d4,d7		;dx
	sub.w	d5,d7		;dx-dy
	add.w	d7,d7		;incrNE=2(dy-dx)

	add.w	d4,d4		;2dx
	move.w	d4,d6		;incrE=2dx

	sub.w	d5,d4		;d=(2dx-dy)

.loop	cmp.w	d3,d1
	bge.s	.end_line

	subq.w	#1,d1		;dec y (up)

	tst.w	d4		;check d
	bgt.s	.choose_ne

	add.w	d6,d4		;d=d+incrE
	bra.s	.store

.choose_ne
	add.w	d7,d4		;d=d+incrNE
	addq.w	#1,d0		;inc x (right)

.store
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	bra.s	.loop

.end_line
	move.l	#-1,(a0)+	;mark eol
	movem.l	(a7)+,d0-a6

	rts
*  \
*   \.

rlgfx_mid_sloper_lup

	move.w	d4,d7		;dx
	sub.w	d5,d7		;dx-dy
	add.w	d7,d7		;incrNE=2(dy-dx)

	add.w	d4,d4		;2dx
	move.w	d4,d6		;incrE=2dx

	sub.w	d5,d4		;d=(2dx-dy)

.loop	cmp.w	d3,d1
	bge.s	.end_line

	subq.w	#1,d1		;dec y (up)

	tst.w	d4		;check d
	bgt.s	.choose_ne

	add.w	d6,d4		;d=d+incrE
	bra.s	.store

.choose_ne
	add.w	d7,d4		;d=d+incrNE
	subq.w	#1,d0		;dec x (left)

.store
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	bra.s	.loop

.end_line
	move.l	#-1,(a0)+	;mark eol
	movem.l	(a7)+,d0-a6
	
	rts	


*******************
** VERTICAL LINE **
*******************

rlgfx_midpoint_vertical:
	cmp.w	d3,d1			;check direction
	bgt	rlgfx_midpoint_vertical_up

	sub.w	d1,d3		;dy=line length
	subq.w	#1,d3		;-1 for dbra
	bmi	.end_line

.line	addq.w	#1,d1		;go down
	move.w	d0,(a0)+	;store x
	move.w	d1,(a0)+	;store y
	dbra	d3,.line	;loop line length

.end_line	
	move.l	#-1,(a0)+
	movem.l	(a7)+,d0-a6
	rts

rlgfx_midpoint_vertical_up
	move.w	d1,d2		;store y1
	sub.w	d3,d2		;dy=line length
	subq.w	#1,d2		;-1 for dbra
	bmi	.end_line

.line	subq.w	#1,d1		;go up
	move.w	d0,(a0)+	;first x
	move.w	d1,(a0)+	;first y
	dbra	d2,.line	;loop line length

.end_line	
	move.l	#-1,(a0)+
	movem.l	(a7)+,d0-a6
	rts

*********************
** HORIZONTAL LINE **
*********************

rlgfx_midpoint_horizontal:
	cmp.w	d2,d0			;check direction
	bgt	rlgfx_midpoint_horizontal_left

rlgfx_midpoint_horizontal_right
	sub.w	d0,d2
	subq.w	#1,d2
	bmi.s	.end_line

.line	addq.w	#1,d0
	move.w	d0,(a0)+
	move.w	d1,(a0)+
	dbra	d2,.line

.end_line	
	move.l	#-1,(a0)+
	movem.l	(a7)+,d0-a6
	rts

rlgfx_midpoint_horizontal_left

	move.w	d0,d3
	sub.w	d2,d3
	subq.w	#1,d3
	bmi.s	.end_line

.line	subq.w	#1,d0
	move.w	d0,(a0)+
	move.w	d1,(a0)+
	dbra	d3,.line

.end_line	
	move.l	#-1,(a0)+
	movem.l	(a7)+,d0-a6
	rts

***************************************************************************
	SECTION DATA
***************************************************************************	

***************************************************************************
	SECTION BSS
***************************************************************************	
	even
	RSRESET

rlgfx_buffer_size	rs.b	1
	even

rlgfx_gfx_space:	ds.b	rlgfx_buffer_size
