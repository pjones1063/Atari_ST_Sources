
This is a revised version of the shell-style pattern matcher posted to
comp.sources.misc in March.  Lars and I replaced the two mutually-
recursive routines with in-line code for the star case.  The source also
now has detailed comments on how the trickier part works.

Basically, this routine compares text against a specified pattern
and returns 0 if the text doesn't match the pattern, or non-zero if it
does.  The patterns can have the following elements:
        *               Any set of characters
        ?               Any single character
        [...]           Any character in the range ...
        [^...]          Any character not in the range ...
        \* \? \[        A * ? or [ character
        x               The character x

For more details, see the manual page.  There is no Makefile; install
according local custom.  It runs on pretty much any machine with a C
compiler.

From the original README:
    This small routine is an efficient pattern-matcher for shell-style
    wildcards.  I wrote and posted it five year ago.  Since then other
    people have picked it up (notably Gilmore's TAR).  Others have posted
    fixes, which usually introduced bugs (Lars is the notable exception).
    It's probably about time that this got archived somewhere ...  I'm not
    interested in any other languages, nor particularly in seeing new
    features other than performance gains.

I hope you find this useful.  I hope you don't pretend that you wrote it.
        /rich $alz
        <rsalz@bbn.com>
        April, 1991
