#/bin/csh
$HOME/sbprolog/sim/sbprolog -p 200000 -m 500000 $HOME/sbprolog/modlib/\$readloop <<ENDSIM
compile( '\$arith.P',        '../\$arith',     [v] ).
compile( '\$assert.P',       '../\$assert',    [v] ).
compile( '\$bio.P',          '../\$bio',       [v] ).
compile( '\$blist.P',        '../\$blist',     [v] ).
compile( '\$bmeta.P',        '../\$bmeta',     [v] ).
compile( '\$buff.P',         '../\$buff',      [v] ).
compile( '\$call.P',         '../\$call',      [v] ).
compile( '\$compare.P',      '../\$compare',   [v] ).
compile( '\$consult.P',      '../\$consult',   [v] ).
compile( '\$currsym.P',      '../\$currsym',   [v] ).
compile( '\$db.P',           '../\$db',        [v] ).
compile( '\$dbcmpl.P',       '../\$dbcmpl',    [v] ).
compile( '\$dcg.P',          '../\$dcg',       [v] ).
compile( '\$deb.P',          '../\$deb',       [v] ).
compile( '\$decompile.P',          '../\$decompile',       [v] ).
compile( '\$defint.P',       '../\$defint',    [v] ).
compile( '\$et.P',           '../\$et',        [v] ).
compile( '\$glob.P',         '../\$glob',      [v] ).
compile( '\$init_sys.P',     '../\$init_sys',  [v] ).
compile( '\$inlines.P',      '../\$inlines',   [v] ).
compile( '\$io.P',           '../\$io',        [v] ).
compile( '\$listutil1.P',    '../\$listutil1', [v] ).
compile( '\$mac.P',          '../\$mac',       [v] ).
compile( '\$meta.P',         '../\$meta',      [v] ).
compile( '\$name.P',         '../\$name',      [v] ).
compile( '\$o.P',            '../\$o ',        [v] ).
compile( '\$osys.P',         '../\$osys',      [v] ).
compile( '\$portray.P',      '../\$portray',   [v] ).
compile( '\$prag.P',         '../\$prag',      [v] ).
compile( '\$prof.P',         '../\$prof',      [v] ).
compile( '\$prorc.P',        '../\$prorc',     [v] ).
compile( '\$read.P',         '../\$read',      [v] ).
compile( '\$read_curr_op.P', '../\$read_curr_op', [v] ).
compile( '\$readloop.P',     '../\$readloop',  [v] ).
compile( '\$retr.P',         '../\$retr',      [v] ).
compile( '\$record.P',         '../\$record',      [v] ).
compile( '\$setof.P',        '../\$setof',     [v] ).
compile( '\$statistics.P',   '../\$statistics',[v] ).
compile( '\$version.P',      '../\$version',   [v] ).
ENDSIM
