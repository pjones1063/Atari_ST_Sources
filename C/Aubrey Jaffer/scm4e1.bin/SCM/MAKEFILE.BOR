# Makefile for SCM (Scheme implementation intended for JACAL) for Borland C.
# Copyright (C) 1990, 1991, 1992, 1993 Aubrey Jaffer.
# See the file "COPYING" for terms applying to this program

# Pathname where Init.scm resides.  This directory must also contain COPYING.
IMPLINIT=c:\\\scm\\\Init.scm
# If pathname where Init.scm resides is not known in advance then
# SCM_INIT_PATH is the environment variable whose value is the
# pathname where Init.scm resides.
# IMPLINIT=

# Use large memory model
MEM=-ml
# -f- no floating point
# -c compile to .obj file
# -d merge duplicate strings
# -O jump optimization
# -Z register optimization
# -G optimize for speed
# -w-pro to eliminate "without prototype" messages
# -N stack bounds checking

# -DFLOATS if you want floating point numbers
# -DENGNOT for engineering notation instead of scientific notation.
# -DRTL if this is a run-time library only (no interactive top level)
# -DRECKLESS if you want most scm error checking disabled.
# For integer only:
#CFLAGS=-c -d -f- -O -Z -G -w-pro
#LFLAGS=
# For normal compile:
CFLAGS=-c -d -O -Z -G -DFLOATS -w-pro -N
LFLAGS=

# For turtlscm compile?:
#CFLAGS=-c -a -d -r -w -G -O -Z -v- -y- -N- -O-a -k- \
#-Ob -Oe -Oi -Og -Ol -Om -Op -Ov -w-pro -w-sig -DFLOATS

# For Debugging:
#CFLAGS=-c -f- -O -N -v -y
#LFLAGS=-M -v

# INITS= the initialization calls for user extension files.
#File:	INITS line:		functions defined:
#sc2.c	init_sc2();	substring-move-left!, substring-move-right!,
#			substring-fill!, append!, and last-pair
#rgx.c	init_rgx();	regcomp and regexec.
#turtlegr.c init_turtlegr(); help-gr and lots others.
INITS=-DINITS=init_sc2();

CC=bcc
.c.obj:
	$(CC) $(CFLAGS) $(MEM) {$< }
# if that doesn't work try:
#	$(CC) $(CFLAGS) $(MEM) $<
all:	scm.exe turtlscm.exe
scm.exe:	scm.obj time.obj repl.obj scl.obj sys.obj eval.obj \
		subr.obj sc2.obj unif.obj
	$(CC) $(LFLAGS) $(MEM) scm.obj time.obj repl.obj scl.obj \
	sys.obj eval.obj subr.obj sc2.obj unif.obj
turtlscm:	turtlscm.exe
turtlscm.exe:	turtlscm.obj time.obj repl.obj scl.obj sys.obj eval.obj \
		subr.obj sc2.obj unif.obj turtlegr.obj
	$(CC) $(LFLAGS) $(MEM) \
	turtlscm.obj turtlegr.obj time.obj repl.obj scl.obj \
	sys.obj eval.obj subr.obj sc2.obj unif.obj graphics.lib
turtlegr.obj:   turtlegr.c scm.h scmfig.h turtle
sys.obj:	sys.c scm.h scmfig.h
eval.obj:	eval.c scm.h scmfig.h
subr.obj:	subr.c scm.h scmfig.h
time.obj:	time.c scm.h scmfig.h
repl.obj:	repl.c scm.h scmfig.h
	$(CC) $(CFLAGS) $(MEM) repl.c
scm.obj:	scm.c scm.h patchlvl.h scmfig.h makefile
	$(CC) $(CFLAGS) $(MEM) -DIMPLINIT="$(IMPLINIT)" $(INITS) scm.c
turtlscm.obj:	scm.c scm.h patchlvl.h scmfig.h makefile
	$(CC) $(CFLAGS) $(MEM) -DINITS=init_turtlegr(); scm.c
	ren scm.obj turtlscm.obj
scl.obj:	scl.c scm.h scmfig.h
sc2.obj:	sc2.c scm.h scmfig.h
unif.obj:	unif.c scm.h scmfig.h
