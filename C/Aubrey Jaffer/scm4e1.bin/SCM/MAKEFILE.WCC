# Makefile for SCM for Watcom 9.0
# Copyright (C) 1993 Stephen Schissler
# See the file "COPYING" for terms applying to this program

# Pathname where Init.scm resides.  This directory must also contain COPYING.
IMPLINIT="C:\\scm\\Init.scm"
# If pathname where Init.scm resides is not known in advance then
# SCM_INIT_PATH is the environment variable whose value is the
# pathname where Init.scm resides.
#IMPLINIT=

# /d2             full symbolic debugging information
# /m{s,m,c,l,f}   memory model (Small,Medium,Compact,Large,Flat)
# /o{a,c,d,e,i,l,r,s,t,x} control optimization, /ox is equivalent to /oilr /s
# /of             generate traceable stack frames as needed
# /z{a,e}         disable/enable language extensions
# /3r             generate 386 instructions
# /zq             quiet mode operation
#
# /dFLOATS if you want floating point numbers
# /dENGNOT for engineering notation instead of scientific notation.
# /dRTL if this is a run-time library only (no interactive top level)
# /dRECKLESS if you want most scm error checking disabled.

MEM = /mf
LINK = wlinkp
CC = WCC386P

# For Debugging:
#CFLAGS = /d2 /ze /od /3s /zq /w3 /dFLOATS
#LFLAGS = option quiet option stack=40000 DEBUG ALL FILE
NOSTACKP = /s

# For normal compile:
CFLAGS = /d2 /ze /oxt /3s /zq /w3 /dFLOATS
LFLAGS = option quiet option stack=40000 FILE

# INITS= the initialization calls for user extension files.
#File:	INITS line:		functions defined:
#sc2.c	init_sc2();	substring-move-left!, substring-move-right!,
#			substring-fill!, append!, and last-pair
#rgx.c	init_rgx();	regcomp and regexec.
INITS=/dINITS="init_sc2();"

scm.exe:	scm.obj time.obj repl.obj scl.obj sys.obj eval.obj \
                subr.obj sc2.obj unif.obj
	$(LINK) $(LFLAGS) scm,time,repl,scl,sys,eval,subr,sc2,unif
scm.obj:	scm.c scm.h scmfig.h patchlvl.h
	$(CC) $(CFLAGS) $(MEM) /dIMPLINIT=$(IMPLINIT) $(INITS) scm.c
repl.obj:	repl.c scm.h scmfig.h
	$(CC) $(CFLAGS) $(MEM) repl.c
sys.obj:	sys.c scm.h scmfig.h
	$(CC) $(CFLAGS) $(MEM) sys.c
eval.obj: eval.c scm.h
	$(CC) $(CFLAGS) $(MEM) eval.c
time.obj:	time.c scm.h
	$(CC) $(CFLAGS) $(MEM) time.c
subr.obj:	subr.c scm.h
	$(CC) $(CFLAGS) $(MEM) subr.c
scl.obj:	scl.c scm.h
	$(CC) $(CFLAGS) $(MEM) scl.c
sc2.obj:	sc2.c scm.h
	$(CC) $(CFLAGS) $(MEM) sc2.c
unif.obj:	unif.c scm.h
	$(CC) $(CFLAGS) $(MEM) unif.c
