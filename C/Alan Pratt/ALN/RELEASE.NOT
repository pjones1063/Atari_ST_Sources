\"
\" This file redefines some -me macros: $p is "print section header"
\" and $c is "print chapter header" -- I forget what all they do.
\" 
.de $p
.if (\\n(si>0)&(\\n(.$>2) \
.	nr $i \\$3*\\n(si
.in \\n($iu
.ie !"\\$1\\$2"" \
\{\
.	sp \\n(ssu
.	ne \\n(.Lv+\\n(.Vu+\\n(psu+(\\n(spu*\\n($ru*\\n(.Lu)
.	ie \\n(.$>2 \
.		ti -(\\n(siu-\\n(sou)
.	el \
.		ti +\\n(sou
.	@F \\n(sf
.	sz \\n(spu
.	if \\$3>0 \
.		$\\$3
.	if \w"\\$1">0 \\$1\f1\ \  \"
.\}
.el \
.	sp \\n(psu
.@F \\n(pf
.sz \\n(ppu
.br
..
\" end-chapter macro -c; used at the end of each input file (one ch per file)
.de -c
.br
.if \nO \
\{\
.	if o \
\{\ 
.		bp
.		sp 1i
.		rs
.		ep
.\}
.\}
..
.de $C
.in 0
..
\" si: section indent for successive sections (-me)
.nr si 4
\" so: section name outdent (-me)
.nr so 0
\" bi: block indent (-me)
.nr bi 0
\" bs: space before & after a block (-me)
.nr bs 0
\" sf: section name font (-me)
.nr sf 3
\" tf: text font (-me)
.nr tf 1
.ll 6.5i

These are release notes for ALN, the Atari Linker, detailing the
changes between the FIRST release, version 1.00, on 6/26/87, and the
latest release (dated 90/01/24).

.sh 1 "SEARCH PATH FOR MODULES"

If you have an environment variable "ALNPATH=path" then ALN will prepend
"path" to file names when it can't find that file (or file.o) in the
current directory.  The command to set this might be 

	setenv ALNPATH=e:\lib   or   setenv ALNPATH e:\lib

The new command-line switch "-y path" does the same thing, and
supercedes the ALNPATH environment variable if they are both present.

.sh 1 "NEW COMMAND-LINE OPTIONS"

All command-line switches may now be upper- or lower-case.

The -a option now has more flexibility: you can specify that any
segment should come after any other.  "xb" as a segment specifier means
"put this bss," "xd" means "put this after data," and "xt" means "put
this after text."

A new option, -h, allows you to set the hflags field of the PRG header
in the linker output.  "aln -h 7 ..." would set that field to 7 in the
output.  The value is entered the same way as -a arguments are.  The
meanings of the bits in this value are documented elsewhere.

A new option, -q, means "do a partial link (like -p), but also resolve
commons into the BSS."  Also, a new option, "-k name" means "add 'name'
to a list of symbols; after the link, make all symbols EXCEPT those on
the list local, not global." You may use -k for as many symbols as
necessary.  In combination with -q, this can add more modularity to a
project: you might have two  groups of object modules which need to
share global symbols within the group, but not outside it.  You can
link each group into a single module using -q, then link these
super-modules together to produce the program file. Use -k for those
symbols which really need to stay global: the symbols which are visible
to the other super-modules.

.ne 3
A single -u causes unresolved symbols to be listed, but the link
continues as if their values were zero.  Another -u can now be used
to suppress the listing, also.

.sh 1 "BUG FIXES"

The -d (desktop) flag didn't work as intended; now it does. 

Link68 considers a symbol of type COMMON to be unresolved when it
decides whether to extract a module from a library; now ALN does too.

ALN is now more compatible with the OLD Alcyon as68 (pre-version 4.14),
especially for symbols of type COMMON: the old assembler generated a
different type for these than the new one.

When linking absolute (with the -a flag), the symbol table was being
written even if you didn't specify -s or -l.  Now it is suppressed
unless you specify one of those switches.

Various minor bug fixes for exceptional situations.

.sh 1 "MISCELLANEOUS"

Errors like 16-bit overflow used to cause the link to abort
immediately. Now they are all reported, and THEN the link aborts.

ALN now clears the lower bit of the symbol type word as symbols are
read, because it uses that bit internally.  If your compiler produces
"alcyon-compatible" object modules, but uses the lower bit of the
symbol type word, you will lose that information.  (The link should
still work.)

ALN now supports extended argument processing on the MWC model.  If
your shell can use ARGV to pass arguments, you can pass an unlimited
number of arguments to ALN.  (The formal extended argument
specification from Atari requires that the "length" byte of the command
line be 0x7f to indicate that ARGV is in use, but this release of ALN
does not insist on that because it is not yet widespread.)

Command files (included with the -c option) can now contain comments: a
number-sign ("#") introduces a comment, and everything from there to
the end of the line is ignored.

.sh 1 "DOINDEX"

Previously, doindex reported "incomplete file header in archive" for
some perfectly normal archives; now it doesn't.

