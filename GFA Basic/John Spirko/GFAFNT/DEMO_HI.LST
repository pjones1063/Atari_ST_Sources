' GFA ~GEM FONT DEMO   written in GFA 2.5                               '
' DEMO_HI.LST      for HI RESOLUTION                                    '
' to load GEM fonts for SCREEN OUTPUT without GDOS                      '
'                                                                       '
' ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
' program by John Spirko  ~ with thanks to Mat Rubelj for his assistance'
' ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
' NOTE: address of the current fontheader may be different on the MEGA's'
' on 520ST/1040ST ~ pointer to the current fontheader at address 24626  '
'   Dpeek(24626)=1 for System font                                      '
' ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
'
Filename$="a:\BUSTER.FNT"
Fontname$="BUSTER.FNT"   ! requires BUSTER.FNT on same disk
'
If Exist(Fontname$)=True
  Print " Loading font file: ";Fontname$
  @Loadfont
Endif
'
' For-Next loop to swap bytes into proper Motorola format
'
For Index=1 To 78 Step 2                  ! swap first 78 bytes of FH
  @Swap_bytes
Next Index
'
Font_data_ptr%=Cvi(Mid$(Font$,77,2))      ! find length of FH + table(s)
'
For Index=79 To Font_data_ptr%-1 Step 2   ! finish swapping
  @Swap_bytes
Next Index
'
Font_id%=Cvi(Mid$(Font$,1,2))    !Font ID# which will be used in DEFTEXT
Height%=Cvi(Mid$(Font$,3,2))     !height in point size - see text
'
' ~ ~ ~ conversion of Fontheader pointers (offset values) ~ ~ ~
'
'     these values when added to the address of the font are too large
'     to be stored as a WORD (two byte number), which is just as well
'     since each of the following has to be swapped again, this time in
'     a low/high word format, and stored as a LONGWORD (four bytes)
'
Temp%=Cvi(Mid$(Font$,69,2))    ! convert Hor Offset Table (2 bytes)
Temp%=Temp%+Addr%              ! add the address of the new font
Temp$=Mkl$(Temp%)              ! convert it to a LONGWORD
Mid$(Font$,69,4)=Temp$         ! put into proper position (4 bytes)
'
' ****
'
Temp2%=Cvi(Mid$(Font$,73,2))   ! convert Character Offset Table (2 bytes)
Temp2%=Temp2%+Addr%            ! add address of new font
Temp2$=Mkl$(Temp2%)            ! convert it to a LONGWORD
Mid$(Font$,73,4)=Temp2$        ! put into proper position (4 bytes)
'
' ****
'
Temp3%=Cvi(Mid$(Font$,77,2))    ! convert Font Data Pointer (2 bytes)
Temp3%=Temp3%+Addr%             ! add the address of the new font
Temp3$=Mkl$(Temp3%)             ! convert it to a LONGWORD
Mid$(Font$,77,4)=Temp3$         ! put into proper position (4 bytes)
'
' ****
'
Lpoke 24626+84,Addr%       ! 24626 is the address of the current fontheader
'                          ! 24626+84 is the pointer to the next font
'                          ! which now points to new font address
'
' ****
'
' DEFTEXT [color],[attributes],[angle],[height],[fontnumber] see text
'
' ******CAUTION******
' IF THE TEXT SAMPLE CONTAINS A LETTER/LETTERS NOT OCCURING IN THE FONT
' THE PROGRAM WILL CRASH. FOR EXAMPLE IF THE FONT IS AN UPPER CASE ONLY
' FONT AND IF YOU USED 'TEXT 10,120,"ST Log" INSTEAD OF "ST LOG"
' THE LOWER CASE LETTERS DO NOT EXIST AND WILL CAUSE A SYSTEM CRASH
'
Deftext ,,,13,1
Text 10,40,"Sample of Monochrome System Font @ normal Height"
'
Deftext ,,,32,1
Text 10,70,"Sample of System Font~Height 32."
Deftext ,,,Height%,Font_id%
Text 0,120,"BLOCK"                ! when using a height other
Deftext ,,,Height%+8,Font_id%     ! than the original font size
Text 230,120,"BUSTER"             ! you may have to experiment
Deftext ,,,72,Font_id%            ! - as you can see by the screen
Text 10,230,"Bigger"              ! there can be some minor side
'                                 ! effects that distort the appearance.
Deftext ,,,Height%,Font_id%
Text 100,300,"Smaller"
'
Font$=""                        ! clear the font from memory and
'                               ! Reset the pointer so the operating
Lpoke 24626+84,0                ! system no longer points to the font
'                               ! when finished with the application
'
Print At(1,24);Space$(27);"~HIT ANY KEY TO CONTINUE~"
Repeat
Until Inkey$<>""
End
'
' * * * * * PROCEDURES * * * * *
'
Procedure Loadfont
  Open "I",#1,Fontname$
  Size%=Lof(#1)                   ! size of file
  Font$=Space$(Size%)             ! fill it with spaces
  Addr%=Varptr(Font$)             ! RAM address where font data is stored
  Bload Filename$,Addr%           ! where Filename$=path name + font file
  Close #1
Return
'
Procedure Swap_bytes
  Temp_a$=Mid$(Font$,Index,1)
  Temp_b$=Mid$(Font$,Index+1,1)
  Swap Temp_a$,Temp_b$
  Mid$(Font$,Index,1)=Temp_a$
  Mid$(Font$,Index+1,1)=Temp_b$
Return
