' ******************************************************************************
' ****                           EB Modeleur Universel        Version 2.73a ****
' ****                  Module surprise qui ne fait rien d'autre            ****
' **** (C) BARANGER Emmanuel   que d'afficher une boite en        GFA 3.5EF ****
' **** 12, rue de la tuilerie     3D pour dire deux trois trucs.            ****
' **** 86220 Dang‚ Saint Romain                                             ****
' **** France  T‚l‚phone : 49 86 41 39                           21/03/1996 ****
' ******************************************************************************
' ** Ce module, qui ne sert … rien, je l'ai ‚crit sp‚cialement pour y mettre  **
' ** toutes les remarques utiles au d‚veloppement de modules.                 **
' ** Alors, lisez tout bien comme il faut et tentez votre chance.             **
' ** Bien sur, vous l'aurrez remarquez, je programme en GFA. Mais, si quelques**
' ** courageux d‚sirent utiliser un autre langage, n'h‚sitez pas.             **
' **                                                                          **
' ** Je ne vous demanderais pas grand chose.                                  **
' **   D‚brouillez vous pour que vos modules fonctionnent sur toute la gamme  **
' **   ATARI. Et envoyez les moi pour que je les inclus dans le pack de       **
' **   EB_MODEL.                                                              **
' **                Vous avez d'avance tous mes remerciements                 **
' **                                      BARANGER Emmanuel (ELIJAH)          **
' ******************************************************************************
$m10000                                 ! L…, c'est pour le compilateur.
DEFFLT "a,b"                            ! Un petit bug du GEM, alors on corrige
variables_diverses                      ! Faut il un commentaire ?????
variables_reservees_au_gem              !       //
index_ressource_1                       !       //
index_ressource_2                       !       //
index_ressource_3                       !       //
index_du_ressource                      !       //
lire_le_fichier_de_transfert            ! Le fichier de transfert de EB_MODEL
definir_les_adresse                     ! Les adresse ressource de EB_MODEL
initialisation                          ! Quelques paramŠtres systŠme
RESERVE 10000                           ! On rend de la m‚moire pour le GEM
ap_id&=@appl_init                       ! Et une application, une !
IF WORD{{ADD(GB,4)}}<&H340              ! Si le GEM est inf‚rieur … 3.40
  chargement_des_routines_xrsrc         ! on charge les routines
ENDIF                                   ! XRSRC d'INTERFACE II en OVL
IF r_resident!=FALSE AND WORD{{ADD(GB,4)}}<&H340
  CHAR{coord_polygon%}="[3][Fichier OVERLAY.OVL|non trouv‚.|V‚rifier et recommencez.|][D‚sol‚]"+CHR$(0)
  ~@form_alert(1,coord_polygon%)        ! Affichage de l'alerte
  graf_mouse(m_off&,0)                  ! Et une souris en moins, une !
ELSE                                    ! Sinon...
  '    initialiser les routines XRSRC d'Interface II pour les ressources ‚tendus
  xrsrc_init
  IF @lire_le_ressource_module=TRUE     ! Oh ! un ressource dans le module
    IF machine|<5                       ! C'est pas un FLACON
      IF maxcol&<=3                     ! Y'a pas assez de couleurs
        environnement_mono              ! Mettre les ressource en gris tram‚
      ELSE
        environnement_coul              ! Mettre les ressource en gris clair
      ENDIF
    ELSE
      IF maxcol&<=3                     ! J'vous dis, y'a pas assez de couleurs
        environnement_mono              ! Mettre les ressource en gris tram‚
      ENDIF
    ENDIF
    graf_mouse(m_off&,0)                ! Et une souris en moins, une !
    gestion_surprise                    ! Allez, on travail un peu
    ~@xrsrc_free                        ! et puis on libŠre tout.
    xrsrc_exit                          ! Enfin, on enlŠve les routine XRSRC
  ENDIF
ENDIF
' ******************************************************************************
' ** Avant de finir, il faut obligatoirement ‚crire dans le chemin systŠme de **
' ** EB_MODEL un fichier contenant soit 0 (FALSE) soit -1 (TRUE). Voici       **
' ** pourquoi. Lorsque FALSE est renvoy‚ … EB_MODEL par l'interm‚diaire de ce **
' ** petit fichier, le modeleur redessine son ‚cran sans recalculer les       **
' ** objets. Alors qu'avec TRUE, il recalcul tout. Mais … quoi cela peut-il   **
' ** donc servir? Et bien c'est trŠs simple. Si par bonheur quelqu'un ou      **
' ** quelqu'une (il ne faut jamais oublier les femmes) ecrivait un module     **
' ** qui modifie un tant soit peu les objets (position, formes etc..)         **
' ** aprŠs retour … EB_MODEL, ce dernier ne saurrait pas qu'il y a eu         **
' ** modification. Or donc, il faut le lui dire.                              **
' ** Mais, diront certains...Pourquoi ne pas recalculer … chaque fois.        **
' ** A cela je r‚ponderais : Le temps c'est de l'argent. Et lorsque le module **
' ** ne modifie rien, pourquoi perdre du temps … recalculer se que l'on       **
' ** connait d‚j…. Voyez le module d'impression par exemple.                  **
' ******************************************************************************
OPEN "O",#1,CHAR{disque_systeme%}+CHAR{path_systeme%}+"EB_MODEL.SHM"+CHR$(0)
PRINT #1,FALSE                          ! Pas de recalcul dans EB_MODEL
CLOSE #1
QUIT
'
PROCEDURE lire_le_fichier_de_transfert
  ' ****************************************************************************
  ' ** Avant de lancer un module, EB_MODEL ‚crit un nombre important de chose **
  ' ** dans un fichier nomm‚ EB_MODEL.SHM.                                    **
  ' ** Voici donc l'explication de ces choses :                               **
  ' **                                                                        **
  ' **  station% : Adresse d'une zone de m‚moire contenant toutes les         **
  ' **             informations renvoy‚es par OPEN VIRTUAL SCREEN WORKSTATION **
  ' **  etendue% : Adresse d'une zone de m‚moire contenant toues les          **
  ' **             informations renvoy‚es par EXTEND INQUIRE FUNCTION         **
  ' **                                                                        **
  ' **  machine| : Valeur renvoy‚e par le cookie _MCH                         **
  ' **             0 : Un ST                                                  **
  ' **             1 : Un STe                                                 **
  ' **             2 : Un ST Book                                             **
  ' **             3 : Un Falcon                                              **
  ' **             4 : Un TT                                                  **
  ' **             5 : Un Falcon Rev.3                                        **
  ' **             6 : Un Falcon 40 (Et oui, le cookie existe)                **
  ' **             ? : ??                                                     **
  ' **                                                                        **
  ' **  pro|     : Valeur renvoy‚e par le cookie _CPU                         **
  ' **             0 : 68000 (Ca commence … faire vieillot)                   **
  ' **             1 : 68010 (tien ! une bidouille)                           **
  ' **             2 : 68020 (Oh ! une encore une bidouille)                  **
  ' **             3 : 68030 (L…, c'est d‚j… pas mal)                         **
  ' **             4 : 68040 (On commence … respirer)                         **
  ' **             5 : 68060 (L…, on saute de joie)                           **
  ' **             ? : ??    (Mais que nous r‚serv‚ l'avenir ?...)            **
  ' **                                                                        **
  ' **  copro|   : Valeur renvoy‚e par le cookie _FPU                         **
  ' **             0 : Y'en a pas bouououououou!!!                            **
  ' **             1 : 68881 ou 68882                                         **
  ' **             2 : 68881                                                  **
  ' **             3 : 68882                                                  **
  ' **             4 : 68040 (en copro, ‡a fait riche)                        **
  ' **             ? : ??                                                     **
  ' **                                                                        **
  ' **  video|   : Valeur renvoy‚e par le cookie _VDO                         **
  ' **             0 : Mode ST                                                **
  ' **             1 : Mode STe (scroll hard)                                 **
  ' **             2 : Mode ST Book                                           **
  ' **             3 : Mode TT                                                **
  ' **             4 : Mode Falcon                                            **
  ' **             ? : ??                                                     **
  ' **                                                                        **
  ' **  backup!  : Un drapeau sur un bit pour savoir si les sauvegardes en    **
  ' **             *.BAK sont activ‚es ou non.                                **
  ' **                                                                        **
  ' **  primitive& : Nombre d'objets non primitives dans la scŠne en m‚moire  **
  ' **               +13. De 0 … 12 correspondent les 13 primitives de bases  **
  ' **               … savoir : 0 = Segment                                   **
  ' **                          1 = Boite                                     **
  ' **                          2 = SphŠre                                    **
  ' **                          3 = Prisme                                    **
  ' **                          4 = Triangle                                  **
  ' **                          5 = Tronc de c“ne                             **
  ' **                          6 = H‚misphŠre                                **
  ' **                          7 = Boite aux bords arrondis                  **
  ' **                          8 = Disque                                    **
  ' **                          9 = Pyramide                                  **
  ' **                         10 = Colonne                                   **
  ' **                         11 = Plan                                      **
  ' **                         12 = Tore                                      **
  ' **                aprŠs, se sont soit des objets facettes, soit des CSG,  **
  ' **                soit autre choses (bicubic...etc...)                    **
  ' **                                                                        **
  ' **  nombre_d_objets&   : Le nombre d'objets de la scŠne en m‚moire +1     **
  ' **  limite_des_objets& : Nombre maximum d'objets possible (paramŠtrage)   **
  ' **  ress%              : Adresse des arbres des ressources de EB_MODEL    **
  ' **  alertes%           : Adresse des arbres des boites d'alertes          **
  ' **                                                                        **
  ' **  include_texture%   : Adresse de d‚part de la liste des textures       **
  ' **  include_couleur%   :    //   //  //    // //  //   //  couleurs       **
  ' **  include_pigment%   :    //   //  //    // //  //   //  pigments       **
  ' **  include_normal%    :    //   //  //    // //  //   //  normals        **
  ' **  include_finish%    :    //   //  //    // //  //   //  finish         **
  ' **  total_texture&     : Nombre de texture dans la liste texture+1        **
  ' **  total_couleur&     :    //  //   //     //  //  //   couleur+1        **
  ' **  total_pigment&     :    //  //   //     //  //  //   pigment+1        **
  ' **  total_normal&      :    //  //   //     //  //  //   normal+1         **
  ' **  total_finish&      :    //  //   //     //  //  //   finish+1         **
  ' **                                                                        **
  ' **  hwind%             : Adresse des index de fenˆtres                    **
  ' **                                                                        **
  ' **  univers%           : Adresse m‚moire des d‚finition d'objets          **
  ' **  camera%            : Adresse m‚moire de d‚finition de la cam‚ra       **
  ' **  source%            : Adresse m‚moire de d‚finition des lumiŠre        **
  ' **  defaut%            : Adresse m‚moire de d‚finition texture par d‚faut **
  ' **  brouil%            : Adresse m‚moire de d‚finition fond et brouillard **
  ' **  objet%             : Adresse m‚moire de definition des primitives     **
  ' **                                                                        **
  ' **  mem_nom%           : Une zone de 512 octets pour les chemins          **
  ' **  nom_en_cours%      : Une zone de 14 octets pour le nom de la scŠne    **
  ' **  nom_divers%        : Une zone de 14 octets pour les noms de fichier   **
  ' **  nom_mouvement%     : Une zone de 14 octets pour les noms de fichier   **
  ' **  masque%            : Une zone de 4 octets pour les masques            **
  ' **  msq%               : Une zone de 4 octets pour les masques            **
  ' **  mem_che%           : Une zone de 512 octets pour les chemins          **
  ' **  disque%            : Une zone de 2 octets pour les disques            **
  ' **  path%              : Une zone de 512 octets pour les chemins          **
  ' **  disque_systeme%    : Une zone de 2 octets pour le disque systŠme      **
  ' **  path_systeme%      : Une zone de 512 octets pour le chemin systŠme    **
  ' **  coord_polygon%     : Une zone de 1024 octets pour les dessins VDI     **
  ' **                                                                        **
  ' **  transfert%         : Une zone de taille variable pour les calculs     **
  ' **  version%           : Zone de m‚moire pour le num‚ro de version        **
  ' **  date%              : Zone de m‚moire pour la date de la version       **
  ' **  smooth!            : Drapeau pour indiquer SMOOTH_TRIANGLE ou non     **
  ' **  primitives_simples!: Drapeau pour indiquer le type de primitives      **
  ' **                                                                        **
  ' ****************************************************************************
  OPEN "I",#1,"EB_MODEL.SHM"
  ' --------------------- Station GEM/VDI
  INPUT #1,station%
  INPUT #1,etendue%
  ' --------------------- Quelques infos sur la machine de travail
  INPUT #1,machine|
  INPUT #1,pro|
  INPUT #1,copro|
  INPUT #1,video|
  ' --------------------- Les drapeaux
  INPUT #1,backup!
  ' --------------------- Nombre de primitives secondaire+13
  INPUT #1,primitive&
  ' --------------------- Nombre d'objets de la scŠne
  INPUT #1,nombre_d_objets&
  INPUT #1,limite_des_objets&
  ' --------------------- Les zones de m‚moire pour les arbres utiles
  INPUT #1,ress%
  INPUT #1,alertes%
  ' --------------------- Zone de m‚moire de d‚finition des textures et couleurs
  INPUT #1,include_texture%
  INPUT #1,include_couleur%
  INPUT #1,include_pigment%
  INPUT #1,include_normal%
  INPUT #1,include_finish%
  ' --------------------- Et le nombre total d'‚l‚ments de chaque zone
  INPUT #1,total_couleur&
  INPUT #1,total_texture&
  INPUT #1,total_pigment&
  INPUT #1,total_normal&
  INPUT #1,total_finish&
  ' --------------------- Zone de m‚moire des indexs de fenˆtres
  INPUT #1,hwind%
  ' --------------------- Les zones de m‚moire pour la scŠne
  INPUT #1,univers%
  INPUT #1,camera%
  INPUT #1,source%
  INPUT #1,defaut%
  INPUT #1,brouil%
  INPUT #1,objet%
  ' --------------------- Les zone de m‚moire pour les noms de fichiers
  INPUT #1,mem_nom%
  INPUT #1,nom_en_cours%
  INPUT #1,nom_divers%
  INPUT #1,nom_mouvement%
  INPUT #1,masque%
  INPUT #1,msq%
  INPUT #1,mem_che%
  INPUT #1,disque%
  INPUT #1,path%
  INPUT #1,disque_systeme%
  INPUT #1,path_systeme%
  INPUT #1,coord_polygon%
  ' --------------------- Les autres variables
  INPUT #1,transfert%
  INPUT #1,version%
  INPUT #1,date%
  INPUT #1,smooth!
  INPUT #1,primitives_simples!
  CLOSE #1
RETURN
PROCEDURE initialisation
  xmax&=INT{station%}
  ymax&=INT{ADD(station%,2)}
  maxcol&=PRED(INT{ADD(station%,26)})
  plan_systeme&=INT{ADD(etendue%,8)}
  couleurs_totales%=2^plan_systeme&
  coeftxt|=-1*(ymax&=>240)-2*(ymax&<240)
  ecran%=((SUCC(xmax&)/8)*SUCC(ymax&)*plan_systeme&)
RETURN
PROCEDURE definir_les_adresse
  LOCAL decalage%
  LET decalage%=108
  adr_quitter%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_memoire%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_notrouve%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_danger%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_limite%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_liste%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_nofenetre%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_existe%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_vide%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_movl1%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_racctrou%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_ficinclu%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_no3d2%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_pov_def%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_nomimage%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_depasse%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_imprimante%=ADD(alertes%,decalage%)
  ADD decalage%,SUCC(LEN(CHAR{ADD(alertes%,decalage%)}))
  adr_en_cours%=ADD(alertes%,decalage%)
  adr_menu%={ress%}
  adr_info%={ADD(ress%,4)}
  adr_infosysteme%={ADD(ress%,8)}
  adr_outils%={ADD(ress%,12)}
  adr_modifier%={ADD(ress%,16)}
  adr_moditaille%={ADD(ress%,20)}
  adr_tourextrude%={ADD(ress%,24)}
  adr_image%={ADD(ress%,28)}
  adr_generation%={ADD(ress%,32)}
  adr_comment%={ADD(ress%,36)}
  adr_lumieres%={ADD(ress%,40)}
  adr_aide%={ADD(ress%,44)}
  adr_fonctions%={ADD(ress%,48)}
  adr_stat%={ADD(ress%,52)}
  adr_racc%={ADD(ress%,56)}
  adr_merci%={ADD(ress%,60)}
  adr_camera%={ADD(ress%,64)}
  adr_lanceur%={ADD(ress%,68)}
  adr_parametres%={ADD(ress%,72)}
  adr_fractals%={ADD(ress%,76)}
  adr_copier%={ADD(ress%,80)}
  adr_animation%={ADD(ress%,84)}
  adr_textures%={ADD(ress%,88)}
  adr_pigment%={ADD(ress%,92)}
  adr_normal%={ADD(ress%,96)}
  adr_finish%={ADD(ress%,100)}
  adr_predefinie%={ADD(ress%,104)}
  adr_divers%={ADD(ress%,108)}
  adr_popuptyp%={ADD(ress%,112)}
  adr_popupchoix%={ADD(ress%,116)}
  adr_popuplum%={ADD(ress%,120)}
  adr_popupfnc%={ADD(ress%,124)}
  adr_popupval%={ADD(ress%,128)}
  adr_messages%={ADD(ress%,132)}
  adr_3d2%={ADD(ress%,136)}
  adr_analyses%={ADD(ress%,140)}
  adr_anajauge%={ADD(ress%,144)}
  adr_stat_par_objet%={ADD(ress%,148)}
  adr_popup_affichage%={ADD(ress%,152)}
  adr_popup_parametres%={ADD(ress%,156)}
  adr_quartic%={ADD(ress%,160)}
  adr_quadric%={ADD(ress%,164)}
  adr_spot%={ADD(ress%,168)}
  adr_fenetre%={ADD(ress%,172)}
  adr_bibliotheque%={ADD(ress%,176)}
  adr_chemin_include%={ADD(ress%,180)}
  adr_modules%={ADD(ress%,184)}
RETURN
PROCEDURE index_ressource_1           ! Variables globales du ressource nø1
  REM Indice du ressource pour EBMODSTF
  '
  LET menu&=0 ! Arbre menu
  LET minfo&=11 ! STRING dans l'arbre MENU
  LET mnouvell&=20 ! STRING dans l'arbre MENU
  LET mcharges&=22 ! STRING dans l'arbre MENU
  LET msauvers&=23 ! STRING dans l'arbre MENU
  LET msauvnom&=24 ! STRING dans l'arbre MENU
  LET m3d2&=26 ! STRING dans l'arbre MENU
  LET mimprime&=28 ! STRING dans l'arbre MENU
  LET msauverp&=29 ! STRING dans l'arbre MENU
  LET medtexte&=31 ! STRING dans l'arbre MENU
  LET mvimage&=32 ! STRING dans l'arbre MENU
  LET mlancpov&=34 ! STRING dans l'arbre MENU
  LET mquitter&=36 ! STRING dans l'arbre MENU
  LET mmodifie&=38 ! STRING dans l'arbre MENU
  LET meffacer&=39 ! STRING dans l'arbre MENU
  LET munion&=41 ! STRING dans l'arbre MENU
  LET mbibl&=43 ! STRING dans l'arbre MENU
  LET mtexture&=45 ! STRING dans l'arbre MENU
  LET mmodtai&=46 ! STRING dans l'arbre MENU
  LET mcopier&=48 ! STRING dans l'arbre MENU
  LET mstatist&=50 ! STRING dans l'arbre MENU
  LET msegment&=52 ! STRING dans l'arbre MENU
  LET mboite&=53 ! STRING dans l'arbre MENU
  LET mprisme&=54 ! STRING dans l'arbre MENU
  LET mtube&=55 ! STRING dans l'arbre MENU
  LET mplan&=56 ! STRING dans l'arbre MENU
  LET msphere&=57 ! STRING dans l'arbre MENU
  LET mhemisph&=58 ! STRING dans l'arbre MENU
  LET mtor&=59 ! STRING dans l'arbre MENU
  LET mpyramid&=60 ! STRING dans l'arbre MENU
  LET mcone&=61 ! STRING dans l'arbre MENU
  LET mtronc&=62 ! STRING dans l'arbre MENU
  LET mdisque&=63 ! STRING dans l'arbre MENU
  LET mquartic&=65 ! STRING dans l'arbre MENU
  LET mquadric&=66 ! STRING dans l'arbre MENU
  LET mcolonne&=67 ! STRING dans l'arbre MENU
  LET mblobs&=68 ! STRING dans l'arbre MENU
  LET mtouextr&=70 ! STRING dans l'arbre MENU
  LET mcamera&=72 ! STRING dans l'arbre MENU
  LET msource&=73 ! STRING dans l'arbre MENU
  LET mface&=75 ! STRING dans l'arbre MENU
  LET mdos&=76 ! STRING dans l'arbre MENU
  LET mdroite&=78 ! STRING dans l'arbre MENU
  LET mgauche&=79 ! STRING dans l'arbre MENU
  LET mdessus&=81 ! STRING dans l'arbre MENU
  LET mdessous&=82 ! STRING dans l'arbre MENU
  LET m3dfil&=84 ! STRING dans l'arbre MENU
  LET m3dcache&=85 ! STRING dans l'arbre MENU
  LET m3dlumi&=86 ! STRING dans l'arbre MENU
  LET maide&=88 ! STRING dans l'arbre MENU
  LET mraccour&=89 ! STRING dans l'arbre MENU
  LET mfractal&=90 ! STRING dans l'arbre MENU
  LET mmontagn&=91 ! STRING dans l'arbre MENU
  LET manim&=92 ! STRING dans l'arbre MENU
  LET maffiout&=94 ! STRING dans l'arbre MENU
  LET mparamet&=96 ! STRING dans l'arbre MENU
  '
  LET info&=1 ! Formulaire/Dialogue
  LET bartit01&=2 ! FBOXTEXT dans l'arbre INFO
  LET merci&=15 ! IBOX dans l'arbre INFO
  LET infomem&=16 ! FTEXT dans l'arbre INFO
  LET fininfo&=20 ! IBOX dans l'arbre INFO
  LET infsyste&=23 ! IBOX dans l'arbre INFO
  LET sharewar&=26 ! IBOX dans l'arbre INFO
  LET bardev&=29 ! FBOXTEXT dans l'arbre INFO
  '
  LET infosyst&=2 ! Formulaire/Dialogue
  LET infosou0&=5 ! BOX dans l'arbre INFOSYST
  LET sysmachi&=7 ! FBOXTEXT dans l'arbre INFOSYST
  LET sysproce&=8 ! FBOXTEXT dans l'arbre INFOSYST
  LET syscopro&=9 ! FBOXTEXT dans l'arbre INFOSYST
  LET systos&=10 ! FBOXTEXT dans l'arbre INFOSYST
  LET sysgem&=11 ! FBOXTEXT dans l'arbre INFOSYST
  LET sysgedo&=12 ! FBOXTEXT dans l'arbre INFOSYST
  LET sysvideo&=13 ! FBOXTEXT dans l'arbre INFOSYST
  LET sysnbrpl&=14 ! FBOXTEXT dans l'arbre INFOSYST
  LET sysnbrco&=15 ! FBOXTEXT dans l'arbre INFOSYST
  LET systaill&=16 ! FBOXTEXT dans l'arbre INFOSYST
  LET infosou1&=17 ! BOX dans l'arbre INFOSYST
  LET sysmint&=19 ! FBOXTEXT dans l'arbre INFOSYST
  LET sysok&=23 ! IBOX dans l'arbre INFOSYST
  LET infoshar&=24 ! BOX dans l'arbre INFOSYST
  '
  LET outils&=3 ! Formulaire/Dialogue
  LET icharger&=5 ! ICON dans l'arbre OUTILS
  LET isauver&=6 ! ICON dans l'arbre OUTILS
  LET ispov&=7 ! ICON dans l'arbre OUTILS
  LET iliste&=8 ! ICON dans l'arbre OUTILS
  LET istat&=9 ! ICON dans l'arbre OUTILS
  LET iinfo&=10 ! ICON dans l'arbre OUTILS
  LET itrait&=11 ! ICON dans l'arbre OUTILS
  LET iboite&=12 ! ICON dans l'arbre OUTILS
  LET isphere&=13 ! ICON dans l'arbre OUTILS
  LET iprisme&=14 ! ICON dans l'arbre OUTILS
  LET ifcone&=15 ! ICON dans l'arbre OUTILS
  LET itroncon&=16 ! ICON dans l'arbre OUTILS
  LET idemisph&=17 ! ICON dans l'arbre OUTILS
  LET itube&=18 ! ICON dans l'arbre OUTILS
  LET idisque&=19 ! ICON dans l'arbre OUTILS
  LET ipyramid&=20 ! ICON dans l'arbre OUTILS
  LET icolonne&=21 ! ICON dans l'arbre OUTILS
  LET iplan&=22 ! ICON dans l'arbre OUTILS
  LET itor&=23 ! ICON dans l'arbre OUTILS
  LET itourext&=24 ! ICON dans l'arbre OUTILS
  LET itaille&=25 ! ICON dans l'arbre OUTILS
  LET imont&=26 ! ICON dans l'arbre OUTILS
  LET icarreau&=27 ! ICON dans l'arbre OUTILS
  LET icsg&=28 ! ICON dans l'arbre OUTILS
  LET ireel&=29 ! ICON dans l'arbre OUTILS
  LET imodif&=30 ! ICON dans l'arbre OUTILS
  LET ioption&=31 ! ICON dans l'arbre OUTILS
  LET icamera&=32 ! ICON dans l'arbre OUTILS
  LET ilampe&=33 ! ICON dans l'arbre OUTILS
  LET itexture&=34 ! ICON dans l'arbre OUTILS
  LET iface&=35 ! ICON dans l'arbre OUTILS
  LET idroite&=36 ! ICON dans l'arbre OUTILS
  LET ihaut&=37 ! ICON dans l'arbre OUTILS
  LET idos&=38 ! ICON dans l'arbre OUTILS
  LET igauche&=39 ! ICON dans l'arbre OUTILS
  LET ibas&=40 ! ICON dans l'arbre OUTILS
  LET ifil&=41 ! ICON dans l'arbre OUTILS
  LET ifaces&=42 ! ICON dans l'arbre OUTILS
  LET iplein&=43 ! ICON dans l'arbre OUTILS
  LET izmoins&=44 ! ICON dans l'arbre OUTILS
  LET izplus&=45 ! ICON dans l'arbre OUTILS
  LET iztotal&=46 ! ICON dans l'arbre OUTILS
  LET izcentre&=47 ! ICON dans l'arbre OUTILS
  LET izredraw&=48 ! ICON dans l'arbre OUTILS
  LET izoom&=49 ! FBOXTEXT dans l'arbre OUTILS
  '
  LET modifier&=4 ! Formulaire/Dialogue
  LET fermpale&=4 ! ICON dans l'arbre MODIFIER
  LET modnum&=6 ! FBOXTEXT dans l'arbre MODIFIER
  LET nummod&=8 ! IBOX dans l'arbre MODIFIER
  LET modmoins&=11 ! IBOX dans l'arbre MODIFIER
  LET modplus&=14 ! IBOX dans l'arbre MODIFIER
  LET coul0&=17 ! BOX dans l'arbre MODIFIER
  LET modtyp&=18 ! FBOXTEXT dans l'arbre MODIFIER
  LET typmod&=20 ! IBOX dans l'arbre MODIFIER
  LET modifnom&=21 ! FBOXTEXT dans l'arbre MODIFIER
  LET souposob&=22 ! BOX dans l'arbre MODIFIER
  LET modpx&=27 ! FBOXTEXT dans l'arbre MODIFIER
  LET modpy&=28 ! FBOXTEXT dans l'arbre MODIFIER
  LET modpz&=29 ! FBOXTEXT dans l'arbre MODIFIER
  LET modtx&=30 ! FBOXTEXT dans l'arbre MODIFIER
  LET modty&=31 ! FBOXTEXT dans l'arbre MODIFIER
  LET modtz&=32 ! FBOXTEXT dans l'arbre MODIFIER
  LET modrx&=33 ! FBOXTEXT dans l'arbre MODIFIER
  LET modry&=34 ! FBOXTEXT dans l'arbre MODIFIER
  LET modrz&=35 ! FBOXTEXT dans l'arbre MODIFIER
  LET souediri&=36 ! BOX dans l'arbre MODIFIER
  LET trisomx1&=37 ! FBOXTEXT dans l'arbre MODIFIER
  LET trisomy1&=39 ! FBOXTEXT dans l'arbre MODIFIER
  LET trisomz1&=40 ! FBOXTEXT dans l'arbre MODIFIER
  LET trisomx2&=41 ! FBOXTEXT dans l'arbre MODIFIER
  LET trisomy2&=43 ! FBOXTEXT dans l'arbre MODIFIER
  LET trisomz2&=44 ! FBOXTEXT dans l'arbre MODIFIER
  LET trisomx3&=45 ! FBOXTEXT dans l'arbre MODIFIER
  LET trisomy3&=47 ! FBOXTEXT dans l'arbre MODIFIER
  LET trisomz3&=48 ! FBOXTEXT dans l'arbre MODIFIER
  LET modbez&=51 ! IBOX dans l'arbre MODIFIER
  LET modcsg&=54 ! IBOX dans l'arbre MODIFIER
  LET modquart&=57 ! IBOX dans l'arbre MODIFIER
  LET modquadr&=60 ! IBOX dans l'arbre MODIFIER
  LET rapptext&=61 ! BOXTEXT dans l'arbre MODIFIER
  LET rappcone&=62 ! FBOXTEXT dans l'arbre MODIFIER
  LET ouvert&=65 ! IBOX dans l'arbre MODIFIER
  LET encones&=68 ! IBOX dans l'arbre MODIFIER
  LET valmod&=72 ! IBOX dans l'arbre MODIFIER
  '
  LET moditail&=5 ! Formulaire/Dialogue
  LET saisinom&=4 ! FBOXTEXT dans l'arbre MODITAIL
  LET valisais&=8 ! IBOX dans l'arbre MODITAIL
  LET annsais&=11 ! IBOX dans l'arbre MODITAIL
  '
  LET tourextr&=6 ! Formulaire/Dialogue
  LET extrchar&=5 ! ICON dans l'arbre TOUREXTR
  LET sousnbr&=6 ! BOX dans l'arbre TOUREXTR
  LET nbrtour0&=7 ! BOXTEXT dans l'arbre TOUREXTR
  LET nbrtour1&=16 ! BOXTEXT dans l'arbre TOUREXTR
  LET zoneextr&=17 ! BOX dans l'arbre TOUREXTR
  LET extrsauv&=18 ! ICON dans l'arbre TOUREXTR
  LET extrgril&=19 ! ICON dans l'arbre TOUREXTR
  LET extrvide&=20 ! ICON dans l'arbre TOUREXTR
  LET extruder&=21 ! ICON dans l'arbre TOUREXTR
  LET tourner&=22 ! ICON dans l'arbre TOUREXTR
  LET extrefto&=23 ! ICON dans l'arbre TOUREXTR
  LET tourepai&=25 ! FBOXTEXT dans l'arbre TOUREXTR
  LET tourotat&=27 ! FBOXTEXT dans l'arbre TOUREXTR
  LET tourdepa&=29 ! FBOXTEXT dans l'arbre TOUREXTR
  LET tourzone&=30 ! BOX dans l'arbre TOUREXTR
  LET tourarri&=32 ! FBOXTEXT dans l'arbre TOUREXTR
  LET extrvali&=33 ! ICON dans l'arbre TOUREXTR
  LET toex_px&=34 ! FBOXTEXT dans l'arbre TOUREXTR
  LET toex_py&=35 ! FBOXTEXT dans l'arbre TOUREXTR
  LET extrannu&=38 ! IBOX dans l'arbre TOUREXTR
  '
  LET imagefrc&=7 ! Formulaire/Dialogue
  LET charfrac&=5 ! ICON dans l'arbre IMAGEFRC
  LET zonefrac&=6 ! BOX dans l'arbre IMAGEFRC
  LET sauvfrac&=7 ! ICON dans l'arbre IMAGEFRC
  LET genefrac&=8 ! ICON dans l'arbre IMAGEFRC
  LET ajoutfrc&=9 ! ICON dans l'arbre IMAGEFRC
  LET annufrac&=12 ! IBOX dans l'arbre IMAGEFRC
  LET charitga&=13 ! ICON dans l'arbre IMAGEFRC
  '
  LET generati&=8 ! Formulaire/Dialogue
  LET monta01&=9 ! FBOXTEXT dans l'arbre GENERATI
  LET monta02&=17 ! FBOXTEXT dans l'arbre GENERATI
  LET montalea&=20 ! IBOX dans l'arbre GENERATI
  LET aleagene&=23 ! IBOX dans l'arbre GENERATI
  LET amplitud&=25 ! FBOXTEXT dans l'arbre GENERATI
  LET nomgene&=26 ! FBOXTEXT dans l'arbre GENERATI
  LET genejaug&=27 ! BOX dans l'arbre GENERATI
  LET montannu&=31 ! IBOX dans l'arbre GENERATI
  LET montgene&=35 ! IBOX dans l'arbre GENERATI
  LET genealea&=36 ! FBOXTEXT dans l'arbre GENERATI
  '
  LET commenta&=9 ! Formulaire/Dialogue
  LET ligne1&=7 ! FBOXTEXT dans l'arbre COMMENTA
  LET ligne2&=8 ! FBOXTEXT dans l'arbre COMMENTA
  LET ligne3&=9 ! FBOXTEXT dans l'arbre COMMENTA
  LET ligne4&=10 ! FBOXTEXT dans l'arbre COMMENTA
  LET ligne5&=11 ! FBOXTEXT dans l'arbre COMMENTA
  LET profcalc&=16 ! FBOXTEXT dans l'arbre COMMENTA
  LET maxinter&=17 ! FBOXTEXT dans l'arbre COMMENTA
  LET saumas&=20 ! IBOX dans l'arbre COMMENTA
  LET valligne&=25 ! IBOX dans l'arbre COMMENTA
  LET annligne&=28 ! IBOX dans l'arbre COMMENTA
  '
  LET lumieres&=10 ! Formulaire/Dialogue
  LET sourincl&=5 ! FBOXTEXT dans l'arbre LUMIERES
  LET inclsour&=7 ! IBOX dans l'arbre LUMIERES
  LET nbrsour&=8 ! FBOXTEXT dans l'arbre LUMIERES
  LET sournbr&=10 ! IBOX dans l'arbre LUMIERES
  LET souron&=13 ! BOXTEXT dans l'arbre LUMIERES
  LET onsour&=15 ! IBOX dans l'arbre LUMIERES
  LET nom_src&=16 ! FBOXTEXT dans l'arbre LUMIERES
  LET txtetat&=17 ! BOXTEXT dans l'arbre LUMIERES
  LET souretat&=19 ! IBOX dans l'arbre LUMIERES
  LET sourlum0&=22 ! BOXTEXT dans l'arbre LUMIERES
  LET sourlum1&=26 ! BOXTEXT dans l'arbre LUMIERES
  LET sourenx&=37 ! FBOXTEXT dans l'arbre LUMIERES
  LET soureny&=38 ! FBOXTEXT dans l'arbre LUMIERES
  LET sourenz&=39 ! FBOXTEXT dans l'arbre LUMIERES
  LET sourdirx&=40 ! FBOXTEXT dans l'arbre LUMIERES
  LET sourdiry&=41 ! FBOXTEXT dans l'arbre LUMIERES
  LET sourdirz&=42 ! FBOXTEXT dans l'arbre LUMIERES
  LET soutasce&=44 ! IBOX dans l'arbre LUMIERES
  LET soutcarr&=45 ! FBOXTEXT dans l'arbre LUMIERES
  LET bsoutcar&=47 ! IBOX dans l'arbre LUMIERES
  LET soulasce&=49 ! IBOX dans l'arbre LUMIERES
  LET soulcarr&=50 ! FBOXTEXT dans l'arbre LUMIERES
  LET bsoulcar&=52 ! IBOX dans l'arbre LUMIERES
  LET sousasce&=54 ! IBOX dans l'arbre LUMIERES
  LET souscarr&=55 ! FBOXTEXT dans l'arbre LUMIERES
  LET bsouscar&=57 ! IBOX dans l'arbre LUMIERES
  LET sourasce&=59 ! IBOX dans l'arbre LUMIERES
  LET sourcarr&=60 ! FBOXTEXT dans l'arbre LUMIERES
  LET bsourcar&=62 ! IBOX dans l'arbre LUMIERES
  LET souvasce&=64 ! IBOX dans l'arbre LUMIERES
  LET souvcarr&=65 ! FBOXTEXT dans l'arbre LUMIERES
  LET bsouvcar&=67 ! IBOX dans l'arbre LUMIERES
  LET soubasce&=69 ! IBOX dans l'arbre LUMIERES
  LET soubcarr&=70 ! FBOXTEXT dans l'arbre LUMIERES
  LET bsoubcar&=72 ! IBOX dans l'arbre LUMIERES
  LET souscoul&=73 ! BOX dans l'arbre LUMIERES
  LET soursole&=76 ! BOXTEXT dans l'arbre LUMIERES
  LET sourspot&=77 ! BOXTEXT dans l'arbre LUMIERES
  LET valsour&=81 ! IBOX dans l'arbre LUMIERES
  LET optispot&=84 ! IBOX dans l'arbre LUMIERES
  '
  LET aide&=11 ! Formulaire/Dialogue
  LET clavier&=5 ! BOX dans l'arbre AIDE
  LET aidesous&=20 ! BOX dans l'arbre AIDE
  LET finaide&=38 ! IBOX dans l'arbre AIDE
  LET touches&=41 ! IBOX dans l'arbre AIDE
  '
  LET fonction&=12 ! Formulaire/Dialogue
  LET titrfnct&=2 ! BOXTEXT dans l'arbre FONCTION
  LET soustout&=6 ! BOX dans l'arbre FONCTION
  LET fnct01&=8 ! FBOXTEXT dans l'arbre FONCTION
  LET fnct02&=24 ! FBOXTEXT dans l'arbre FONCTION
  LET souslist&=25 ! BOX dans l'arbre FONCTION
  LET lte01&=27 ! FBOXTEXT dans l'arbre FONCTION
  LET lte02&=43 ! FBOXTEXT dans l'arbre FONCTION
  LET sousfnct&=44 ! BOX dans l'arbre FONCTION
  LET fnctzero&=45 ! ICON dans l'arbre FONCTION
  LET fncthau&=46 ! ICON dans l'arbre FONCTION
  LET fnctpere&=48 ! IBOX dans l'arbre FONCTION
  LET fnctfils&=49 ! BOX dans l'arbre FONCTION
  LET bfnctfil&=51 ! IBOX dans l'arbre FONCTION
  LET fnctbas&=52 ! ICON dans l'arbre FONCTION
  LET fnctmaxi&=53 ! ICON dans l'arbre FONCTION
  LET fncttout&=56 ! IBOX dans l'arbre FONCTION
  LET fnctrien&=59 ! IBOX dans l'arbre FONCTION
  LET union&=63 ! IBOX dans l'arbre FONCTION
  LET intersec&=67 ! IBOX dans l'arbre FONCTION
  LET differen&=71 ! IBOX dans l'arbre FONCTION
  LET merge&=75 ! IBOX dans l'arbre FONCTION
  LET valfnct&=79 ! IBOX dans l'arbre FONCTION
  LET titreffa&=80 ! BOXTEXT dans l'arbre FONCTION
  LET souseffa&=81 ! BOX dans l'arbre FONCTION
  LET etout&=84 ! IBOX dans l'arbre FONCTION
  LET erien&=87 ! IBOX dans l'arbre FONCTION
  LET icnefftx&=88 ! BOXTEXT dans l'arbre FONCTION
  LET icneff&=90 ! IBOX dans l'arbre FONCTION
  LET soreff&=94 ! IBOX dans l'arbre FONCTION
  LET boutblob&=95 ! TEXT dans l'arbre FONCTION
  LET blobtres&=96 ! FBOXTEXT dans l'arbre FONCTION
  LET blobtitr&=97 ! TEXT dans l'arbre FONCTION
  LET titreinv&=98 ! BOXTEXT dans l'arbre FONCTION
  LET titrblob&=99 ! BOXTEXT dans l'arbre FONCTION
  LET titrcsg&=100 ! BOXTEXT dans l'arbre FONCTION
  '
  LET statisti&=13 ! Formulaire/Dialogue
  LET total&=7 ! FTEXT dans l'arbre STATISTI
  LET i0&=8 ! FTEXT dans l'arbre STATISTI
  LET ibe&=9 ! FTEXT dans l'arbre STATISTI
  LET i1&=10 ! FTEXT dans l'arbre STATISTI
  LET im3d2&=11 ! FTEXT dans l'arbre STATISTI
  LET i2&=12 ! FTEXT dans l'arbre STATISTI
  LET iau&=13 ! FTEXT dans l'arbre STATISTI
  LET i3&=14 ! FTEXT dans l'arbre STATISTI
  LET iquar&=15 ! FTEXT dans l'arbre STATISTI
  LET i4&=16 ! FTEXT dans l'arbre STATISTI
  LET iquad&=17 ! FTEXT dans l'arbre STATISTI
  LET i5&=18 ! FTEXT dans l'arbre STATISTI
  LET iu&=19 ! FTEXT dans l'arbre STATISTI
  LET i6&=20 ! FTEXT dans l'arbre STATISTI
  LET ii&=21 ! FTEXT dans l'arbre STATISTI
  LET i7&=22 ! FTEXT dans l'arbre STATISTI
  LET id&=23 ! FTEXT dans l'arbre STATISTI
  LET i8&=24 ! FTEXT dans l'arbre STATISTI
  LET imer&=25 ! FTEXT dans l'arbre STATISTI
  LET i9&=26 ! FTEXT dans l'arbre STATISTI
  LET iblob&=27 ! FTEXT dans l'arbre STATISTI
  LET i10&=28 ! FTEXT dans l'arbre STATISTI
  LET i11&=29 ! FTEXT dans l'arbre STATISTI
  LET i12&=30 ! FTEXT dans l'arbre STATISTI
  LET memoccup&=33 ! FTEXT dans l'arbre STATISTI
  LET memdispo&=34 ! FTEXT dans l'arbre STATISTI
  LET valstat&=38 ! IBOX dans l'arbre STATISTI
  '
  LET raccourc&=14 ! Formulaire/Dialogue
  LET menumoin&=7 ! ICON dans l'arbre RACCOURC
  LET lignemen&=8 ! FBOXTEXT dans l'arbre RACCOURC
  LET menuplus&=9 ! ICON dans l'arbre RACCOURC
  LET toucspec&=10 ! FBOXTEXT dans l'arbre RACCOURC
  LET toucalph&=11 ! FBOXTEXT dans l'arbre RACCOURC
  LET alternat&=15 ! IBOX dans l'arbre RACCOURC
  LET control&=18 ! IBOX dans l'arbre RACCOURC
  LET shift&=21 ! IBOX dans l'arbre RACCOURC
  LET annracco&=24 ! IBOX dans l'arbre RACCOURC
  LET valracco&=28 ! IBOX dans l'arbre RACCOURC
  '
  LET arbmerci&=15 ! Formulaire/Dialogue
  LET okmerci&=8 ! IBOX dans l'arbre ARBMERCI
  '
  LET posecame&=16 ! Formulaire/Dialogue
  LET poscamx&=10 ! FBOXTEXT dans l'arbre POSECAME
  LET poscamy&=11 ! FBOXTEXT dans l'arbre POSECAME
  LET poscamz&=12 ! FBOXTEXT dans l'arbre POSECAME
  LET posversx&=13 ! FBOXTEXT dans l'arbre POSECAME
  LET posversy&=14 ! FBOXTEXT dans l'arbre POSECAME
  LET posversz&=15 ! FBOXTEXT dans l'arbre POSECAME
  LET posangle&=16 ! FBOXTEXT dans l'arbre POSECAME
  LET posob50&=28 ! IBOX dans l'arbre POSECAME
  LET posob6&=31 ! IBOX dans l'arbre POSECAME
  LET posob135&=34 ! IBOX dans l'arbre POSECAME
  LET posob280&=37 ! IBOX dans l'arbre POSECAME
  LET posob400&=40 ! IBOX dans l'arbre POSECAME
  LET posobxxx&=43 ! IBOX dans l'arbre POSECAME
  LET posob35&=46 ! IBOX dans l'arbre POSECAME
  LET posob28&=49 ! IBOX dans l'arbre POSECAME
  LET posob24&=52 ! IBOX dans l'arbre POSECAME
  LET posob18&=55 ! IBOX dans l'arbre POSECAME
  LET posobdeg&=56 ! FBOXTEXT dans l'arbre POSECAME
  LET okposcam&=60 ! IBOX dans l'arbre POSECAME
  LET anposcam&=63 ! IBOX dans l'arbre POSECAME
  '
RETURN
PROCEDURE index_ressource_2           ! Variables globales du ressource nø2
  REM Indice du ressource pour EBMOSTF2
  '
  LET lancepov&=0 ! Formulaire/Dialogue
  LET povscrip&=7 ! FBOXTEXT dans l'arbre LANCEPOV
  LET povimage&=8 ! FBOXTEXT dans l'arbre LANCEPOV
  LET povtype0&=13 ! BOXTEXT dans l'arbre LANCEPOV
  LET povtype1&=15 ! BOXTEXT dans l'arbre LANCEPOV
  LET txtmode&=21 ! BOXTEXT dans l'arbre LANCEPOV
  LET modeaffi&=23 ! IBOX dans l'arbre LANCEPOV
  LET povgene&=31 ! IBOX dans l'arbre LANCEPOV
  LET povaffi&=34 ! IBOX dans l'arbre LANCEPOV
  LET povatte&=37 ! IBOX dans l'arbre LANCEPOV
  LET povater&=40 ! IBOX dans l'arbre LANCEPOV
  LET povutsl&=43 ! IBOX dans l'arbre LANCEPOV
  LET povnume&=46 ! IBOX dans l'arbre LANCEPOV
  LET povlafa&=49 ! IBOX dans l'arbre LANCEPOV
  LET povlarge&=53 ! FBOXTEXT dans l'arbre LANCEPOV
  LET povhaute&=54 ! FBOXTEXT dans l'arbre LANCEPOV
  LET cpovdebu&=55 ! FBOXTEXT dans l'arbre LANCEPOV
  LET rpovdebu&=56 ! FBOXTEXT dans l'arbre LANCEPOV
  LET cpovfin&=57 ! FBOXTEXT dans l'arbre LANCEPOV
  LET rpovfin&=58 ! FBOXTEXT dans l'arbre LANCEPOV
  LET format0&=60 ! BOXTEXT dans l'arbre LANCEPOV
  LET format1&=68 ! BOXTEXT dans l'arbre LANCEPOV
  LET evalheur&=69 ! FBOXTEXT dans l'arbre LANCEPOV
  LET povcont&=72 ! IBOX dans l'arbre LANCEPOV
  LET buffonof&=76 ! IBOX dans l'arbre LANCEPOV
  LET povbuffe&=77 ! FBOXTEXT dans l'arbre LANCEPOV
  LET symbonof&=80 ! IBOX dans l'arbre LANCEPOV
  LET povsymb&=81 ! FBOXTEXT dans l'arbre LANCEPOV
  LET povrend0&=85 ! BOXTEXT dans l'arbre LANCEPOV
  LET povrend1&=89 ! BOXTEXT dans l'arbre LANCEPOV
  LET povnorma&=92 ! BOXTEXT dans l'arbre LANCEPOV
  LET povmaxim&=93 ! BOXTEXT dans l'arbre LANCEPOV
  LET antionof&=96 ! IBOX dans l'arbre LANCEPOV
  LET povpere&=99 ! IBOX dans l'arbre LANCEPOV
  LET povfils&=100 ! FBOXTEXT dans l'arbre LANCEPOV
  LET bpovfil&=102 ! IBOX dans l'arbre LANCEPOV
  LET povmat01&=104 ! BOXTEXT dans l'arbre LANCEPOV
  LET povmat09&=112 ! BOXTEXT dans l'arbre LANCEPOV
  LET jittonof&=115 ! IBOX dans l'arbre LANCEPOV
  LET jittpere&=118 ! IBOX dans l'arbre LANCEPOV
  LET jittfils&=119 ! FBOXTEXT dans l'arbre LANCEPOV
  LET bjittfil&=121 ! IBOX dans l'arbre LANCEPOV
  LET povok&=125 ! IBOX dans l'arbre LANCEPOV
  LET povsauv&=128 ! IBOX dans l'arbre LANCEPOV
  LET povannul&=131 ! IBOX dans l'arbre LANCEPOV
  LET povslabs&=132 ! FBOXTEXT dans l'arbre LANCEPOV
  '
  LET chemintr&=1 ! Formulaire/Dialogue
  LET bartit03&=2 ! FBOXTEXT dans l'arbre CHEMINTR
  LET cheebs&=5 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chepov&=6 ! FBOXTEXT dans l'arbre CHEMINTR
  LET cheimg&=7 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chettp&=8 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chetxt&=9 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chevis&=10 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chewin&=11 ! FBOXTEXT dans l'arbre CHEMINTR
  LET cheinc&=12 ! FBOXTEXT dans l'arbre CHEMINTR
  LET che3d2&=13 ! FBOXTEXT dans l'arbre CHEMINTR
  LET cheiob&=14 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chebic&=15 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chefor&=16 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chefrc&=17 ! FBOXTEXT dans l'arbre CHEMINTR
  LET chequd&=18 ! FBOXTEXT dans l'arbre CHEMINTR
  LET def_x&=20 ! FBOXTEXT dans l'arbre CHEMINTR
  LET def_y&=21 ! FBOXTEXT dans l'arbre CHEMINTR
  LET def_z&=22 ! FBOXTEXT dans l'arbre CHEMINTR
  LET limites&=24 ! FBOXTEXT dans l'arbre CHEMINTR
  LET tram0&=26 ! ICON dans l'arbre CHEMINTR
  LET tram1&=30 ! ICON dans l'arbre CHEMINTR
  LET largfena&=32 ! FBOXTEXT dans l'arbre CHEMINTR
  LET hautfena&=33 ! FBOXTEXT dans l'arbre CHEMINTR
  LET largprev&=35 ! FBOXTEXT dans l'arbre CHEMINTR
  LET hautprev&=36 ! FBOXTEXT dans l'arbre CHEMINTR
  LET extbatch&=38 ! FBOXTEXT dans l'arbre CHEMINTR
  LET cheundo&=40 ! FBOXTEXT dans l'arbre CHEMINTR
  LET tailgril&=42 ! FBOXTEXT dans l'arbre CHEMINTR
  LET cheok&=46 ! IBOX dans l'arbre CHEMINTR
  LET chediver&=49 ! IBOX dans l'arbre CHEMINTR
  LET cheautre&=52 ! IBOX dans l'arbre CHEMINTR
  LET cheannul&=55 ! IBOX dans l'arbre CHEMINTR
  '
  LET fractals&=2 ! Formulaire/Dialogue
  LET fracha&=5 ! ICON dans l'arbre FRACTALS
  LET frasau&=6 ! ICON dans l'arbre FRACTALS
  LET frczero&=7 ! ICON dans l'arbre FRACTALS
  LET frchori&=8 ! ICON dans l'arbre FRACTALS
  LET frcvert&=9 ! ICON dans l'arbre FRACTALS
  LET frcprof&=10 ! ICON dans l'arbre FRACTALS
  LET senhori&=11 ! ICON dans l'arbre FRACTALS
  LET senvert&=12 ! ICON dans l'arbre FRACTALS
  LET senprof&=13 ! ICON dans l'arbre FRACTALS
  LET somx01&=19 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy01&=20 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz01&=21 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx02&=22 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy02&=23 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz02&=24 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx03&=25 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy03&=26 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz03&=27 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx04&=28 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy04&=29 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz04&=30 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx05&=31 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy05&=32 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz05&=33 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx06&=34 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy06&=35 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz06&=36 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx07&=37 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy07&=38 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz07&=39 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx08&=40 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy08&=41 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz08&=42 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx09&=43 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy09&=44 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz09&=45 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx10&=46 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy10&=47 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz10&=48 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx11&=49 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy11&=50 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz11&=51 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx12&=52 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy12&=53 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz12&=54 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx13&=55 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy13&=56 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz13&=57 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx14&=58 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy14&=59 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz14&=60 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx15&=61 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy15&=62 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz15&=63 ! FBOXTEXT dans l'arbre FRACTALS
  LET somx16&=64 ! FBOXTEXT dans l'arbre FRACTALS
  LET somy16&=65 ! FBOXTEXT dans l'arbre FRACTALS
  LET somz16&=66 ! FBOXTEXT dans l'arbre FRACTALS
  LET sou01&=96 ! IBOX dans l'arbre FRACTALS
  LET sou02&=99 ! IBOX dans l'arbre FRACTALS
  LET sou03&=102 ! IBOX dans l'arbre FRACTALS
  LET sou04&=105 ! IBOX dans l'arbre FRACTALS
  LET sou05&=108 ! IBOX dans l'arbre FRACTALS
  LET sou06&=111 ! IBOX dans l'arbre FRACTALS
  LET sou07&=114 ! IBOX dans l'arbre FRACTALS
  LET sou08&=117 ! IBOX dans l'arbre FRACTALS
  LET niv01&=129 ! IBOX dans l'arbre FRACTALS
  LET niv02&=132 ! IBOX dans l'arbre FRACTALS
  LET niv03&=135 ! IBOX dans l'arbre FRACTALS
  LET niv04&=138 ! IBOX dans l'arbre FRACTALS
  LET niv05&=141 ! IBOX dans l'arbre FRACTALS
  LET niv06&=144 ! IBOX dans l'arbre FRACTALS
  LET niv07&=147 ! IBOX dans l'arbre FRACTALS
  LET niv08&=150 ! IBOX dans l'arbre FRACTALS
  LET niv09&=153 ! IBOX dans l'arbre FRACTALS
  LET niv10&=156 ! IBOX dans l'arbre FRACTALS
  LET fraopt&=170 ! IBOX dans l'arbre FRACTALS
  LET fragen&=174 ! IBOX dans l'arbre FRACTALS
  LET fraann&=177 ! IBOX dans l'arbre FRACTALS
  '
  LET copier&=3 ! Formulaire/Dialogue
  LET coderrie&=5 ! IBOX dans l'arbre COPIER
  LET cohaut&=8 ! IBOX dans l'arbre COPIER
  LET cogauche&=11 ! IBOX dans l'arbre COPIER
  LET codroite&=15 ! IBOX dans l'arbre COPIER
  LET codevant&=18 ! IBOX dans l'arbre COPIER
  LET cobas&=21 ! IBOX dans l'arbre COPIER
  LET copidist&=23 ! FBOXTEXT dans l'arbre COPIER
  LET cox&=28 ! IBOX dans l'arbre COPIER
  LET coy&=31 ! IBOX dans l'arbre COPIER
  LET coz&=34 ! IBOX dans l'arbre COPIER
  LET conombr&=36 ! FBOXTEXT dans l'arbre COPIER
  LET comudist&=38 ! FBOXTEXT dans l'arbre COPIER
  LET codegre&=40 ! FBOXTEXT dans l'arbre COPIER
  LET coannule&=44 ! IBOX dans l'arbre COPIER
  LET copimult&=47 ! IBOX dans l'arbre COPIER
  '
  LET animati&=4 ! Formulaire/Dialogue
  LET ecran01&=8 ! BOXTEXT dans l'arbre ANIMATI
  LET ecran10&=17 ! BOXTEXT dans l'arbre ANIMATI
  LET fleche01&=18 ! BOXTEXT dans l'arbre ANIMATI
  LET fleche10&=27 ! BOXTEXT dans l'arbre ANIMATI
  LET animcop0&=28 ! BOX dans l'arbre ANIMATI
  LET animcop9&=37 ! BOX dans l'arbre ANIMATI
  LET animnbre&=39 ! FBOXTEXT dans l'arbre ANIMATI
  LET animpaus&=41 ! FBOXTEXT dans l'arbre ANIMATI
  LET mode0&=43 ! ICON dans l'arbre ANIMATI
  LET mode1&=44 ! ICON dans l'arbre ANIMATI
  LET mode2&=45 ! ICON dans l'arbre ANIMATI
  LET animiff&=47 ! ICON dans l'arbre ANIMATI
  LET animebd&=48 ! ICON dans l'arbre ANIMATI
  LET pingpong&=52 ! IBOX dans l'arbre ANIMATI
  LET animrapi&=56 ! IBOX dans l'arbre ANIMATI
  LET animtest&=60 ! IBOX dans l'arbre ANIMATI
  LET animeffa&=63 ! IBOX dans l'arbre ANIMATI
  LET animannu&=66 ! IBOX dans l'arbre ANIMATI
  LET animsauv&=69 ! IBOX dans l'arbre ANIMATI
  '
  LET textures&=5 ! Formulaire/Dialogue
  LET numobjet&=5 ! FBOXTEXT dans l'arbre TEXTURES
  LET objetnum&=7 ! IBOX dans l'arbre TEXTURES
  LET typobjet&=8 ! FBOXTEXT dans l'arbre TEXTURES
  LET nomobjet&=9 ! FBOXTEXT dans l'arbre TEXTURES
  LET fictextu&=11 ! FBOXTEXT dans l'arbre TEXTURES
  LET bfictext&=13 ! IBOX dans l'arbre TEXTURES
  LET textpigm&=17 ! IBOX dans l'arbre TEXTURES
  LET fogonoff&=20 ! IBOX dans l'arbre TEXTURES
  LET deffog&=21 ! BOXTEXT dans l'arbre TEXTURES
  LET ajoutext&=24 ! IBOX dans l'arbre TEXTURES
  LET moditext&=27 ! IBOX dans l'arbre TEXTURES
  LET effatext&=30 ! IBOX dans l'arbre TEXTURES
  LET textnorm&=33 ! IBOX dans l'arbre TEXTURES
  LET distfog&=34 ! FBOXTEXT dans l'arbre TEXTURES
  LET drapeau&=37 ! BOXTEXT dans l'arbre TEXTURES
  LET pardefau&=40 ! IBOX dans l'arbre TEXTURES
  LET txtdefau&=41 ! BOXTEXT dans l'arbre TEXTURES
  LET defdefau&=43 ! IBOX dans l'arbre TEXTURES
  LET ombre&=48 ! IBOX dans l'arbre TEXTURES
  LET textfini&=51 ! IBOX dans l'arbre TEXTURES
  LET textmult&=55 ! IBOX dans l'arbre TEXTURES
  LET fononoff&=58 ! IBOX dans l'arbre TEXTURES
  LET deffon&=59 ! BOXTEXT dans l'arbre TEXTURES
  LET texprax&=64 ! FBOXTEXT dans l'arbre TEXTURES
  LET texpray&=65 ! FBOXTEXT dans l'arbre TEXTURES
  LET texpraz&=66 ! FBOXTEXT dans l'arbre TEXTURES
  LET texrotx&=68 ! FBOXTEXT dans l'arbre TEXTURES
  LET texroty&=69 ! FBOXTEXT dans l'arbre TEXTURES
  LET texrotz&=70 ! FBOXTEXT dans l'arbre TEXTURES
  LET texscax&=72 ! FBOXTEXT dans l'arbre TEXTURES
  LET texscay&=73 ! FBOXTEXT dans l'arbre TEXTURES
  LET texscaz&=74 ! FBOXTEXT dans l'arbre TEXTURES
  LET voirplan&=77 ! IBOX dans l'arbre TEXTURES
  LET voirsphe&=80 ! IBOX dans l'arbre TEXTURES
  LET m320x480&=83 ! IBOX dans l'arbre TEXTURES
  LET fintext&=88 ! IBOX dans l'arbre TEXTURES
  LET annutext&=91 ! IBOX dans l'arbre TEXTURES
  '
  LET pigment&=6 ! Formulaire/Dialogue
  LET pigmmarb&=21 ! IBOX dans l'arbre PIGMENT
  LET pigmwood&=24 ! IBOX dans l'arbre PIGMENT
  LET pigmonio&=27 ! IBOX dans l'arbre PIGMENT
  LET pigmleop&=30 ! IBOX dans l'arbre PIGMENT
  LET pigmgran&=33 ! IBOX dans l'arbre PIGMENT
  LET pigmbozo&=36 ! IBOX dans l'arbre PIGMENT
  LET pigmspot&=39 ! IBOX dans l'arbre PIGMENT
  LET pigmagat&=42 ! IBOX dans l'arbre PIGMENT
  LET pigmgrad&=45 ! IBOX dans l'arbre PIGMENT
  LET pigmmand&=48 ! IBOX dans l'arbre PIGMENT
  LET pigmradi&=51 ! IBOX dans l'arbre PIGMENT
  LET colomap1&=54 ! FBOXTEXT dans l'arbre PIGMENT
  LET colomap2&=55 ! FBOXTEXT dans l'arbre PIGMENT
  LET colomap3&=56 ! FBOXTEXT dans l'arbre PIGMENT
  LET colomap4&=57 ! FBOXTEXT dans l'arbre PIGMENT
  LET colomap5&=58 ! FBOXTEXT dans l'arbre PIGMENT
  LET colomap6&=59 ! FBOXTEXT dans l'arbre PIGMENT
  LET colormap&=62 ! IBOX dans l'arbre PIGMENT
  LET coloma07&=65 ! FBOXTEXT dans l'arbre PIGMENT
  LET coloma08&=66 ! FBOXTEXT dans l'arbre PIGMENT
  LET coloma09&=67 ! FBOXTEXT dans l'arbre PIGMENT
  LET coloma10&=68 ! FBOXTEXT dans l'arbre PIGMENT
  LET coloma11&=69 ! FBOXTEXT dans l'arbre PIGMENT
  LET coloma12&=70 ! FBOXTEXT dans l'arbre PIGMENT
  LET colodef1&=71 ! BOXTEXT dans l'arbre PIGMENT
  LET colodef2&=72 ! BOXTEXT dans l'arbre PIGMENT
  LET colodef3&=73 ! BOXTEXT dans l'arbre PIGMENT
  LET colodef4&=74 ! BOXTEXT dans l'arbre PIGMENT
  LET colodef5&=75 ! BOXTEXT dans l'arbre PIGMENT
  LET colodef6&=76 ! BOXTEXT dans l'arbre PIGMENT
  LET colode07&=77 ! BOXTEXT dans l'arbre PIGMENT
  LET colode08&=78 ! BOXTEXT dans l'arbre PIGMENT
  LET colode09&=79 ! BOXTEXT dans l'arbre PIGMENT
  LET colode10&=80 ! BOXTEXT dans l'arbre PIGMENT
  LET colode11&=81 ! BOXTEXT dans l'arbre PIGMENT
  LET colode12&=82 ! BOXTEXT dans l'arbre PIGMENT
  LET ficpigme&=83 ! FBOXTEXT dans l'arbre PIGMENT
  LET bficpigm&=85 ! IBOX dans l'arbre PIGMENT
  LET ajoupigm&=88 ! IBOX dans l'arbre PIGMENT
  LET modipigm&=91 ! IBOX dans l'arbre PIGMENT
  LET effapigm&=94 ! IBOX dans l'arbre PIGMENT
  LET imagemap&=100 ! IBOX dans l'arbre PIGMENT
  LET imagnom&=102 ! FBOXTEXT dans l'arbre PIGMENT
  LET pimaty0&=104 ! BOXTEXT dans l'arbre PIGMENT
  LET imagtyp0&=106 ! BOXTEXT dans l'arbre PIGMENT
  LET pimaty1&=107 ! BOXTEXT dans l'arbre PIGMENT
  LET imagtyp1&=108 ! BOXTEXT dans l'arbre PIGMENT
  LET pigmonce&=111 ! IBOX dans l'arbre PIGMENT
  LET pimaty2&=113 ! BOXTEXT dans l'arbre PIGMENT
  LET imagtyp2&=114 ! BOXTEXT dans l'arbre PIGMENT
  LET pigmcalc&=117 ! IBOX dans l'arbre PIGMENT
  LET pimaty3&=119 ! BOXTEXT dans l'arbre PIGMENT
  LET imagtyp3&=120 ! BOXTEXT dans l'arbre PIGMENT
  LET pigmfilt&=123 ! IBOX dans l'arbre PIGMENT
  LET pigmcoul&=125 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigmpour&=127 ! FBOXTEXT dans l'arbre PIGMENT
  LET soussens&=130 ! BOX dans l'arbre PIGMENT
  LET sens0&=131 ! IMAGE dans l'arbre PIGMENT
  LET sens1&=132 ! IMAGE dans l'arbre PIGMENT
  LET sens2&=133 ! IMAGE dans l'arbre PIGMENT
  LET sens3&=134 ! IMAGE dans l'arbre PIGMENT
  LET sens4&=135 ! IMAGE dans l'arbre PIGMENT
  LET sens5&=136 ! IMAGE dans l'arbre PIGMENT
  LET pigmint0&=138 ! BOXTEXT dans l'arbre PIGMENT
  LET pigmint1&=139 ! BOXTEXT dans l'arbre PIGMENT
  LET pigmint2&=140 ! BOXTEXT dans l'arbre PIGMENT
  LET agatturb&=142 ! BOXTEXT dans l'arbre PIGMENT
  LET xgradien&=144 ! BOXTEXT dans l'arbre PIGMENT
  LET ygradien&=145 ! BOXTEXT dans l'arbre PIGMENT
  LET zgradien&=146 ! BOXTEXT dans l'arbre PIGMENT
  LET pigmturb&=158 ! IBOX dans l'arbre PIGMENT
  LET pigmocta&=161 ! IBOX dans l'arbre PIGMENT
  LET pigmlamb&=164 ! IBOX dans l'arbre PIGMENT
  LET pigmomeg&=167 ! IBOX dans l'arbre PIGMENT
  LET pigmfreq&=170 ! IBOX dans l'arbre PIGMENT
  LET pigmphas&=173 ! IBOX dans l'arbre PIGMENT
  LET pigturx&=174 ! FBOXTEXT dans l'arbre PIGMENT
  LET octaval&=175 ! FBOXTEXT dans l'arbre PIGMENT
  LET lambval&=176 ! FBOXTEXT dans l'arbre PIGMENT
  LET omegval&=177 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigfreva&=178 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigphava&=179 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigtury&=180 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigturz&=181 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigmchec&=187 ! IBOX dans l'arbre PIGMENT
  LET checcol1&=191 ! BOXTEXT dans l'arbre PIGMENT
  LET checcol2&=192 ! BOXTEXT dans l'arbre PIGMENT
  LET mandval&=193 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigmhexa&=200 ! IBOX dans l'arbre PIGMENT
  LET hexacol1&=205 ! BOXTEXT dans l'arbre PIGMENT
  LET hexacol2&=206 ! BOXTEXT dans l'arbre PIGMENT
  LET hexacol3&=207 ! BOXTEXT dans l'arbre PIGMENT
  LET pigmrota&=215 ! IBOX dans l'arbre PIGMENT
  LET pigmscal&=218 ! IBOX dans l'arbre PIGMENT
  LET pigtrax&=219 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigrotx&=220 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigscax&=221 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigtray&=222 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigroty&=223 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigscay&=224 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigtraz&=225 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigrotz&=226 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigscaz&=227 ! FBOXTEXT dans l'arbre PIGMENT
  LET pigmtran&=230 ! IBOX dans l'arbre PIGMENT
  LET colorpig&=237 ! IBOX dans l'arbre PIGMENT
  LET deficolo&=239 ! BOXTEXT dans l'arbre PIGMENT
  LET valipigm&=243 ! IBOX dans l'arbre PIGMENT
  LET pigmdefa&=246 ! IBOX dans l'arbre PIGMENT
  LET annupigm&=249 ! IBOX dans l'arbre PIGMENT
  '
  LET normal&=7 ! Formulaire/Dialogue
  LET ficnorma&=5 ! FBOXTEXT dans l'arbre NORMAL
  LET bficnorm&=7 ! IBOX dans l'arbre NORMAL
  LET ajounorm&=10 ! IBOX dans l'arbre NORMAL
  LET modinorm&=13 ! IBOX dans l'arbre NORMAL
  LET effanorm&=16 ! IBOX dans l'arbre NORMAL
  LET bumpmap&=22 ! IBOX dans l'arbre NORMAL
  LET bumpnom&=24 ! FBOXTEXT dans l'arbre NORMAL
  LET nomaty0&=26 ! BOXTEXT dans l'arbre NORMAL
  LET bumptyp0&=28 ! BOXTEXT dans l'arbre NORMAL
  LET nomaty1&=29 ! BOXTEXT dans l'arbre NORMAL
  LET bumptyp1&=30 ! BOXTEXT dans l'arbre NORMAL
  LET nomaty2&=31 ! BOXTEXT dans l'arbre NORMAL
  LET bumptyp2&=32 ! BOXTEXT dans l'arbre NORMAL
  LET nomaty3&=33 ! BOXTEXT dans l'arbre NORMAL
  LET bumptyp3&=34 ! BOXTEXT dans l'arbre NORMAL
  LET normonce&=37 ! IBOX dans l'arbre NORMAL
  LET norminde&=41 ! IBOX dans l'arbre NORMAL
  LET normcalc&=45 ! IBOX dans l'arbre NORMAL
  LET normbusi&=48 ! FBOXTEXT dans l'arbre NORMAL
  LET soussenn&=50 ! BOX dans l'arbre NORMAL
  LET senn0&=51 ! IMAGE dans l'arbre NORMAL
  LET senn1&=52 ! IMAGE dans l'arbre NORMAL
  LET senn2&=53 ! IMAGE dans l'arbre NORMAL
  LET senn3&=54 ! IMAGE dans l'arbre NORMAL
  LET senn4&=55 ! IMAGE dans l'arbre NORMAL
  LET senn5&=56 ! IMAGE dans l'arbre NORMAL
  LET normint0&=58 ! BOXTEXT dans l'arbre NORMAL
  LET normint1&=59 ! BOXTEXT dans l'arbre NORMAL
  LET normint2&=60 ! BOXTEXT dans l'arbre NORMAL
  LET normbump&=71 ! IBOX dans l'arbre NORMAL
  LET normdent&=74 ! IBOX dans l'arbre NORMAL
  LET normripp&=77 ! IBOX dans l'arbre NORMAL
  LET normwave&=80 ! IBOX dans l'arbre NORMAL
  LET normwrin&=83 ! IBOX dans l'arbre NORMAL
  LET bumpval&=84 ! FBOXTEXT dans l'arbre NORMAL
  LET dentval&=85 ! FBOXTEXT dans l'arbre NORMAL
  LET rippval&=86 ! FBOXTEXT dans l'arbre NORMAL
  LET waveval&=87 ! FBOXTEXT dans l'arbre NORMAL
  LET wrinval&=88 ! FBOXTEXT dans l'arbre NORMAL
  LET normturb&=97 ! IBOX dans l'arbre NORMAL
  LET normfreq&=100 ! IBOX dans l'arbre NORMAL
  LET normphas&=103 ! IBOX dans l'arbre NORMAL
  LET norturx&=104 ! FBOXTEXT dans l'arbre NORMAL
  LET norfreva&=105 ! FBOXTEXT dans l'arbre NORMAL
  LET norphava&=106 ! FBOXTEXT dans l'arbre NORMAL
  LET nortury&=107 ! FBOXTEXT dans l'arbre NORMAL
  LET norturz&=108 ! FBOXTEXT dans l'arbre NORMAL
  LET normrota&=116 ! IBOX dans l'arbre NORMAL
  LET normscal&=119 ! IBOX dans l'arbre NORMAL
  LET norrotvx&=120 ! FBOXTEXT dans l'arbre NORMAL
  LET norscavx&=121 ! FBOXTEXT dans l'arbre NORMAL
  LET norrotvy&=122 ! FBOXTEXT dans l'arbre NORMAL
  LET norscavy&=123 ! FBOXTEXT dans l'arbre NORMAL
  LET norrotvz&=124 ! FBOXTEXT dans l'arbre NORMAL
  LET norscavz&=125 ! FBOXTEXT dans l'arbre NORMAL
  LET nortravz&=127 ! FBOXTEXT dans l'arbre NORMAL
  LET nortravy&=128 ! FBOXTEXT dans l'arbre NORMAL
  LET nortravx&=129 ! FBOXTEXT dans l'arbre NORMAL
  LET normtran&=132 ! IBOX dans l'arbre NORMAL
  LET normdefa&=135 ! IBOX dans l'arbre NORMAL
  LET annunorm&=138 ! IBOX dans l'arbre NORMAL
  LET valinorm&=142 ! IBOX dans l'arbre NORMAL
  '
  LET finish&=8 ! Formulaire/Dialogue
  LET ficfinis&=5 ! FBOXTEXT dans l'arbre FINISH
  LET bficfini&=7 ! IBOX dans l'arbre FINISH
  LET ajoufini&=10 ! IBOX dans l'arbre FINISH
  LET modifini&=13 ! IBOX dans l'arbre FINISH
  LET effafini&=16 ! IBOX dans l'arbre FINISH
  LET fishdiff&=32 ! IBOX dans l'arbre FINISH
  LET fishrefl&=35 ! IBOX dans l'arbre FINISH
  LET fishbril&=38 ! IBOX dans l'arbre FINISH
  LET fishcran&=41 ! IBOX dans l'arbre FINISH
  LET fishambi&=44 ! IBOX dans l'arbre FINISH
  LET fishspec&=47 ! IBOX dans l'arbre FINISH
  LET fishphon&=50 ! IBOX dans l'arbre FINISH
  LET fishmeta&=53 ! IBOX dans l'arbre FINISH
  LET fishrefr&=56 ! IBOX dans l'arbre FINISH
  LET rien&=57 ! BOXTEXT dans l'arbre FINISH
  LET verre&=58 ! BOXTEXT dans l'arbre FINISH
  LET fisdifva&=59 ! FBOXTEXT dans l'arbre FINISH
  LET fisrefva&=60 ! FBOXTEXT dans l'arbre FINISH
  LET fisbriva&=61 ! FBOXTEXT dans l'arbre FINISH
  LET fiscrava&=62 ! FBOXTEXT dans l'arbre FINISH
  LET fisambva&=63 ! FBOXTEXT dans l'arbre FINISH
  LET fisspeva&=64 ! FBOXTEXT dans l'arbre FINISH
  LET fisphova&=65 ! FBOXTEXT dans l'arbre FINISH
  LET air&=66 ! BOXTEXT dans l'arbre FINISH
  LET diamant&=67 ! BOXTEXT dans l'arbre FINISH
  LET eau&=70 ! BOXTEXT dans l'arbre FINISH
  LET iorlibre&=71 ! FBOXTEXT dans l'arbre FINISH
  LET fisrouva&=72 ! FBOXTEXT dans l'arbre FINISH
  LET phongsiz&=73 ! FBOXTEXT dans l'arbre FINISH
  LET fishdefa&=76 ! IBOX dans l'arbre FINISH
  LET annufini&=79 ! IBOX dans l'arbre FINISH
  LET valifini&=83 ! IBOX dans l'arbre FINISH
  '
  LET predefin&=9 ! Formulaire/Dialogue
  LET ficcolor&=11 ! FBOXTEXT dans l'arbre PREDEFIN
  LET bficcolo&=13 ! IBOX dans l'arbre PREDEFIN
  LET ascetein&=15 ! IBOX dans l'arbre PREDEFIN
  LET carrtein&=16 ! FBOXTEXT dans l'arbre PREDEFIN
  LET bcarrtei&=18 ! IBOX dans l'arbre PREDEFIN
  LET ascelumi&=20 ! IBOX dans l'arbre PREDEFIN
  LET carrlumi&=21 ! FBOXTEXT dans l'arbre PREDEFIN
  LET bcarrlum&=23 ! IBOX dans l'arbre PREDEFIN
  LET ascesatu&=25 ! IBOX dans l'arbre PREDEFIN
  LET carrsatu&=26 ! FBOXTEXT dans l'arbre PREDEFIN
  LET bcarrsat&=28 ! IBOX dans l'arbre PREDEFIN
  LET asceroug&=30 ! IBOX dans l'arbre PREDEFIN
  LET carrroug&=31 ! FBOXTEXT dans l'arbre PREDEFIN
  LET bcarrrou&=33 ! IBOX dans l'arbre PREDEFIN
  LET ascevert&=35 ! IBOX dans l'arbre PREDEFIN
  LET carrvert&=36 ! FBOXTEXT dans l'arbre PREDEFIN
  LET bcarrver&=38 ! IBOX dans l'arbre PREDEFIN
  LET ascebleu&=40 ! IBOX dans l'arbre PREDEFIN
  LET carrbleu&=41 ! FBOXTEXT dans l'arbre PREDEFIN
  LET bcarrble&=43 ! IBOX dans l'arbre PREDEFIN
  LET ascetran&=45 ! IBOX dans l'arbre PREDEFIN
  LET carrtran&=46 ! FBOXTEXT dans l'arbre PREDEFIN
  LET bcarrtra&=48 ! IBOX dans l'arbre PREDEFIN
  LET ajoupred&=51 ! IBOX dans l'arbre PREDEFIN
  LET modipred&=54 ! IBOX dans l'arbre PREDEFIN
  LET effapred&=57 ! IBOX dans l'arbre PREDEFIN
  LET couleur&=58 ! BOX dans l'arbre PREDEFIN
  LET valprede&=62 ! IBOX dans l'arbre PREDEFIN
  LET annprede&=65 ! IBOX dans l'arbre PREDEFIN
  '
  LET divers&=10 ! Formulaire/Dialogue
  LET acti&=1 ! STRING dans l'arbre DIVERS
  LET inacti&=2 ! STRING dans l'arbre DIVERS
  LET etatacti&=3 ! STRING dans l'arbre DIVERS
  LET etatinac&=4 ! STRING dans l'arbre DIVERS
  LET coordonn&=5 ! STRING dans l'arbre DIVERS
  LET titre&=6 ! STRING dans l'arbre DIVERS
  LET version&=7 ! STRING dans l'arbre DIVERS
  LET calcul&=8 ! STRING dans l'arbre DIVERS
  LET calcul1&=9 ! STRING dans l'arbre DIVERS
  LET definir&=10 ! STRING dans l'arbre DIVERS
  LET definie&=11 ! STRING dans l'arbre DIVERS
  LET t3d2&=12 ! STRING dans l'arbre DIVERS
  LET tiob&=13 ! STRING dans l'arbre DIVERS
  LET creatinc&=14 ! STRING dans l'arbre DIVERS
  LET creatpov&=15 ! STRING dans l'arbre DIVERS
  LET nbiman&=16 ! STRING dans l'arbre DIVERS
  LET testanim&=17 ! STRING dans l'arbre DIVERS
  LET distance&=18 ! STRING dans l'arbre DIVERS
  LET lin0&=19 ! STRING dans l'arbre DIVERS
  LET lin1&=20 ! STRING dans l'arbre DIVERS
  LET lin2&=21 ! STRING dans l'arbre DIVERS
  LET lin3&=22 ! STRING dans l'arbre DIVERS
  LET lin4&=23 ! STRING dans l'arbre DIVERS
  LET lin5&=24 ! STRING dans l'arbre DIVERS
  LET lin6&=25 ! STRING dans l'arbre DIVERS
  LET lin7&=26 ! STRING dans l'arbre DIVERS
  LET lin8&=27 ! STRING dans l'arbre DIVERS
  LET lin9&=28 ! STRING dans l'arbre DIVERS
  LET lin10&=29 ! STRING dans l'arbre DIVERS
  LET lin11&=30 ! STRING dans l'arbre DIVERS
  LET lin12&=31 ! STRING dans l'arbre DIVERS
  LET lin13&=32 ! STRING dans l'arbre DIVERS
  LET lin14&=33 ! STRING dans l'arbre DIVERS
  LET lin15&=34 ! STRING dans l'arbre DIVERS
  LET lin16&=35 ! STRING dans l'arbre DIVERS
  LET lin17&=36 ! STRING dans l'arbre DIVERS
  LET lin18&=37 ! STRING dans l'arbre DIVERS
  LET lin19&=38 ! STRING dans l'arbre DIVERS
  LET lin20&=39 ! STRING dans l'arbre DIVERS
  LET lin21&=40 ! STRING dans l'arbre DIVERS
  LET lin22&=41 ! STRING dans l'arbre DIVERS
  LET lin23&=42 ! STRING dans l'arbre DIVERS
  LET lin24&=43 ! STRING dans l'arbre DIVERS
  LET lin25&=44 ! STRING dans l'arbre DIVERS
  LET lin26&=45 ! STRING dans l'arbre DIVERS
  LET lin27&=46 ! STRING dans l'arbre DIVERS
  LET lin28&=47 ! STRING dans l'arbre DIVERS
  LET lin29&=48 ! STRING dans l'arbre DIVERS
  LET lin30&=49 ! STRING dans l'arbre DIVERS
  LET lin31&=50 ! STRING dans l'arbre DIVERS
  LET lin32&=51 ! STRING dans l'arbre DIVERS
  LET lin33&=52 ! STRING dans l'arbre DIVERS
  LET lin34&=53 ! STRING dans l'arbre DIVERS
  LET lin35&=54 ! STRING dans l'arbre DIVERS
  LET lin36&=55 ! STRING dans l'arbre DIVERS
  LET lin37&=56 ! STRING dans l'arbre DIVERS
  LET lin38&=57 ! STRING dans l'arbre DIVERS
  LET lin39&=58 ! STRING dans l'arbre DIVERS
  LET txtinvis&=59 ! STRING dans l'arbre DIVERS
  LET txteffac&=60 ! STRING dans l'arbre DIVERS
  '
RETURN
PROCEDURE index_ressource_3           ! Variables globales du ressource nø3
  REM Indice du ressource pour TEXTUSTF
  '
  LET poputyp&=0 ! Formulaire/Dialogue
  LET pop0&=2 ! BOXTEXT dans l'arbre POPUTYP
  LET pop1&=14 ! BOXTEXT dans l'arbre POPUTYP
  '
  LET popupcho&=1 ! Formulaire/Dialogue
  LET souscurs&=2 ! BOX dans l'arbre POPUPCHO
  LET popchoze&=3 ! ICON dans l'arbre POPUPCHO
  LET popchoha&=4 ! ICON dans l'arbre POPUPCHO
  LET popchope&=6 ! IBOX dans l'arbre POPUPCHO
  LET popchoca&=7 ! BOX dans l'arbre POPUPCHO
  LET bpopchoc&=9 ! IBOX dans l'arbre POPUPCHO
  LET popchoba&=10 ! ICON dans l'arbre POPUPCHO
  LET popchofi&=11 ! ICON dans l'arbre POPUPCHO
  LET souspopc&=12 ! IBOX dans l'arbre POPUPCHO
  LET popcho01&=13 ! FBOXTEXT dans l'arbre POPUPCHO
  LET popcho10&=22 ! FBOXTEXT dans l'arbre POPUPCHO
  '
  LET popuplum&=2 ! Formulaire/Dialogue
  LET popsour0&=2 ! FBOXTEXT dans l'arbre POPUPLUM
  LET popsour1&=11 ! FBOXTEXT dans l'arbre POPUPLUM
  '
  LET popupfnc&=3 ! Formulaire/Dialogue
  LET fnc01&=2 ! BOXTEXT dans l'arbre POPUPFNC
  LET fnc02&=5 ! BOXTEXT dans l'arbre POPUPFNC
  '
  LET popvaleu&=4 ! Formulaire/Dialogue
  LET sousvale&=2 ! IBOX dans l'arbre POPVALEU
  LET valeur01&=3 ! FBOXTEXT dans l'arbre POPVALEU
  LET valeur02&=10 ! FBOXTEXT dans l'arbre POPVALEU
  LET valesous&=11 ! BOX dans l'arbre POPVALEU
  LET valehaut&=12 ! ICON dans l'arbre POPVALEU
  LET valepere&=14 ! IBOX dans l'arbre POPVALEU
  LET valefils&=15 ! BOX dans l'arbre POPVALEU
  LET bvalefil&=17 ! IBOX dans l'arbre POPVALEU
  LET valebas&=18 ! ICON dans l'arbre POPVALEU
  '
  LET messages&=5 ! Formulaire/Dialogue
  LET aide0&=5 ! STRING dans l'arbre MESSAGES
  LET creseg&=11 ! STRING dans l'arbre MESSAGES
  '
  LET charg3d2&=6 ! Formulaire/Dialogue
  LET titimp3d&=2 ! FBOXTEXT dans l'arbre CHARG3D2
  LET nom3d2&=3 ! FBOXTEXT dans l'arbre CHARG3D2
  LET p3d2nb&=4 ! FBOXTEXT dans l'arbre CHARG3D2
  LET f3d2nb&=5 ! FBOXTEXT dans l'arbre CHARG3D2
  LET sous3d2&=6 ! BOX dans l'arbre CHARG3D2
  LET chapt3d2&=7 ! BOXTEXT dans l'arbre CHARG3D2
  LET chafa3d2&=8 ! BOXTEXT dans l'arbre CHARG3D2
  LET simpl3d2&=9 ! BOXTEXT dans l'arbre CHARG3D2
  '
  LET analyses&=7 ! Formulaire/Dialogue
  LET encours&=3 ! FBOXTEXT dans l'arbre ANALYSES
  LET elements&=4 ! FBOXTEXT dans l'arbre ANALYSES
  LET analnom&=6 ! FBOXTEXT dans l'arbre ANALYSES
  '
  LET anajauge&=8 ! Formulaire/Dialogue
  LET anaboite&=3 ! BOX dans l'arbre ANAJAUGE
  '
  LET statobje&=9 ! Formulaire/Dialogue
  LET soustaob&=3 ! BOX dans l'arbre STATOBJE
  LET numstaob&=4 ! FBOXTEXT dans l'arbre STATOBJE
  LET typstaob&=5 ! FBOXTEXT dans l'arbre STATOBJE
  LET nomstaob&=6 ! FBOXTEXT dans l'arbre STATOBJE
  LET nbpstaob&=7 ! FBOXTEXT dans l'arbre STATOBJE
  LET nbfstaob&=8 ! FBOXTEXT dans l'arbre STATOBJE
  LET finstaob&=12 ! IBOX dans l'arbre STATOBJE
  LET zerstaob&=13 ! ICON dans l'arbre STATOBJE
  LET haustaob&=14 ! ICON dans l'arbre STATOBJE
  LET nbrstaob&=15 ! FBOXTEXT dans l'arbre STATOBJE
  LET basstaob&=16 ! ICON dans l'arbre STATOBJE
  LET maxstaob&=17 ! ICON dans l'arbre STATOBJE
  '
  LET popaffi&=10 ! Formulaire/Dialogue
  LET poppal0&=2 ! BOXTEXT dans l'arbre POPAFFI
  LET poppal1&=5 ! BOXTEXT dans l'arbre POPAFFI
  '
  LET popupara&=11 ! Formulaire/Dialogue
  LET rapide&=4 ! IBOX dans l'arbre POPUPARA
  LET okpoppar&=7 ! IBOX dans l'arbre POPUPARA
  LET primsimp&=10 ! IBOX dans l'arbre POPUPARA
  LET fondgris&=13 ! IBOX dans l'arbre POPUPARA
  LET smooth&=16 ! IBOX dans l'arbre POPUPARA
  LET palsyste&=19 ! IBOX dans l'arbre POPUPARA
  LET backup&=22 ! IBOX dans l'arbre POPUPARA
  LET ecravirt&=25 ! IBOX dans l'arbre POPUPARA
  LET actiauto&=28 ! IBOX dans l'arbre POPUPARA
  LET bounding&=31 ! IBOX dans l'arbre POPUPARA
  LET ch100&=34 ! IBOX dans l'arbre POPUPARA
  LET ch255&=37 ! IBOX dans l'arbre POPUPARA
  LET pvise&=40 ! IBOX dans l'arbre POPUPARA
  LET creaauto&=43 ! IBOX dans l'arbre POPUPARA
  LET carrvisi&=46 ! IBOX dans l'arbre POPUPARA
  LET ctrlvisi&=49 ! IBOX dans l'arbre POPUPARA
  '
  LET quartic&=12 ! Formulaire/Dialogue
  LET nomquart&=5 ! FBOXTEXT dans l'arbre QUARTIC
  LET charquar&=75 ! ICON dans l'arbre QUARTIC
  LET sauvquar&=76 ! ICON dans l'arbre QUARTIC
  LET annquart&=79 ! IBOX dans l'arbre QUARTIC
  LET okquarti&=83 ! IBOX dans l'arbre QUARTIC
  LET valquar0&=85 ! FBOXTEXT dans l'arbre QUARTIC
  LET valquar1&=119 ! FBOXTEXT dans l'arbre QUARTIC
  '
  LET quadric&=13 ! Formulaire/Dialogue
  LET nomquadr&=5 ! FBOXTEXT dans l'arbre QUADRIC
  LET annquadr&=25 ! IBOX dans l'arbre QUADRIC
  LET okquadri&=29 ! IBOX dans l'arbre QUADRIC
  LET valquad0&=33 ! FBOXTEXT dans l'arbre QUADRIC
  LET valquad1&=42 ! FBOXTEXT dans l'arbre QUADRIC
  LET charquad&=43 ! ICON dans l'arbre QUADRIC
  LET sauvquad&=44 ! ICON dans l'arbre QUADRIC
  '
  LET popopsp&=14 ! Formulaire/Dialogue
  LET radius&=4 ! FBOXTEXT dans l'arbre POPOPSP
  LET falloff&=6 ! FBOXTEXT dans l'arbre POPOPSP
  LET peretigh&=9 ! IBOX dans l'arbre POPOPSP
  LET filstigh&=10 ! FBOXTEXT dans l'arbre POPOPSP
  LET bfilstig&=12 ! IBOX dans l'arbre POPOPSP
  LET okspot&=18 ! IBOX dans l'arbre POPOPSP
  '
  LET fen_vue&=15 ! Formulaire/Dialogue
  LET fenvue00&=0 ! BOX dans l'arbre FEN_VUE
  LET fenvue02&=1 ! BOXTEXT dans l'arbre FEN_VUE
  LET fenvue03&=2 ! ICON dans l'arbre FEN_VUE
  LET fenvue25&=3 ! ICON dans l'arbre FEN_VUE
  LET fenvue24&=4 ! ICON dans l'arbre FEN_VUE
  LET fenvue23&=5 ! ICON dans l'arbre FEN_VUE
  LET fenvue22&=6 ! ICON dans l'arbre FEN_VUE
  LET fenvue04&=7 ! ICON dans l'arbre FEN_VUE
  LET fenvue05&=8 ! ICON dans l'arbre FEN_VUE
  LET fenvue06&=9 ! BOXTEXT dans l'arbre FEN_VUE
  LET fenvue19&=10 ! BOXTEXT dans l'arbre FEN_VUE
  LET fenvue20&=11 ! BOXTEXT dans l'arbre FEN_VUE
  LET fenvue21&=12 ! BOXTEXT dans l'arbre FEN_VUE
  LET fenvue08&=13 ! BOX dans l'arbre FEN_VUE
  LET fenvue09&=14 ! IBOX dans l'arbre FEN_VUE
  LET fenvue10&=15 ! BOX dans l'arbre FEN_VUE
  LET fenvue11&=16 ! IBOX dans l'arbre FEN_VUE
  LET fenvue12&=17 ! IBOX dans l'arbre FEN_VUE
  LET fenvue07&=18 ! BOX dans l'arbre FEN_VUE
  LET sousreel&=19 ! BOX dans l'arbre FEN_VUE
  LET objereel&=23 ! FBOXTEXT dans l'arbre FEN_VUE
  LET bobjreel&=25 ! IBOX dans l'arbre FEN_VUE
  LET camereel&=26 ! BOXTEXT dans l'arbre FEN_VUE
  LET bcamreel&=28 ! IBOX dans l'arbre FEN_VUE
  LET rx_m&=31 ! IBOX dans l'arbre FEN_VUE
  LET rx_p&=34 ! IBOX dans l'arbre FEN_VUE
  LET px_m&=37 ! IBOX dans l'arbre FEN_VUE
  LET px_p&=40 ! IBOX dans l'arbre FEN_VUE
  LET tx_m&=43 ! IBOX dans l'arbre FEN_VUE
  LET tx_p&=46 ! IBOX dans l'arbre FEN_VUE
  LET ry_m&=49 ! IBOX dans l'arbre FEN_VUE
  LET ry_p&=52 ! IBOX dans l'arbre FEN_VUE
  LET py_m&=55 ! IBOX dans l'arbre FEN_VUE
  LET py_p&=58 ! IBOX dans l'arbre FEN_VUE
  LET ty_m&=61 ! IBOX dans l'arbre FEN_VUE
  LET ty_p&=64 ! IBOX dans l'arbre FEN_VUE
  LET rz_m&=67 ! IBOX dans l'arbre FEN_VUE
  LET rz_p&=70 ! IBOX dans l'arbre FEN_VUE
  LET pz_m&=73 ! IBOX dans l'arbre FEN_VUE
  LET pz_p&=76 ! IBOX dans l'arbre FEN_VUE
  LET tz_m&=79 ! IBOX dans l'arbre FEN_VUE
  LET tz_p&=82 ! IBOX dans l'arbre FEN_VUE
  LET sortreel&=89 ! IBOX dans l'arbre FEN_VUE
  LET fenvue13&=90 ! BOX dans l'arbre FEN_VUE
  LET fenvue14&=91 ! IBOX dans l'arbre FEN_VUE
  LET fenvue15&=92 ! BOX dans l'arbre FEN_VUE
  LET fenvue16&=93 ! IBOX dans l'arbre FEN_VUE
  LET fenvue17&=94 ! IBOX dans l'arbre FEN_VUE
  LET fenvue18&=95 ! ICON dans l'arbre FEN_VUE
  '
  LET biblio&=16 ! Formulaire/Dialogue
  LET charbibl&=5 ! ICON dans l'arbre BIBLIO
  LET zonebibl&=6 ! BOX dans l'arbre BIBLIO
  LET sauvbibl&=7 ! ICON dans l'arbre BIBLIO
  LET effabibl&=8 ! ICON dans l'arbre BIBLIO
  LET nombibl&=9 ! FBOXTEXT dans l'arbre BIBLIO
  LET debubibl&=10 ! ICON dans l'arbre BIBLIO
  LET moinbibl&=11 ! ICON dans l'arbre BIBLIO
  LET plusbibl&=12 ! ICON dans l'arbre BIBLIO
  LET finbibl&=13 ! ICON dans l'arbre BIBLIO
  LET perebibl&=15 ! IBOX dans l'arbre BIBLIO
  LET filsbibl&=16 ! BOX dans l'arbre BIBLIO
  LET bfilsbib&=18 ! IBOX dans l'arbre BIBLIO
  LET ajoubib&=19 ! ICON dans l'arbre BIBLIO
  '
  LET popincl&=17 ! Formulaire/Dialogue
  LET cheinca1&=5 ! IBOX dans l'arbre POPINCL
  LET cheinc1&=6 ! FBOXTEXT dans l'arbre POPINCL
  LET cheinca2&=9 ! IBOX dans l'arbre POPINCL
  LET cheinc2&=10 ! FBOXTEXT dans l'arbre POPINCL
  LET cheinca3&=13 ! IBOX dans l'arbre POPINCL
  LET cheinc3&=14 ! FBOXTEXT dans l'arbre POPINCL
  LET cheinca4&=17 ! IBOX dans l'arbre POPINCL
  LET cheinc4&=18 ! FBOXTEXT dans l'arbre POPINCL
  LET cheinca5&=21 ! IBOX dans l'arbre POPINCL
  LET cheinc5&=22 ! FBOXTEXT dans l'arbre POPINCL
  LET cheinca6&=25 ! IBOX dans l'arbre POPINCL
  LET cheinc6&=26 ! FBOXTEXT dans l'arbre POPINCL
  LET cheinca7&=29 ! IBOX dans l'arbre POPINCL
  LET cheinc7&=30 ! FBOXTEXT dans l'arbre POPINCL
  LET cheinca8&=33 ! IBOX dans l'arbre POPINCL
  LET cheinc8&=34 ! FBOXTEXT dans l'arbre POPINCL
  LET cheinca9&=37 ! IBOX dans l'arbre POPINCL
  LET cheinc9&=38 ! FBOXTEXT dans l'arbre POPINCL
  LET valichin&=42 ! IBOX dans l'arbre POPINCL
  LET annchein&=45 ! IBOX dans l'arbre POPINCL
  '
  LET modules&=18 ! Formulaire/Dialogue
  LET drivsous&=3 ! BOX dans l'arbre MODULES
  LET driv0&=5 ! FBOXTEXT dans l'arbre MODULES
  LET driv1&=14 ! FBOXTEXT dans l'arbre MODULES
  LET drivsouc&=15 ! BOX dans l'arbre MODULES
  LET drivzero&=16 ! ICON dans l'arbre MODULES
  LET drivhaut&=17 ! ICON dans l'arbre MODULES
  LET drivpere&=19 ! IBOX dans l'arbre MODULES
  LET drivfils&=20 ! BOX dans l'arbre MODULES
  LET bdrivfil&=22 ! IBOX dans l'arbre MODULES
  LET drivbas&=23 ! ICON dans l'arbre MODULES
  LET drivfin&=24 ! ICON dans l'arbre MODULES
  LET drivannu&=27 ! IBOX dans l'arbre MODULES
  LET drivok&=31 ! IBOX dans l'arbre MODULES
  '
  LET flecanim&=19 ! Formulaire/Dialogue
  LET barranim&=0 ! BOX dans l'arbre FLECANIM
  LET stopanim&=1 ! ICON dans l'arbre FLECANIM
  LET avananim&=2 ! ICON dans l'arbre FLECANIM
  LET retoanim&=3 ! ICON dans l'arbre FLECANIM
  LET moinanim&=4 ! ICON dans l'arbre FLECANIM
  LET plusanim&=5 ! ICON dans l'arbre FLECANIM
  LET sortanim&=6 ! ICON dans l'arbre FLECANIM
  '
  LET jaugcour&=20 ! Formulaire/Dialogue
  LET oldsessi&=2 ! FBOXTEXT dans l'arbre JAUGCOUR
  LET courjaug&=4 ! BOX dans l'arbre JAUGCOUR
  LET ouicours&=10 ! IBOX dans l'arbre JAUGCOUR
  LET noncours&=13 ! IBOX dans l'arbre JAUGCOUR
  '
  LET numeanim&=21 ! Formulaire/Dialogue
  LET numani01&=3 ! IBOX dans l'arbre NUMEANIM
  LET numani10&=30 ! IBOX dans l'arbre NUMEANIM
  '
  LET popuptex&=22 ! Formulaire/Dialogue
  LET soutexcr&=2 ! BOX dans l'arbre POPUPTEX
  LET poptexze&=3 ! ICON dans l'arbre POPUPTEX
  LET poptexha&=4 ! ICON dans l'arbre POPUPTEX
  LET poptexpe&=6 ! IBOX dans l'arbre POPUPTEX
  LET poptexca&=7 ! BOX dans l'arbre POPUPTEX
  LET bpoptexc&=9 ! IBOX dans l'arbre POPUPTEX
  LET poptexba&=10 ! ICON dans l'arbre POPUPTEX
  LET poptexfi&=11 ! ICON dans l'arbre POPUPTEX
  LET souspote&=12 ! IBOX dans l'arbre POPUPTEX
  LET poptex01&=13 ! FBOXTEXT dans l'arbre POPUPTEX
  LET poptex10&=22 ! FBOXTEXT dans l'arbre POPUPTEX
  '
  LET multtext&=23 ! Formulaire/Dialogue
  LET multnom&=5 ! FBOXTEXT dans l'arbre MULTTEXT
  LET multic01&=9 ! BOX dans l'arbre MULTTEXT
  LET multic02&=128 ! BOX dans l'arbre MULTTEXT
  LET multvali&=132 ! IBOX dans l'arbre MULTTEXT
  LET multeffa&=135 ! IBOX dans l'arbre MULTTEXT
  LET multcarr&=138 ! IBOX dans l'arbre MULTTEXT
  LET multannu&=141 ! IBOX dans l'arbre MULTTEXT
  '
RETURN
PROCEDURE variables_diverses
  CLR blanc&
  noir&=1
  rouge&=2
  vert&=3
  bleu&=4
  cyan&=5
  jaune&=6
  violet&=7
  gris_clair&=8
  gris_fonce&=9
  rouge_pal&=10
  vert_pal&=11
  bleu_pal&=12
  cyan_pal&=13
  jaune_pal&=14
  violet_pal&=15
  ' *-------------------- Num‚ro d'indes des primitives de bases
  primitive_segment&=0
  primitive_boite&=1
  primitive_sphere&=2
  primitive_prisme&=3
  primitive_triangle&=4
  primitive_tronc_de_cone&=5
  primitive_hemisphere&=6
  primitive_boite_arrondie&=7
  primitive_disque&=8
  primitive_pyramide&=9
  primitive_colonne&=10
  primitive_plan&=11
  primitive_tore&=12
  ' *-------------------- Offset de d‚calage pour un objet
  offset_objet&=380
  ' *-------------------- Offset de d‚calage pour TEXTURE/PIGMENT/NORMAL/FINISH
  offset_texture&=78
  offset_pigment&=116
  offset_normal&=296
  offset_finish&=356
  ' *-------------------- Les tailles importantes des zones de m‚moire
  texture_taille&=302
  taille_objet&=78
  taille_texture&=38
  taille_pigment&=180
  taille_normal&=60
  taille_finish&=16
  taille_couleur&=4
  taille_multiple&=240
  ' *-------------------- Et les d‚calages par rapport au d‚but des textures
  of_t_pigment&=taille_texture&
  of_t_normal&=ADD(of_t_pigment&,taille_pigment&)
  of_t_finish&=ADD(of_t_normal&,taille_normal&)
  ' *-------------------- Quelques offsets et tailles importants
  offset_couleur&=38
  offset_csg_type&=40
  offset_relation_csg&=42
  offset_nom_objet&=44
  offset_rapport&=67
  offset_nom_montagne&=68
  '
  offset_source&=30
  offset_defaut&=490
  offset_brouil&=792
  '
  taille_camera&=30
  taille_source&=460
  taille_defaut&=302
  taille_brouil&=16
  ' *-------------------- Taille de la zone finale (cam‚ra, d‚faut, lumiŠre...)
  taille_de_fin&=808
  ' *-------------------- Offset de d‚calage du drapeau des objets import‚s
  offset_drapeau0&=76
  ' *-------------------- Les bits utiles a l'offset pr‚c‚dent
  bit_ombre|=0
  bit_masque|=1
  bit_ouvert|=2
  bit_biblio|=3
  bit_bicubic|=4
  bit_montagne|=5
  bit_facette|=6
  ' *-------------------- Offset de d‚calage du drapeau de texture par d‚faut
  offset_bit_defaut&=293
  offset_tiles&=255
  ' *-------------------- Les bits utiles a l'offset pr‚c‚dent
  bit_defaut|=0
  bit_multiple|=1
  bit_tiles|=2
  ' *-------------------- Offset de d‚calage du drapeau des objets en formule
  offset_drapeau1&=77
  ' *-------------------- Les bits utiles a l'offset pr‚c‚dent
  bit_quadric|=0
  bit_quartic|=1
  bit_cone|=2
  ' *-------------------- Drapeau des vues
  vue_de_face|=0
  vue_de_dos|=1
  vue_de_gauche|=2
  vue_de_droite|=3
  vue_de_dessus|=4
  vue_de_dessous|=5
  vue_en_3d|=6
RETURN
PROCEDURE variables_reservees_au_gem  ! Celles la, elles sont pour le GEM
  ' ---- Variables concernant les ‚vŠnements MESSAGE ----
  mn_selected&=10       ! S‚lection d'un menu
  wm_redraw&=20         ! Demande de redessin d'‚cran
  wm_topped&=21         ! R‚activation d'un fenˆtre par clic
  wm_closed&=22         ! Fermeture d'une fenˆtre
  wm_fulled&=23         ! Mise en plein ‚cran d'une fenˆtre
  wm_arrowed&=24        ! Clic sur un des uatres champs fl‚ch‚s
  wm_hslid&=25          ! Changement de position du poussoir horizontal
  wm_vslid&=26          ! Changement de position du poussoir vertical
  wm_sized&=27          ! Changement de taille d'une fenˆtre
  wm_moved&=28          ! D‚placement d'une fenˆtre
  wm_newtop&=29         ! R‚activation d'une fenˆtre par femeture d'une autre
  ac_open&=40           ! Ouverture d'un acc‚ssoire
  ac_close&=41          ! Fermeture d'un accessoire
  ' Ajouter par moi mˆme pour la gestion des ‚l‚ments non GEM d'une fenˆtre
  wm_xfulled&=11        ! Bouton en pseudo 3D (plein ‚cran ou non)
  wm_xbutton&=12        ! Bouton en pseudo 3D (redessin par 2 objets avant)
  wm_xreducted&=13      ! R‚duction d'une fenˆtre
  wm_xmoved&=14         ! D‚placement d'une fenˆtre
  wm_xclosed&=15        ! Fermeture d'une fenˆtre
  ' ---- Variables concernant les ‚vŠnements FENETRE ----
  wf_kind&=1            ! Fixe de nouvelles parties de fenˆtre
  wf_name&=2            ! Fixe un nom de fenˆtre
  wf_info&=3            ! Fixe une nouvelle info de fenˆtre
  wf_workxywh&=4        ! Coordonn‚es de la zone de travail de fenˆtre
  wf_currxywh&=5        ! Coordonnees de la zone total de fenˆtre
  wf_prevxywh&=6        ! Taille globale fenˆtre pr‚c‚dente
  wf_fullxywh&=7        ! Taille globale fenˆtre plein ‚cran
  wf_hslide&=8          ! Position poussoir horizontal
  wf_vslide&=9          ! Position poussoir vertical
  wf_top&=10            ! Code de fenˆtre active
  wf_firstxywh&=11      ! Premier rectangle de la liste des rectangles
  wf_nextxywh&=12       ! Prochain rectangle de la liste des rectangles
  wf_newdesk&=14        ! Fixe un nouvel arbre pour le bureau
  wf_hslize&=15         ! Fixe taille poussoir horizontal
  wf_vslize&=16         ! Fixe taille poussoir vertical
  ' ---- Variables concernant l'AES -----------------------
  aes_selectable&=0
  aes_default&=1
  aes_exit&=2
  aes_editable&=3
  aes_rbutton&=4
  aes_lastob&=5
  aes_touchexit&=6
  aes_hidetree&=7
  aes_indirect&=8
  '
  aes_selected&=0
  aes_crossed&=1
  aes_checked&=2
  aes_disable&=3
  aes_outlined&=4
  aes_shadowed&=5
  '
  end_update&=0
  beg_update&=1
  end_mctrl&=2
  beg_mctrl&=3
  ' ---- Pour le nouveau GEM en pseudo 3D -----------------------
  aes_indicateur&=9
  aes_fond&=10
  ' ---- Les formes de souris et l'activation/d‚sactivation du rongeur -----
  fleche&=0
  trait_vertical&=1
  abeille&=2
  main_pointee&=3
  main_a_plat&=4
  reticule_mince&=5
  reticule_epais&=6
  contour_de_reticule&=7
  user_def&=255
  m_off&=256
  m_on&=257
  ' ---- Pour les ‚changes avec ST-GUIDE pour le moment inop‚rent ----------
  ac_help&=1025
  ac_reply&=1026
  ac_version&=1027
  ac_copy&=1028
  av_sendkey&=&H4710
  va_start&=&H4711
  av_startprog&=&H4723
  av_accwindopen&=&H4724
  va_dragaccwind&=&H4725
  av_accwindclosed&=&H4726
RETURN
FUNCTION lire_le_ressource_module
  ' ******************** Chargement du ressource ‚tendu ************************
  membfill(mem_che%,LEN(CHAR{mem_che%}),0)
  CHAR{mem_che%}=CHAR{disque_systeme%}+CHAR{path_systeme%}+"OUTILS\EB_SURPR.RSC"+CHR$(0)
  IF @xrsrc_load(mem_che%)=0
    membfill(mem_nom%,LEN(CHAR{mem_nom%}),0)
    CHAR{mem_nom%}="[3][|EB_SURPR.RSC non charg‚|EB_SURPR.RSC not loaded|][ Ok ]"
    ~@afficher_alerte(mem_nom%)
    RETURN FALSE
  ELSE
    initialiser_ressources
    RETURN TRUE
  ENDIF
ENDFUNC
PROCEDURE index_du_ressource
  REM Indice du ressource pour EB_SURPR
  '
  LET surprise&=0 ! Formulaire/Dialogue
  LET eb_mem&=15 ! FTEXT dans l'arbre SURPRISE
  LET eb_fin&=19 ! IBOX dans l'arbre SURPRISE
  '
  max_res&=0
RETURN
PROCEDURE initialiser_ressources      ! Mettre en m‚moire adresses ressources
  LOCAL x&,y&,w&,h&
  ~@xrsrc_gaddr(0,surprise&,adr_surprise%)
  form_center(adr_surprise%,x&,y&,w&,h&)
RETURN
PROCEDURE redraw_elem(arb%,obj&)      ! Un ‚l‚ment … redessiner. C'est ici
  LOCAL x&,y&,w&,h&,ob&
  ob&=obj&
  IF BTST(OB_STATE(arb%,obj&),wm_xbutton&)
    SUB ob&,2
  ENDIF
  objc_offset(arb%,ob&,x&,y&)
  w&=OB_W(arb%,ob&)
  h&=OB_H(arb%,ob&)
  ' Pour pr‚venir les SHADOWS et les objets 3D du nouveau GEM, ‚largir le REDRAW
  ' de 3 pixels tout autour.
  graf_mouse(m_off&,0)
  objc_draw(arb%,ob&,12,SUB(x&,3),SUB(y&,3),ADD(w&,6),ADD(h&,6))
  graf_mouse(m_on&,0)
RETURN
PROCEDURE redraw_element_fenetre(index&,adr_arb%,obj&)
  LOCAL rx&,ry&,rw&,rh&,rdx&,rdy&,rdw&,rdh&
  ' Coordonn‚es rectangle … redessiner
  objc_offset(adr_arb%,obj&,rdx&,rdy&)
  rdw&=OB_W(adr_arb%,obj&)
  rdh&=OB_H(adr_arb%,obj&)
  ' Demande les coord. et dimensions du 1ø rectangle de la liste
  wind_get(INT{ADD(hwind%,SHL&(index&,1))},wf_firstxywh&,rx&,ry&,rw&,rh&)
  WHILE (rw& OR rh&) ! Tant qu'il y a largeur ou hauteur...
    ' Si intersection des deux zones
    IF RC_INTERSECT(rdx&,rdy&,rdw&,rdh&,rx&,ry&,rw&,rh&)
      objc_draw(@arbre_ressource(index&),0,7,rx&,ry&,rw&,rh&)
    ENDIF
    wind_get(INT{ADD(hwind%,SHL&(index&,1))},wf_nextxywh&,rx&,ry&,rw&,rh&) ! Rectangle suivant
  WEND
RETURN
' ******************************************************************************
PROCEDURE gestion_surprise
  LOCAL fx&,fy&,fw&,fh&,c&,evnt&,sort!
  graf_mouse(m_on&,0)
  sort!=FALSE
  videsouris
  CHAR{{OB_SPEC(adr_surprise%,eb_mem&)}}=STR$(@memoire_dispo,8)
  form_center(adr_surprise%,fx&,fy&,fw&,fh&)
  form_dial(0,fx&,fy&,fw&,fh&,fx&,fy&,fw&,fh&)
  objc_draw(adr_surprise%,0,7,fx&,fy&,fw&,fh&)
  DO
    ' Appel fonction form_do() juste pour la jauge en alerte
    evnt&=@form_do(adr_surprise%,0)
    $S&,$S>
    SELECT evnt&
    CASE eb_fin&
      sort!=TRUE
    ENDSELECT
    EXIT IF sort!=TRUE
  LOOP
  graf_mouse(m_off&,0)
RETURN
' **************************** Gestion de la m‚moire ***************************
FUNCTION prendre(tl%)                 ! Prendre un peu de m‚moire
  LOCAL l%,dummy&
  IF machine|>2
    l%=GEMDOS(&H44,L:tl%,W:3)         ! L…, on est sur TT ou FALCON
  ELSE
    l%=GEMDOS(&H48,L:tl%)             ! Bon, allez, les vieux appels compatibles
  ENDIF
  $S%,S>
  SELECT l%
  CASE 0
    PRINT tl%
    ERROR 8
  DEFAULT
    membfill(l%,tl%,0)
    garbage_collection
    RETURN l%
  ENDSELECT
ENDFUNC
FUNCTION memoire_dispo
  IF machine|>2
    RETURN GEMDOS(&H44,L:-1,W:3)        ! Sur TT/FALCON, nouvel appel
  ELSE
    RETURN GEMDOS(&H48,L:-1)            ! Sinon, vieux appels compatibles
  ENDIF
ENDFUNC
PROCEDURE libere(ad%)                 ! On rend la m‚moire … la machine
  $S%,S>
  SELECT {ad%}
  CASE 0
    ' Ne rien faire
  DEFAULT
    ~GEMDOS(73,L:{ad%})
    {ad%}=0
  ENDSELECT
  garbage_collection
RETURN
PROCEDURE membfill(adr%,size%,oct|)   ! Rempli de blanc les buffers
  LOCAL lo%,long%
  BYTE{*long%}=oct|
  BYTE{SUCC(*long%)}=oct|
  BYTE{ADD(*long%,2)}=oct|
  BYTE{ADD(*long%,3)}=oct|
  IF size%>64
    IF NOT EVEN(adr%)            ! recalage sur une adresse paire
      BYTE{adr%}=oct|            ! place le motif simple
      INC adr%                   ! adresse graphique suivante
      DEC size%                  ! diminue bien sur la longueur
    ENDIF
    FOR lo%=1 TO SHR(size%,2)    ! d‚placement par mots longs
      LONG{adr%}=long%
      ADD adr%,4                 ! mot long suivant
    NEXT lo%
    FOR lo%=0 TO MOD(size%,4)    ! modulo de la longueur
      BYTE{adr%}=oct|
      INC adr%                   ! octet suivant
    NEXT lo%
  ELSE
    FOR lo%=adr% TO PRED(ADD(adr%,size%))
      BYTE{lo%}=oct|
    NEXT lo%
  ENDIF
RETURN
PROCEDURE garbage_collection          ! Un peu de m‚nage dans la m‚moire
  ~FRE(0)
  ~FRE()
RETURN
' ************************ Le selecteur de fichiers GEM ************************
PROCEDURE definition_fichier(adr_arb%,obj&,sel%,ind!,sel!,liin%)
  LOCAL obsepc%
  ' Extraire le disque du chemin sp‚cifi‚
  CHAR{disque%}=LEFT$(CHAR{{OB_SPEC(adr_arb%,obj&)}},2)
  ' Extraire le chemin proprement dit
  membfill(path%,LEN(CHAR{path%}),0)
  obspec%=OB_SPEC(adr_arb%,obj&)
  CHAR{path%}=RIGHT$(LEFT$(CHAR{{obspec%}},RINSTR(CHAR{{obspec%}},"\")),SUB(LEN(LEFT$(CHAR{{obspec%}},RINSTR(CHAR{{obspec%}},"\"))),2))
  ' Si d‚sir‚, extraire le no du fichier
  IF ind!
    CHAR{sel%}=MID$(CHAR{{obspec%}},SUCC(RINSTR(CHAR{{obspec%}},"\")),LEN(LEFT$(CHAR{{obspec%}},RINSTR(CHAR{{obspec%}},"\"))))
  ENDIF
  extend(sel%,masque%,sel%)
  IF sel!
    IF INT{ADD({ADD(GB,4)},0)}<&H140          ! Ancien GEM/TOS...
      @selecteur(sel%)
    ELSE                                      ! Sinon le nouveau selecteur
      @xselecteur(sel%,liin%)
    ENDIF
    IF CHAR{masque%}<>"*"
      extend(sel%,masque%,sel%)
    ENDIF
  ENDIF
RETURN
PROCEDURE selecteur(sel%)
  '
  CHAR{mem_che%}=CHAR{disque%}+CHAR{path%}+"*."+CHAR{masque%}
  '
  INT{ADD(GCONTRL,2)}=0
  INT{ADD(GCONTRL,4)}=2
  INT{ADD(GCONTRL,6)}=2
  INT{ADD(GCONTRL,8)}=0
  '
  {ADDRIN}=mem_che%
  {ADD(ADDRIN,4)}=sel%
  '
  GEMSYS 90
  '
  IF INT{ADD(GINTOUT,2)}=1
    CHAR{disque%}=LEFT$(CHAR{mem_che%},2)
    membfill(path%,LEN(CHAR{path%}),0)
    CHAR{path%}=RIGHT$(LEFT$(CHAR{mem_che%},RINSTR(CHAR{mem_che%},"\")),SUB(LEN(LEFT$(CHAR{mem_che%},RINSTR(CHAR{mem_che%},"\"))),2))
  ELSE
    membfill(sel%,LEN(CHAR{sel%}),0)
  ENDIF
  '
RETURN
PROCEDURE xselecteur(sel%,liin%)
  '
  CHAR{mem_che%}=CHAR{disque%}+CHAR{path%}+"*."+CHAR{masque%}
  '
  INT{ADD(GCONTRL,2)}=0
  INT{ADD(GCONTRL,4)}=2
  INT{ADD(GCONTRL,6)}=3
  INT{ADD(GCONTRL,8)}=0
  '
  {ADDRIN}=mem_che%           ! Chemin
  {ADD(ADDRIN,4)}=sel%        ! Nom du fichier
  {ADD(ADDRIN,8)}=liin%       ! Texte d'information
  '
  GEMSYS 91
  '
  IF INT{ADD(GINTOUT,2)}=1
    CHAR{disque%}=LEFT$(CHAR{mem_che%},2)
    membfill(path%,LEN(CHAR{path%}),0)
    CHAR{path%}=RIGHT$(LEFT$(CHAR{mem_che%},RINSTR(CHAR{mem_che%},"\")),SUB(LEN(LEFT$(CHAR{mem_che%},RINSTR(CHAR{mem_che%},"\"))),2))
  ELSE
    membfill(sel%,LEN(CHAR{sel%}),0)
  ENDIF
  '
RETURN
' ************ V‚rification des extensions et cr‚ation des backups *************
PROCEDURE extend(pr%,ex%,VAR ps%)
  LOCAL nl%,dn%,i&,j&
  dn%=@prendre(260)
  IF INSTR(CHAR{pr%},".")=0 AND LEN(CHAR{pr%})>0
    i&=LEN(CHAR{pr%})
    BYTE{ADD(pr%,i&)}=ASC(".")
    FOR j&=SUCC(i&) TO ADD(i&,3)
      BYTE{ADD(pr%,j&)}=BYTE{ADD(ex%,SUB(j&,SUCC(i&)))}
    NEXT j&
  ENDIF
  IF RIGHT$(CHAR{pr%})<>"\" AND RIGHT$(CHAR{pr%},5)<>"\."+CHAR{ex%} AND CHAR{pr%}>""
    FOR i&=LEN(CHAR{pr%}) DOWNTO 1
      EXIT IF BYTE{ADD(pr%,i&)}=92
      INC nl%
    NEXT i&
    CHAR{dn%}=RIGHT$(CHAR{pr%},nl%)
    IF INSTR(CHAR{dn%},".")=0
      CHAR{ps%}=CHAR{pr%}+"."+CHAR{ex%}
      CHAR{dn%}=CHAR{dn%}+"."+CHAR{ex%}
    ENDIF
    IF RIGHT$(CHAR{dn%},4)<>"."+CHAR{ex%}
      IF LEFT$(CHAR{dn%},2)<>"\."
        CHAR{ps%}=LEFT$(CHAR{pr%},LEN(CHAR{pr%})-nl%)+LEFT$(CHAR{dn%},INSTR(CHAR{dn%},"."))+CHAR{ex%}
      ELSE
        membfill(ps%,LEN(CHAR{ps%}),0)
      ENDIF
    ELSE
      CHAR{ps%}=LEFT$(CHAR{pr%},LEN(CHAR{pr%})-nl%)+CHAR{dn%}
    ENDIF
  ELSE
    membfill(ps%,LEN(CHAR{ps%}),0)
  ENDIF
  libere(*dn%)
RETURN
PROCEDURE backup(pr%,ex%)
  LOCAL xn%
  xn%=@prendre(260)
  IF @s_exist(pr%) AND backup!=TRUE
    extend(pr%,ex%,xn%)
    IF CHAR{xn%}<>""
      IF @s_exist(xn%)
        KILL CHAR{xn%}
      ENDIF
      NAME CHAR{pr%} AS CHAR{xn%}
    ENDIF
  ENDIF
  libere(*xn%)
RETURN
' ************************* Autre routines pour MY_DIAL ************************
FUNCTION s_exist(n%)
  $f%
  IF LEN(CHAR{n%})=0
    RETURN 0
  ELSE
    IF GEMDOS(&H4E,L:n%,0)=0
      RETURN -1
    ELSE
      RETURN 0
    ENDIF
  ENDIF
ENDFUNC
' ***************************** Gestion de la couleur **************************
PROCEDURE tsl_rvb(teinte&,saturation&,luminosite&,VAR ro&,ve&,bl&)
  LOCAL i&,p&,q&,w&
  LOCAL t,s,f
  s=saturation&/256
  IF s=0
    ro&=luminosite&
    ve&=luminosite&
    bl&=luminosite&
  ELSE
    t=teinte&/42.6
    i&=t
    f=t-i&
    p&=luminosite&*(1-s)
    q&=luminosite&*(1-s*f)
    w&=luminosite&*(1-s*(1-f))
    $S&,$S>
    SELECT i&
    CASE 0
      ro&=luminosite&
      ve&=w&
      bl&=p&
    CASE 1
      ro&=q&
      ve&=luminosite&
      bl&=p&
    CASE 2
      ro&=p&
      ve&=luminosite&
      bl&=w&
    CASE 3
      ro&=p&
      ve&=q&
      bl&=luminosite&
    CASE 4
      ro&=w&
      ve&=p&
      bl&=luminosite&
    CASE 5
      ro&=luminosite&
      ve&=p&
      bl&=q&
    ENDSELECT
  ENDIF
RETURN
' ******************************************************************************
PROCEDURE videsouris                  ! Elle bouge trop celle l….
  LOCAL vide&
  PAUSE 5
  graf_mkstate(mx&,my&,mk&,vide&)
  WHILE (mk&>0)                         ! Attendre bouton souris relach‚
    graf_mkstate(mx&,my&,mk&,vide&)
  WEND
RETURN
' ******************************************************************************
PROCEDURE environnement_mono          ! La, le ressource est monochrome
  rsrc_color(adr_surprise%,noir&,4)
RETURN
PROCEDURE environnement_coul          ! Ah ! la, il est en couleurs
  rsrc_color(adr_surprise%,gris_clair&,7)
RETURN
PROCEDURE rsrc_color(arb%,coul&,tram_des&)
  LOCAL c%,type&,pc%,ob_spec%,te_color&
  pc%=OB_TAIL(arb%,0)           ! Combien d'enfants ??
  WHILE pc%<>-1                 ! Recherche du dernier enfant
    pcf%=pc%
    pc%=OB_TAIL(arb%,pcf%)
  WEND                          ! Ok on est au dernier
  FOR c%=0 TO pcf%
    type&=OB_TYPE(arb%,c%)               ! Recherche du type de l'‚l‚ment
    ob_spec%=OB_SPEC(arb%,c%)
    $S&,S>
    SELECT type&
    CASE 20,25,27                               ! G_BOX, G_IBOX, G_BOXCHAR
      IF BTST(OB_FLAGS(arb%,c%),aes_indicateur&) OR BTST(OB_FLAGS(arb%,c%),aes_fond&)
        ob_spec%=ob_spec% AND -128
        ob_spec%=ob_spec% OR SHL&(tram_des&,4)  ! Nouvelle trame
        ob_spec%=ob_spec% OR coul&              ! Nouvelle couleur
        OB_SPEC(arb%,c%)=ob_spec%
      ENDIF
    CASE 21,22,30                               ! G_TEXT, G_BOXTEXT,G_FBOXTEXT
      IF BTST(OB_FLAGS(arb%,c%),aes_indicateur&) OR BTST(OB_FLAGS(arb%,c%),aes_fond&)
        te_color&=INT{ADD(ob_spec%,18)}
        te_color&=te_color& AND -128
        te_color&=te_color& OR SHL&(tram_des&,4)  ! Nouvelle trame
        te_color&=te_color& OR coul&              ! Nouvelle couleur
        INT{ADD(ob_spec%,18)}=te_color&
      ENDIF
    ENDSELECT
  NEXT c%
RETURN
' ******************************************************************************
FUNCTION adresse_objet(nu&)
  RETURN ADD(univers%,MUL(nu&,offset_objet&))
ENDFUNC
FUNCTION adresse_face(adrob%)
  IF CARD{adrob%}=0
    RETURN ADD(adrob%,ADD(SHL&(CARD{ADD(adrob%,2)},2),6))
  ELSE
    RETURN ADD(adrob%,ADD(MUL(SUCC(CARD{adrob%}),12),2))
  ENDIF
ENDFUNC
FUNCTION adresse_texture(nu&)
  RETURN ADD(@adresse_objet(nu&),offset_texture&)
ENDFUNC
FUNCTION adresse_pigment(nu&)
  RETURN ADD(@adresse_objet(nu&),offset_pigment&)
ENDFUNC
FUNCTION adresse_normal(nu&)
  RETURN ADD(@adresse_objet(nu&),offset_normal&)
ENDFUNC
FUNCTION adresse_finish(nu&)
  RETURN ADD(@adresse_objet(nu&),offset_finish&)
ENDFUNC
FUNCTION afficher_alerte(message_d_alerte%)
  LOCAL adr%
  RETURN @form_alert(1,message_d_alerte%)
ENDFUNC
FUNCTION arbre_ressource(n&)
  $S&,S>
  SELECT n&
  CASE 0
    RETURN adr_info%
  CASE 1
    RETURN adr_outils%
  CASE 2
    RETURN adr_animation%
  CASE 3
    RETURN adr_modifier%
  CASE 4
    RETURN adr_textures%
  CASE 5
    RETURN adr_comment%
  CASE 6
    RETURN adr_lumieres%
  CASE 7
    RETURN adr_aide%
  CASE 8
    RETURN adr_fonctions%
  CASE 9
    RETURN adr_racc%
  CASE 10
    RETURN adr_stat%
  CASE 11
    RETURN adr_merci%
  CASE 12
    RETURN adr_camera%
  CASE 13
    RETURN adr_lanceur%
  CASE 14
    RETURN adr_infosysteme%
  CASE 15
    RETURN adr_parametres%
  CASE 16
    RETURN adr_texture_multiple%
  CASE 17
    RETURN adr_fractals%
  CASE 18
    RETURN adr_tourextrude%
  CASE 19
    RETURN adr_image%
  CASE 20
    RETURN adr_generation%
  CASE 21
    RETURN adr_pigment%
  CASE 22
    RETURN adr_normal%
  CASE 23
    RETURN adr_finish%
  CASE 24
    RETURN adr_fenetre%
  CASE 25
    ' Fenˆtre de fonctionnement de P.O.V. en TTP        *********************
    RETURN adr_desk%
  CASE 26
    ' Fenˆtre de test d'animation                       *********************
    RETURN adr_desk%
  CASE 27
    RETURN adr_quartic%
  CASE 28
    RETURN adr_quadric%
  CASE 29
    RETURN adr_bibliotheque%
  DEFAULT
    RETURN adr_desk%
  ENDSELECT
ENDFUNC
FUNCTION lower(l%)
  LOCAL i&,l|
  IF LEN(CHAR{l%})
    FOR i&=0 TO PRED(LEN(CHAR{l%}))
      l|=BYTE{ADD(l%,i&)}
      IF l|=>65 AND l|<=90
        ADD l|,32
        BYTE{ADD(l%,i&)}=l|
      ENDIF
    NEXT i&
  ENDIF
  RETURN l%
ENDFUNC
FUNCTION f$(fin_li&)
  $S&,$S>
  SELECT fin_li&
  CASE 1
    RETURN CHR$(13)
  CASE 2
    RETURN CHR$(10)
  CASE 3
    RETURN CHR$(13)+CHR$(10)
  ENDSELECT
ENDFUNC
FUNCTION reponse_imprimante
  LOCAL i%,a%,b%,c%,super%
  LOCAL adresse_du_son%
  LOCAL taille_son%
  IF GEMDOS(&H11)=0
    ' Si la machine est un ST ou un ST Book alors pas d'‚chantillon vocal
    IF machine|<>0 AND machine|<>2
      membfill(mem_che%,LEN(CHAR{mem_che%}),0)
      CHAR{mem_che%}=CHAR{disque_systeme%}+CHAR{path_systeme%}+"OUTILS\IMPRIMAT.SON"+CHR$(0)
      IF @s_exist(mem_che%)
        OPEN "I",#99,CHAR{mem_che%}
        taille_son%=LOF(#99)
        CLOSE #99
        adresse_du_son%=@prendre(taille_son%)
        BLOAD CHAR{disque_systeme%}+CHAR{path_systeme%}+"OUTILS\IMPRIMAT.SON",adresse_du_son%
        ' ************************************ Passage en mode SUPERVISEUR
        super%=GEMDOS(&H20,L:0)
        INT{&HFF8900}=0
        ' ************************************ Initialise l'adresse de depart
        BYTE{&HFF8903}=SWAP(adresse_du_son%) AND &HFF
        BYTE{&HFF8905}=SHR(adresse_du_son%,8) AND &HFF
        BYTE{&HFF8907}=adresse_du_son% AND &HFF
        ' ************************************ Initialise l'adresse de fin
        BYTE{&HFF890F}=SWAP(ADD(adresse_du_son%,taille_son%)) AND &HFF
        BYTE{&HFF8911}=SHR(ADD(adresse_du_son%,taille_son%),8) AND &HFF
        BYTE{&HFF8913}=ADD(adresse_du_son%,taille_son%) AND &HFF
        ' ************************************ Reproduction Monophonique/fr‚quence
        INT{&HFF8920}=1                ! St‚r‚ophonique en 12 Kz
        PAUSE 2
        ' ************************************ Reproduction Unique
        INT{&HFF8900}=1
        ' ************************************ Retour en mode UTILISATEUR
        ~GEMDOS(&H20,L:super%)
      ENDIF
      ~@afficher_alerte(adr_imprimante%)
      libere(*adresse_du_son%)
      RETURN FALSE
    ENDIF
  ELSE
    RETURN TRUE
  ENDIF
ENDFUNC
' ******************************************************************************
' ****                                                                      ****
' ****       Proc‚dures des fonctions VDI par appels r‚els de la VDI        ****
' ****                                                                      ****
' ******************************************************************************
' ** Alors l…, accrochez vous. En quelques mots, je dirais que j'ai ouvert    **
' ** le livre du developpeur et j'ai repris les appels systŠme les uns aprŠs  **
' ** les autres. Oh ! Il doit bien en manquer quelques uns, mais, d‚j…, ce    **
' ** n'est pas mal.                                                           **
' ************************ Sous proc‚dure utilisant la VDI  ********************
PROCEDURE line(px&,py&,ox&,oy&)
  INT{coord_polygon%}=px&
  INT{ADD(coord_polygon%,2)}=py&
  INT{ADD(coord_polygon%,4)}=ox&
  INT{ADD(coord_polygon%,6)}=oy&
  polyline(1)
RETURN
PROCEDURE box(px&,py&,ox&,oy&)
  INT{coord_polygon%}=px&
  INT{ADD(coord_polygon%,2)}=py&
  INT{ADD(coord_polygon%,4)}=ox&
  INT{ADD(coord_polygon%,6)}=py&
  INT{ADD(coord_polygon%,8)}=ox&
  INT{ADD(coord_polygon%,10)}=oy&
  INT{ADD(coord_polygon%,12)}=px&
  INT{ADD(coord_polygon%,14)}=oy&
  INT{ADD(coord_polygon%,16)}=px&
  INT{ADD(coord_polygon%,18)}=py&
  polyline(4)
RETURN
PROCEDURE pbox(px&,py&,ox&,oy&)
  INT{coord_polygon%}=px&
  INT{ADD(coord_polygon%,2)}=py&
  INT{ADD(coord_polygon%,4)}=ox&
  INT{ADD(coord_polygon%,6)}=py&
  INT{ADD(coord_polygon%,8)}=ox&
  INT{ADD(coord_polygon%,10)}=oy&
  INT{ADD(coord_polygon%,12)}=px&
  INT{ADD(coord_polygon%,14)}=oy&
  INT{ADD(coord_polygon%,16)}=px&
  INT{ADD(coord_polygon%,18)}=py&
  filled_aera(4)
RETURN
' *****************  Proc‚dure de paramŠtrage de trac‚ (lignes & motifs)  ******
PROCEDURE set_type_de_ligne(c&,e&,t&,sd&,sf&,user%)
  IF true_color!
    ' tls_rvb(t&,l&,s&,r&,v&,b&)
    set_color_representation(254,(r&/255)*1000,(v&/255)*1000,(b&/255)*1000)
    set_polyline_color_index(254)
  ELSE
    set_polyline_color_index(c&)
  ENDIF
  IF t&=7
    set_user_defined_line_style_pattern(-user%)
    set_polyline_line_witdh(e&)
    set_polyline_type(t&)
    set_polyline_end_styles(sd&,sf&)
  ELSE
    set_polyline_line_witdh(e&)
    set_polyline_type(t&)
    set_polyline_end_styles(sd&,sf&)
  ENDIF
RETURN
PROCEDURE set_remplissage(t&,m&,c&,adr%)
  IF t&=4 AND adr%>0
    set_fill_interior_style(t&)
    set_user_defined_fill_pattern(adr%)
  ELSE
    IF t&>-1
      set_fill_interior_style(t&)
    ENDIF
    IF m&>-1
      set_fill_style_index(m&)
    ENDIF
  ENDIF
  IF c&>-1
    IF true_color!
      ' tls_rvb(t&,l&,s&,r&,v&,b&)
      set_color_representation(254,(r&/255)*1000,(v&/255)*1000,(b&/255)*1000)
      set_fill_color_index(254)
    ELSE
      set_fill_color_index(c&)
    ENDIF
  ENDIF
RETURN
PROCEDURE set_text_mode(col&,atr&,ang&,hau&,fon&)
  set_graphic_text_color_index(col&)
  set_graphic_text_special_effects(atr&)
  set_character_baseline_vector(ang&)
  set_text_face(fon&)
  set_character_height(hau&)
RETURN
' ******************************************************************************
' ======================== Fonctions de controle ========================
PROCEDURE open_virtuel_screen_workstation(ncndc|)               ! VDI 100
  LOCAL nb&,i&
  INT{ADD(CONTRL,2)}=0         ! Longueur du tableau PTSIN
  INT{ADD(CONTRL,6)}=11        ! Longueur du tableau INTIN
  INT{INTIN}=1                 ! Num‚ro ID du p‚riph‚rique physique (‚cran)
  INT{ADD(INTIN,2)}=1          ! Type de ligne
  INT{ADD(INTIN,4)}=1          ! Index de couleur Polyline
  INT{ADD(INTIN,6)}=1          ! Type de marqueur
  INT{ADD(INTIN,8)}=1          ! Index de couleur Polymarker
  INT{ADD(INTIN,10)}=1         ! Fonte de caractŠres
  INT{ADD(INTIN,12)}=1         ! Index couleur texte
  INT{ADD(INTIN,14)}=1         ! Fill interior Style
  INT{ADD(INTIN,16)}=1         ! Fill style index
  INT{ADD(INTIN,18)}=1         ! Fill index couleur
  INT{ADD(INTIN,20)}=ncndc|    ! Flag coordonn‚es NDC ou RC
  VDISYS 100
  nb&=INT{ADD(CONTRL,8)}
  vdihandle%=INT{ADD(CONTRL,12)}
  station%=@prendre(SHL&(nb&,1))
  FOR i&=0 TO PRED(nb&)
    INT{ADD(station%,SHL&(i&,1))}=INT{ADD(INTOUT,SHL&(i&,1))}
  NEXT i&
RETURN
PROCEDURE close_virtual_screen_workstation                      ! VDI 101
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  VDISYS 101
RETURN
PROCEDURE clear_workstation                                     ! VDI 3
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  VDISYS 3
RETURN
PROCEDURE update_workstation                                    ! VDI 4
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  VDISYS 4
RETURN
PROCEDURE load_fonts                                            ! VDI 119
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=0
  VDISYS 119
  nombre_de_fontes%=INT{INTOUT}
  IF nombre_de_fontes%<1
    nombre_de_fontes%=1
  ENDIF
RETURN
PROCEDURE unload_fonts                                          ! VDI 120
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=0
  VDISYS 120
RETURN
PROCEDURE set_clipping_rectangle(flags|,cx&,cy&,ox&,oy&,fx&,fy&)  ! VDI 129
  cx&=MAX(cx&,fx&)
  cy&=MAX(cy&,fy&)
  INT{ADD(CONTRL,2)}=2
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=flags|
  INT{PTSIN}=cx&
  INT{ADD(PTSIN,2)}=cy&
  INT{ADD(PTSIN,4)}=ox&
  INT{ADD(PTSIN,6)}=oy&
  VDISYS 129
RETURN
' ======================== Fonctions d' ‚dition =========================
PROCEDURE polyline(nb&)                                         ! VDI 6
  INT{ADD(CONTRL,2)}=SUCC(nb&)
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  BMOVE coord_polygon%,PTSIN,SHL&(SUCC(nb&),2)
  VDISYS 6
RETURN
PROCEDURE polymarker(nb&)                                       ! VDI 7
  INT{ADD(CONTRL,2)}=SUCC(nb&)
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  BMOVE coord_polygon%,PTSIN,SHL&(SUCC(nb&),2)
  VDISYS 7
RETURN
PROCEDURE text(px%,py%,t%)                                      ! VDI 8
  LOCAL i&
  INT{ADD(CONTRL,2)}=1
  INT{ADD(CONTRL,6)}=LEN(CHAR{t%})
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{PTSIN}=px%
  INT{ADD(PTSIN,2)}=py%
  FOR i&=0 TO LEN(CHAR{t%})
    INT{ADD(INTIN,SHL&(i&,1))}=BYTE{ADD(t%,i&)}
  NEXT i&
  VDISYS 8
RETURN
PROCEDURE filled_aera(nb&)                                      ! VDI 9
  INT{ADD(CONTRL,2)}=SUCC(nb&)
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  BMOVE coord_polygon%,PTSIN,SHL&(SUCC(nb&),2)
  VDISYS 9
RETURN
PROCEDURE contour_fill(px%,py%)                                 ! VDI 103
  INT{ADD(CONTRL,2)}=1
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=-1
  INT{PTSIN}=px%
  INT{ADD(PTSIN,2)}=py%
  VDISYS 103
RETURN
PROCEDURE vdi_11(fnct|,cx&,cy&,ox&,oy&,rayx&,rayy&,ang0&,ang1&) ! VDI 11
  INT{ADD(CONTRL,2)}=2
  INT{ADD(CONTRL,10)}=fnct|
  INT{ADD(CONTRL,12)}=vdihandle%
  $S|,$S>
  SELECT fnct|
  CASE 1,8,9            ! Bar, Rounded rectangle, Filled rounded rectangle
    INT{ADD(CONTRL,6)}=0
    INT{PTSIN}=cx&
    INT{ADD(PTSIN,2)}=cy&
    INT{ADD(PTSIN,4)}=ox&
    INT{ADD(PTSIN,6)}=oy&
  CASE 5                ! Ellipse
    INT{ADD(CONTRL,6)}=0
    INT{PTSIN}=cx&
    INT{ADD(PTSIN,2)}=cy&
    INT{ADD(PTSIN,4)}=rayx&
    INT{ADD(PTSIN,6)}=rayy&
  CASE 6,7              ! Elliptical arc, Elliptical pie
    INT{ADD(CONTRL,6)}=2
    INT{INTIN}=ang0&
    INT{ADD(INTIN,2)}=ang1&
    INT{PTSIN}=cx&
    INT{ADD(PTSIN,2)}=cy&
    INT{ADD(PTSIN,4)}=rayx&
    INT{ADD(PTSIN,6)}=rayy&
  ENDSELECT
  VDISYS 11
RETURN
' ======================== Fonctions d'attributs ========================
PROCEDURE set_writing_mode(mode_de_dessin|)                     ! VDI 32
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=mode_de_dessin|
  VDISYS 32
RETURN
PROCEDURE set_color_representation(index&,r&,v&,b&)             ! VDI 14
  '  set_color_representation Fonction 14 de la VDI
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=4
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=index&
  INT{ADD(INTIN,2)}=r&
  INT{ADD(INTIN,4)}=v&
  INT{ADD(INTIN,6)}=b&
  VDISYS 14
RETURN
PROCEDURE set_polyline_type(t_d_l%)                             ! VDI 15
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=t_d_l%
  VDISYS 15
RETURN
PROCEDURE set_user_defined_line_style_pattern(e_d_l%)           ! VDI 113
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=e_d_l%
  VDISYS 113
RETURN
PROCEDURE set_polyline_line_witdh(l_d_l&)                       ! VDI 16
  INT{ADD(CONTRL,2)}=1
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{PTSIN}=l_d_l&
  INT{ADD(PTSIN,2)}=0
  VDISYS 16
RETURN
PROCEDURE set_polyline_color_index(c_d_l&)                      ! VDI 17
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=c_d_l&
  VDISYS 17
RETURN
PROCEDURE set_polyline_end_styles(d_d_l&,f_d_l&)                ! VDI 108
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=2
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=d_d_l&
  INT{ADD(INTIN,2)}=f_d_l&
  VDISYS 108
RETURN
PROCEDURE set_polymarker_type(c_d_m&)                           ! VDI 18
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=c_d_m&
  VDISYS 18
RETURN
PROCEDURE set_polymarker_height(c_d_m&)                         ! VDI 19
  INT{ADD(CONTRL,2)}=1
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{PTSIN}=0
  INT{ADD(PTSIN,2)}=c_d_m&
  VDISYS 19
RETURN
PROCEDURE set_polymarker_color_index(c_d_m&)                    ! VDI 20
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=c_d_m&
  VDISYS 20
RETURN
PROCEDURE set_character_height(h_d_t&)                          ! VDI 12
  INT{ADD(CONTRL,2)}=1
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{PTSIN}=0
  INT{ADD(PTSIN,2)}=h_d_t&
  VDISYS 12
RETURN
PROCEDURE set_character_cell_height_point_mode(e_d_t&)          ! VDI 107
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=e_d_t&
  VDISYS 107
RETURN
PROCEDURE set_character_baseline_vector(a_d_t&)                 ! VDI 13
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=a_d_t&
  VDISYS 13
RETURN
PROCEDURE set_text_face(f_d_t&)                                 ! VDI 21
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=f_d_t&
  VDISYS 21
RETURN
PROCEDURE set_graphic_text_color_index(c_d_t&)                  ! VDI 22
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=c_d_t&
  VDISYS 22
RETURN
PROCEDURE set_graphic_text_special_effects(e_d_t&)              ! VDI 106
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=e_d_t&
  VDISYS 106
RETURN
PROCEDURE set_graphic_text_alignment(p_h&,p_v&)                 ! VDI 39
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=2
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=p_h&
  INT{ADD(INTIN,2)}=p_v&
  VDISYS 39
RETURN
PROCEDURE set_fill_interior_style(s_d_r|)                       ! VDI 23
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=s_d_r|
  VDISYS 23
RETURN
PROCEDURE set_fill_style_index(i_d_r|)                          ! VDI 24
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=i_d_r|
  VDISYS 24
RETURN
PROCEDURE set_fill_color_index(c_d_r&)                          ! VDI 25
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=c_d_r&
  VDISYS 25
RETURN
PROCEDURE set_fill_perimeter_visibility(p_v&)                   ! VDI 104
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=p_v&
  VDISYS 104
RETURN
PROCEDURE set_user_defined_fill_pattern(adr%)                   ! VDI 112
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=16
  INT{ADD(CONTRL,12)}=vdihandle%
  BMOVE adr%,INTIN,32
  VDISYS 112
RETURN
PROCEDURE set_outline_fonte_fkew(ang%)                          ! VDI 253
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=ang%
  VDISYS 253
RETURN
' ======================== Fonctions de grille ==========================
PROCEDURE copy_raster_opaque(s%,sl%,sh%,sp%,d%,dl%,dh%,dp%,x11%,y11%,x12%,y12%,x21%,y21%,x22%,y22%)
  ' Fonction VDI Nø 109 (COPY RASTER, OPAQUE)
  ' Copie de raster de mˆme nombre de plans
  ' D‚finition du bloc raster source (MFDB):
  {mfdb%}=s%                               ! Adresse de la m‚moire SOURCE
  IF s%<>0                                 ! L'‚cran, C'est au GEM de bosser
    INT{ADD(mfdb%,4)}=sl%                 ! Largeur en points du raster entier
    INT{ADD(mfdb%,6)}=sh%                 ! Hauteur en points du raster entier
    INT{ADD(mfdb%,8)}=sl%/16              ! Largeur en mots du raster entier
    INT{ADD(mfdb%,10)}=-1*(sp%=1)         ! flag standart ou sp‚cifique
    INT{ADD(mfdb%,12)}=sp%                ! Nombre de niveaux de couleurs
  ENDIF
  '
  ' D‚finition du bloc raster cible (MFBD):
  {mfbd%}=d%                               ! Adresse de la m‚moire SOURCE
  IF d%<>0                                 ! L'‚cran, C'est au GEM de bosser
    INT{ADD(mfbd%,4)}=dl%                 ! Largeur en points du raster entier
    INT{ADD(mfbd%,6)}=dh%                 ! Hauteur en points du raster entier
    INT{ADD(mfbd%,8)}=dl%/16              ! Largeur en mots du raster entier
    INT{ADD(mfbd%,10)}=-1*(dp%=1)         ! flag standart ou sp‚cifique
    INT{ADD(mfbd%,12)}=dp%                ! Nombre de niveaux de couleurs
  ENDIF
  '
  INT{ADD(CONTRL,2)}=4
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  {ADD(CONTRL,14)}=mfdb%
  {ADD(CONTRL,18)}=mfbd%
  INT{INTIN}=3                            ! Mode REMPLACE
  '
  INT{PTSIN}=x11%                         ! X en haut … gauche source
  INT{ADD(PTSIN,2)}=y11%                  ! Y en haut … gauche source
  INT{ADD(PTSIN,4)}=x12%                  ! X en bas … droite source
  INT{ADD(PTSIN,6)}=y12%                  ! Y en bas … droite source
  INT{ADD(PTSIN,8)}=x21%                  ! X en haut … gauche destination
  INT{ADD(PTSIN,10)}=y21%                 ! Y en haut … gauche destination
  INT{ADD(PTSIN,12)}=x22%                 ! X en bas … droite destination
  INT{ADD(PTSIN,14)}=y22%                 ! Y en bas … droite destination
  VDISYS 109
RETURN
' ======================== Fonctions d'entr‚e ===========================
PROCEDURE sample_mouse_button_state(VAR mx&,my&,mk&)            ! VDI 124
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=0
  INT{ADD(CONTRL,12)}=vdihandle%
  VDISYS 124
  mk&=INT{INTOUT}
  mx&=INT{PTSOUT}
  my&=INT{ADD(PTSOUT,2)}
RETURN
' ======================== Fonctions de test ============================
PROCEDURE extended_inquire_function                             ! VDI 102
  LOCAL nb&,i&
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=1         ! Information ‚tendues sur la station
  VDISYS 102
  nb&=INT{ADD(CONTRL,8)}
  etendue%=@prendre(SHL&(nb&,1))
  FOR i&=0 TO PRED(nb&)
    INT{ADD(etendue%,SHL&(i&,1))}=INT{ADD(INTOUT,SHL&(i&,1))}
  NEXT i&
RETURN
PROCEDURE inquire_color_representation(index&,VAR r&,v&,b&)     ! VDI 26
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=2
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=index&
  INT{ADD(INTIN,2)}=0        ! 0=couleurs d‚finies 1=composition physique
  '                                                   effectivement r‚alis‚
  VDISYS 26
  r&=INT{ADD(INTOUT,2)}
  v&=INT{ADD(INTOUT,4)}
  b&=INT{ADD(INTOUT,6)}
RETURN
PROCEDURE inquire_face_name_and_index(num&)                     ! VDI 130
  LOCAL i&,adr%
  INT{ADD(CONTRL,2)}=0
  INT{ADD(CONTRL,6)}=1
  INT{ADD(CONTRL,12)}=vdihandle%
  INT{INTIN}=num&
  VDISYS 130
  adr%=ADD(nom_des_fontes%,MUL(PRED(num&),36))
  INT{adr%}=INT{ADD(INTOUT,66)}
  INT{ADD(adr%,2)}=INT{INTOUT}
  FOR i&=0 TO 31
    BYTE{ADD(ADD(adr%,4),i&)}=INT{ADD(ADD(INTOUT,2),SHL&(i&,1))}
  NEXT i&
RETURN
' ******************************************************************************
' ****                                                                      ****
' ****       Proc‚dures des fonctions AES par appels r‚els de l'AES         ****
' ****                                                                      ****
' ******************************************************************************
FUNCTION appl_init                                                      !  10
  INT{ADD(GCONTRL,2)}=0
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  GEMSYS 10
  RETURN INT{GINTOUT}
ENDFUNC
FUNCTION appl_read(ap_rid&,ap_rlength&,ap_rpbuff%)                      !  11
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=ap_rid&
  INT{ADD(GINTIN,2)}=ap_rlength&
  {ADDRIN}=ap_rpbuff%
  GEMSYS 11
  RETURN INT{GINTOUT}
ENDFUNC
PROCEDURE appl_write(ap_wid&,ap_wlength&,ap_wpbuff%)                    !  12
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=ap_wid&
  INT{ADD(GINTIN,2)}=ap_wlength&
  {ADDRIN}=ap_wpbuff%
  GEMSYS 12
RETURN
FUNCTION appl_find(ap_fpname%)                                          !  13
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  {ADDRIN}=ap_fpname%
  GEMSYS 13
  RETURN INT{GINTOUT}
ENDFUNC
PROCEDURE appl_exit                                                     !  19
  GEMSYS 19
RETURN
FUNCTION evnt_multi(flags&,cl&,ma&,st&,f1&,x1&,y1&,w1&,h1&,f2&,x2&,y2&,w2&,h2&,buf%,ct%,VAR mx&,my&,mk&,kbd&,key&,click&)
  ' Fonction AES Nø 25 (EVNT_MULTI)
  INT{ADD(GCONTRL,2)}=16
  INT{ADD(GCONTRL,4)}=7
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=flags&
  INT{ADD(GINTIN,2)}=cl&
  INT{ADD(GINTIN,4)}=ma&
  INT{ADD(GINTIN,6)}=st&
  INT{ADD(GINTIN,8)}=f1&
  INT{ADD(GINTIN,10)}=x1&
  INT{ADD(GINTIN,12)}=y1&
  INT{ADD(GINTIN,14)}=w1&
  INT{ADD(GINTIN,16)}=h1&
  INT{ADD(GINTIN,18)}=f2&
  INT{ADD(GINTIN,20)}=x2&
  INT{ADD(GINTIN,22)}=y2&
  INT{ADD(GINTIN,24)}=w2&
  INT{ADD(GINTIN,26)}=h2&
  INT{ADD(GINTIN,28)}=WORD(ct%)
  INT{ADD(GINTIN,30)}=WORD(SWAP(ct%))
  {ADDRIN}=buf%
  GEMSYS 25
  mx&=INT{ADD(GINTOUT,2)}
  my&=INT{ADD(GINTOUT,4)}
  mk&=INT{ADD(GINTOUT,6)}
  kbd&=INT{ADD(GINTOUT,8)}
  key&=INT{ADD(GINTOUT,10)}
  click&=INT{ADD(GINTOUT,12)}
  RETURN INT{GINTOUT}
ENDFUNC
PROCEDURE menu_bar(me_btree%,me_bshow&)                                 !  30
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{GINTIN}=me_bshow&
  {ADDRIN}=me_btree%
  GEMSYS 30
RETURN
PROCEDURE menu_icheck(me_ctree%,me_citem&,me_ccheck&)                   !  31
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=me_citem&
  INT{ADD(GINTIN,2)}=me_ccheck&
  {ADDRIN}=me_ctree%
  GEMSYS 31
RETURN
PROCEDURE menu_ienable(me_ctree%,me_citem&,me_eenable&)                 !  32
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=me_citem&
  INT{ADD(GINTIN,2)}=me_eenable&
  {ADDRIN}=me_ctree%
  GEMSYS 32
RETURN
PROCEDURE menu_tnormal(me_ctree%,me_citem&,me_nnormal&)                 !  33
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=me_citem&
  INT{ADD(GINTIN,2)}=me_nnormal&
  {ADDRIN}=me_ctree%
  GEMSYS 33
RETURN
PROCEDURE objc_draw(tree%,startob&,depth&,xclip&,yclip&,wclip&,hclip&)  !  42
  INT{ADD(GCONTRL,2)}=6
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=startob&
  INT{ADD(GINTIN,2)}=depth&
  INT{ADD(GINTIN,4)}=xclip&
  INT{ADD(GINTIN,6)}=yclip&
  INT{ADD(GINTIN,8)}=wclip&
  INT{ADD(GINTIN,10)}=hclip&
  {ADDRIN}=tree%
  GEMSYS 42
RETURN
FUNCTION objc_find(tree%,startob&,depth&,mx&,my&)                       !  43
  INT{ADD(GCONTRL,2)}=4
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=startob&
  INT{ADD(GINTIN,2)}=depth&
  INT{ADD(GINTIN,4)}=mx&
  INT{ADD(GINTIN,6)}=my&
  {ADDRIN}=tree%
  GEMSYS 43
  RETURN INT{GINTOUT}
ENDFUNC
PROCEDURE objc_offset(tree%,obj&,VAR x&,y&)                             !  44
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=3
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=obj&
  {ADDRIN}=tree%
  GEMSYS 44
  x&=INT{ADD(GINTOUT,2)}
  y&=INT{ADD(GINTOUT,4)}
RETURN
PROCEDURE objc_edit(tree%,obj&,char&,idx&,kind&,VAR pos&)               !  46
  INT{ADD(GCONTRL,2)}=4
  INT{ADD(GCONTRL,4)}=2
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=obj&
  INT{ADD(GINTIN,2)}=char&
  INT{ADD(GINTIN,4)}=idx&
  INT{ADD(GINTIN,6)}=kind&
  {ADDRIN}=tree%
  GEMSYS 46
  pos&=INT{ADD(GINTOUT,2)}
RETURN
PROCEDURE objc_change(adr%,ob&)                                         !  47
  ob_state(adr%,ob&,aes_selected&,NOT BTST(OB_STATE(adr%,ob&),aes_selected&))
  redraw_elem(adr%,ob&)
RETURN
FUNCTION form_do(fo_dotree%,fo_dostartob&)                              !  50
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=fo_dostartob&
  {ADDRIN}=fo_dotree%
  GEMSYS 50
  RETURN INT{GINTOUT}
ENDFUNC
PROCEDURE form_dial(flag&,tlx&,tly&,tlw&,tlh&,bigx&,bigy&,bigw&,bigh&)  !  51
  INT{ADD(GCONTRL,2)}=9
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=flag&
  INT{ADD(GINTIN,2)}=tlx&
  INT{ADD(GINTIN,4)}=tly&
  INT{ADD(GINTIN,6)}=tlw&
  INT{ADD(GINTIN,8)}=tlh&
  INT{ADD(GINTIN,10)}=bigx&
  INT{ADD(GINTIN,12)}=bigy&
  INT{ADD(GINTIN,14)}=bigw&
  INT{ADD(GINTIN,16)}=bigh&
  GEMSYS 51
RETURN
FUNCTION form_alert(defbttn&,string%)                                   !  52
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=defbttn&
  {ADDRIN}=string%
  GEMSYS 52
  RETURN INT{GINTOUT}
ENDFUNC
FUNCTION form_error(fo_enum&)                                           !  53
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=fo_enum&
  GEMSYS 53
  RETURN 0
ENDFUNC
PROCEDURE form_center(tree%,VAR x&,y&,w&,h&)                            !  54
  INT{ADD(GCONTRL,2)}=0
  INT{ADD(GCONTRL,4)}=5
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  {ADDRIN}=tree%
  GEMSYS 54
  x&=INT{ADD(GINTOUT,2)}
  y&=INT{ADD(GINTOUT,4)}
  w&=INT{ADD(GINTOUT,6)}
  h&=INT{ADD(GINTOUT,8)}
RETURN
PROCEDURE graf_rubberbox(rx&,ry&,rminw&,rminh&,VAR ret&,ww&,hh&)        !  70
  INT{ADD(GCONTRL,2)}=4
  INT{ADD(GCONTRL,4)}=3
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=rx&
  INT{ADD(GINTIN,2)}=ry&
  INT{ADD(GINTIN,4)}=rminw&
  INT{ADD(GINTIN,6)}=rminh&
  GEMSYS 70
  ret&=INT{GINTOUT}
  ww&=INT{ADD(GINTOUT,2)}
  hh&=INT{ADD(GINTOUT,4)}
RETURN
PROCEDURE graf_dragbox(dw&,dh&,dx&,dy&,dbx&,dby&,dbw&,dbh&,VAR nx&,ny&) !  71
  INT{ADD(GCONTRL,2)}=8
  INT{ADD(GCONTRL,4)}=3
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=dw&
  INT{ADD(GINTIN,2)}=dh&
  INT{ADD(GINTIN,4)}=dx&
  INT{ADD(GINTIN,6)}=dy&
  INT{ADD(GINTIN,8)}=dbx&
  INT{ADD(GINTIN,10)}=dby&
  INT{ADD(GINTIN,12)}=dbw&
  INT{ADD(GINTIN,14)}=dbh&
  GEMSYS 71
  nx&=INT{ADD(GINTOUT,2)}
  ny&=INT{ADD(GINTOUT,4)}
RETURN
PROCEDURE graf_slidebox(slptree%,slparent&,slobject&,slvh&,VAR pos&)    !  76
  INT{ADD(GCONTRL,2)}=3
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=slparent&
  INT{ADD(GINTIN,2)}=slobject&
  INT{ADD(GINTIN,4)}=slvh&
  {ADDRIN}=slptree%
  GEMSYS 76
  pos&=INT{GINTOUT}
RETURN
PROCEDURE graf_handle(VAR h&,wc&,hc&,wb&,hb&)                           !  77
  INT{ADD(GCONTRL,2)}=0
  INT{ADD(GCONTRL,4)}=5
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  GEMSYS 77
  h&=INT{GINTOUT}
  wc&=INT{ADD(GINTOUT,2)}
  hc&=INT{ADD(GINTOUT,4)}
  wb&=INT{ADD(GINTOUT,6)}
  hb&=INT{ADD(GINTOUT,8)}
RETURN
PROCEDURE graf_mouse(gr_monumber&,gr_mofaddr%)                          !  78
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=gr_monumber&
  {ADDRIN}=gr_mofaddr%
  GEMSYS 78
RETURN
PROCEDURE graf_mkstate(VAR mx&,my&,mk&,kbd&)                            !  79
  INT{ADD(GCONTRL,2)}=0
  INT{ADD(GCONTRL,4)}=5
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  GEMSYS 79
  mx&=INT{ADD(GINTOUT,2)}
  my&=INT{ADD(GINTOUT,4)}
  mk&=INT{ADD(GINTOUT,6)}
  kbd&=INT{ADD(GINTOUT,8)}
RETURN
FUNCTION wind_create(code&,wx&,wy&,ww&,wh&)                             ! 100
  INT{ADD(GCONTRL,2)}=5
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=code&
  INT{ADD(GINTIN,2)}=wx&
  INT{ADD(GINTIN,4)}=wy&
  INT{ADD(GINTIN,6)}=ww&
  INT{ADD(GINTIN,8)}=wh&
  GEMSYS 100
  RETURN INT{GINTOUT}
ENDFUNC
PROCEDURE wind_open(fen&,wx&,wy&,ww&,wh&)                               ! 101
  INT{ADD(GCONTRL,2)}=5
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=fen&
  INT{ADD(GINTIN,2)}=wx&
  INT{ADD(GINTIN,4)}=wy&
  INT{ADD(GINTIN,6)}=ww&
  INT{ADD(GINTIN,8)}=wh&
  GEMSYS 101
RETURN
PROCEDURE wind_close(fen&)                                              ! 102
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=fen&
  GEMSYS 102
RETURN
PROCEDURE wind_delete(fen&)                                             ! 103
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=fen&
  GEMSYS 103
RETURN
PROCEDURE wind_get(fen&,code&,VAR wx&,wy&,ww&,wh&)                      ! 104
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=5
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=fen&
  INT{ADD(GINTIN,2)}=code&
  GEMSYS 104
  $S&,$S>
  SELECT code&
  CASE 4,5,6,7,11,12
    wx&=INT{ADD(GINTOUT,2)}
    wy&=INT{ADD(GINTOUT,4)}
    ww&=INT{ADD(GINTOUT,6)}
    wh&=INT{ADD(GINTOUT,8)}
  CASE 8,9,10,15,16
    wx&=INT{ADD(GINTOUT,2)}
  ENDSELECT
RETURN
PROCEDURE wind_set(fen&,code&,wx&,wy&,ww&,wh&)                          ! 105
  INT{ADD(GCONTRL,2)}=6
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=fen&
  INT{ADD(GINTIN,2)}=code&
  INT{ADD(GINTIN,4)}=wx&
  INT{ADD(GINTIN,6)}=wy&
  INT{ADD(GINTIN,8)}=ww&
  INT{ADD(GINTIN,10)}=wh&
  GEMSYS 105
RETURN
FUNCTION wind_find(mx&,my&)                                             ! 106
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=mx&
  INT{ADD(GINTIN,2)}=my&
  GEMSYS 106
  RETURN INT{GINTOUT}
ENDFUNC
PROCEDURE wind_update(flag&)                                            ! 107
  INT{ADD(GCONTRL,2)}=1
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=flag&
  GEMSYS 107
RETURN
PROCEDURE wind_calc(flag&,wk&,wx&,wy&,ww&,wh&,VAR wx1&,wy1&,ww1&,wh1&)  ! 108
  INT{ADD(GCONTRL,2)}=6
  INT{ADD(GCONTRL,4)}=5
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=flag&
  INT{ADD(GINTIN,2)}=wk&
  INT{ADD(GINTIN,4)}=wx&
  INT{ADD(GINTIN,6)}=wy&
  INT{ADD(GINTIN,8)}=ww&
  INT{ADD(GINTIN,10)}=wh&
  GEMSYS 108
  wx1&=INT{ADD(GINTOUT,2)}
  wy1&=INT{ADD(GINTOUT,4)}
  ww1&=INT{ADD(GINTOUT,6)}
  wh1&=INT{ADD(GINTOUT,8)}
RETURN
FUNCTION rsrc_load(n%)                                                  ! 110
  INT{ADD(GCONTRL,2)}=0
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=ap_id&
  {ADDRIN}=n%
  GEMSYS 110
  RETURN INT{GINTOUT}
ENDFUNC
PROCEDURE rsrc_free                                                     ! 111
  INT{ADD(GCONTRL,2)}=0
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=ap_id&
  GEMSYS 111
RETURN
FUNCTION rsrc_gaddr(re_gtype&,re_gindex&,VAR re_gaddr%)                 ! 112
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=0
  INT{ADD(GCONTRL,8)}=1
  INT{GINTIN}=re_gtype&
  INT{ADD(GINTIN,2)}=re_gindex&
  GEMSYS 112
  re_gaddr%={ADDROUT}
  RETURN INT{GINTOUT}
ENDFUNC
FUNCTION rsrc_saddr(re_gtype&,re_gindex&,VAR re_gaddr%)                 ! 113
  INT{ADD(GCONTRL,2)}=2
  INT{ADD(GCONTRL,4)}=1
  INT{ADD(GCONTRL,6)}=1
  INT{ADD(GCONTRL,8)}=0
  INT{GINTIN}=re_gtype&
  INT{ADD(GINTIN,2)}=re_gindex&
  GEMSYS 113
  re_gaddr%={ADDROUT}
  RETURN INT{GINTOUT}
ENDFUNC
FUNCTION rsrc_obfix(re_obj&,re_gaddr%)                                  ! 114
  INT{GINTIN}=re_obj&
  {ADDRIN}=re_gaddr%
  GEMSYS 114
  RETURN {ADDROUT}
ENDFUNC
' ******************************************************************************
PROCEDURE ob_state(arb%,obj&,bit&,ind!)
  IF ind!
    OB_STATE(arb%,obj&)=BSET(OB_STATE(arb%,obj&),bit&)
  ELSE
    OB_STATE(arb%,obj&)=BCLR(OB_STATE(arb%,obj&),bit&)
  ENDIF
RETURN
PROCEDURE ob_flags(arb%,obj&,bit&,ind!)
  IF ind!
    OB_FLAGS(arb%,obj&)=BSET(OB_FLAGS(arb%,obj&),bit&)
  ELSE
    OB_FLAGS(arb%,obj&)=BCLR(OB_FLAGS(arb%,obj&),bit&)
  ENDIF
RETURN
' ******************* Calcul manuel du clipping pour COPY RASTER ***************
PROCEDURE clip_raster(s%,sl%,sh%,sp%,d%,dl%,dh%,dp%,fx%,fy%,fw%,fh%,x11%,y11%,x21%,y21%)
  LOCAL x12%,y12%,x22%,y22%
  ' ********* Bien, alors la on r‚alise un CLIPPING … la main, parce-que les
  ' ********* COPY RASTER se moquent totalement des CLIPPINGs VDIs.
  IF fx%<xmax& AND fy%<ymax& AND ADD(fx%,fw%)>0 AND ADD(fy%,fh%)>0
    IF fx%<0
      ADD x11%,-fx%
      x21%=0
      SUB fw%,-fx%
    ENDIF
    IF ADD(fx%,fw%)>xmax&          ! ATTENTION on sort de l'‚cran en X … droite
      x12%=ADD(x11%,SUB(xmax&,fx%))           ! X2 du raster source
      x22%=xmax&                              ! X2 du raster destination
    ELSE                           ! Ah ! l… tout va bien
      x12%=ADD(x11%,fw%)                      ! X2 du raster source
      x22%=ADD(x21%,fw%)                      ! X2 du raster destination
    ENDIF
    IF fy%<0
      ADD y11%,-fy%
      y21%=0
      SUB fh%,-fy%
    ENDIF
    IF ADD(fy%,fh%)>ymax&          ! Attention on sort de l'‚cran en Y en bas
      y12%=ADD(y11%,SUB(ymax&,fy%))           ! Y2 du raster source
      y22%=ymax&                              ! Y2 du raster destination
    ELSE                           ! Ah ! l… tout va bien
      y12%=ADD(y11%,fh%)                      ! Y2 du raster source
      y22%=ADD(y21%,fh%)                      ! Y2 du raster destination
    ENDIF
    graf_mouse(m_off&,0)
    copy_raster_opaque(s%,sl%,sh%,sp%,d%,dl%,dh%,dp%,x11%,y11%,x12%,y12%,x21%,y21%,x22%,y22%)
    graf_mouse(m_on&,0)
  ENDIF
RETURN
' ******************************************************************************
' ******************************************************************************
' ****   Routine de gestion des fichiers ressouces ‚tendus d'INTERFACE II   ****
' ****   Pour ceux qui ne connaissent pas, les routines qui suivent sont    ****
' ****   fournis avec Interface II et permettent l'affichage d'ic“nes       ****
' ****   couleurs et anim‚es sur d'autres machines que des FALCONs          ****
' ******************************************************************************
PROCEDURE chargement_des_routines_xrsrc
  LOCAL l%,p%,f_base%,dummy%
  p%=@prendre(12)
  CHAR{p%}="OVERLAY.OVL"
  IF @s_exist(p%)
    l%=@prendre(25)
    f_base%=GEMDOS(&H4B,3,L:p%,L:l%,L:l%)
    IF f_base%>=0
      f_init%={ADD(f_base%,8)}
      {ADD(f_init%,4)}=p_xrsrc%
      $C+
      dummy%=C:f_init%(L:f_base%)
      $C-
      IF dummy%=0
        f_scalc%={ADD(f_init%,42)}
        r_resident!=TRUE
      ENDIF
    ENDIF
    libere(*l%)
  ENDIF
  libere(*p%)
RETURN
PROCEDURE xrsrc_exit
  IF r_resident!
    WORD{ADD(ADD(f_init%,4),36)}=129    ! Num‚ro de la fonction
    $C+
    r%=C:f_scalc%()
    $C-
  ENDIF
RETURN
FUNCTION xrsrc_free
  LOCAL r%
  IF r_resident!
    WORD{ADD(ADD(f_init%,4),36)}=2      ! Num‚ro de la fonction
    $C+
    r%=C:f_scalc%()
    $C-
    RETURN r%
  ELSE
    rsrc_free
    RETURN 0
  ENDIF
ENDFUNC
FUNCTION xrsrc_gaddr(re_gtype&,re_gindex&,VAR re_gaddr%)
  LOCAL r%
  IF r_resident!
    WORD{ADD(ADD(f_init%,4),36)}=3          ! Num‚ro de la fonction
    WORD{ADD(ADD(f_init%,4),0)}=re_gtype&
    WORD{ADD(ADD(f_init%,4),2)}=re_gindex&
    {ADD(ADD(f_init%,4),16)}=V:re_gaddr%
    $C+
    r%=C:f_scalc%()
    $C-
  ELSE
    r%=@rsrc_gaddr(re_gtype&,re_gindex&,re_gaddr%)
  ENDIF
  RETURN r%
ENDFUNC
PROCEDURE xrsrc_init
  IF r_resident!
    WORD{ADD(ADD(f_init%,4),36)}=128    ! Num‚ro de la fonction
    $C+
    r%=C:f_scalc%()
    $C-
  ENDIF
RETURN
FUNCTION xrsrc_load(n%)
  LOCAL r%
  IF r_resident!
    WORD{ADD(ADD(f_init%,4),36)}=1                  ! Num‚ro de la fonction
    {ADD(ADD(f_init%,4),16)}=n%
    $C+
    r%=C:f_scalc%()
    $C-
  ELSE
    r%=@rsrc_load(n%)
  ENDIF
  RETURN r%
ENDFUNC
FUNCTION xrsrc_obfix(re_gaddr%,re_obj&)
  LOCAL r%
  IF r_resident!
    WORD{ADD(ADD(f_init%,4),36)}=5          ! Num‚ro de la fonction
    WORD{ADD(ADD(f_init%,4),0)}=re_obj&
    {ADD(ADD(f_init%,4),16)}=re_gaddr%
    $C+
    r%=C:f_scalc%()
    $C-
  ELSE
    r%=@rsrc_obfix(re_obj&,re_gaddr%)
  ENDIF
  RETURN r%
ENDFUNC
FUNCTION xrsrc_saddr(re_gtype&,re_gindex&,VAR re_gaddr%)
  LOCAL r%
  IF r_resident!
    WORD{ADD(ADD(f_init%,4),36)}=4          ! Num‚ro de la fonction
    WORD{ADD(ADD(f_init%,4),0)}=re_gtype&
    WORD{ADD(ADD(f_init%,4),2)}=re_gindex&
    {ADD(ADD(f_init%,4),16)}=V:re_gaddr%
    $C+
    r%=C:f_scalc%()
    $C-
  ELSE
    r%=@rsrc_saddr(re_gtype&,re_gindex&,re_gaddr%)
  ENDIF
  RETURN r%
ENDFUNC
' ******************************************************************************
' ** Voila, j'ai fini. A vous de jouer maintenant. Bon courage !!!            **
' ******************************************************************************
