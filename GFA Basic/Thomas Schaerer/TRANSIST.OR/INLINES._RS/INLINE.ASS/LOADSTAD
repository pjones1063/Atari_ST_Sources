; Dieses Programm packt STAD-Bilder aus.
; Programm steht in 'ST-Computer 11/88' Seite 110-111
; und wurde von mir an GFA-Basic/Assembler angepažt.



          .TEXT 
          movea.l   4(sp),a0  ; a0 = komprimiertes quellbild
          movea.l   8(sp),a1  ; a1 = zielbild
          move.w    #31999,d6 ; d6 = gesamtzahl der bildbytes (32000)



stad_decomp:        
          movea.l   a1,a4     ;a1,a4,a3=zielbild
          movea.l   a4,a3
          movea.l   a0,a2     ;a0,a2=puffer
          move.w    d6,d2     ;d2 = 32000

          cmpi.l    #'pM86',(a2)
          bne       dchoriz

;************** vertikal auspacken *************

          addq.l    #4,a2     ;Zeiger auf Datenanf.
          move.b    (a2)+,d4  ;d4=kennbyte
          clr.w     d6
          move.b    (a2)+,d6  ;d6=packbyte
          move.b    (a2)+,d5  ;d5=spezbyte
          move.w    #400,d3   ;d3=400
dcvr10:   
          clr.w     d7        ;d7=0
          move.b    (a2)+,d0  ;1. Byte nach d0
          cmp.b     d4,d0     ;Kennbyte ?
          bne.s     dcvr1     ;wenn nicht
          move.b    d6,d1     ;Packbyte nach d1
          move.b    (a2)+,d7  ;n nach d7
          bra.s     dcvrloop
dcvr1:    
          cmp.b     d5,d0     ;Spezbyte ?
          beq.s     dcvr2     ;wenn ja
          move.b    d0,(a3)
          clr.w     d7
          bra.s     dcvrall
dcvr2:    
          move.b    (a2)+,d1  ;Datenbyte nach d1
          bne       dcvr3     ;wenn nicht
          tst.b     (a2)      ;????????
          beq.s     stad_end  ;?????????
dcvr3:    
          move.b    (a2)+,d7
dcvrloop: 
          move.b    d1,(a3)
dcvrall:  
          subq.w    #1,d2
          bmi.s     stad_end
          lea.l     80(a3),a3
          subq.w    #1,d3
          bne.s     dcvr0
          move.w    #400,d3
          movea.l   a4,a3
          addq.l    #1,a3
          movea.l   a3,a4
dcvr0:    
          dbra      d7,dcvrloop
          bra.s     dcvr10

;****************** horiz auspacken *****************

dchoriz:  
          cmpi.l    #'pM85',(a2)+
          bne.s     stad_end
          move.b    (a2)+,d4  ;kennbyte>d4
          clr.w     d6
          move.b    (a2)+,d6  ;Packbyte>d6
          move.b    (a2)+,d5  ;Spezbyte>d5
dchr10:   
          clr.w     d7
          move.b    (a2)+,d0  ;1. Byte holen
          cmp.b     d4,d0     ;Kennbyte ?
          bne.s     dchr1     ;wenn nicht...
          move.b    d6,d1     ;Packbyte>d1
          move.b    (a2)+,d7  ;n>d7
          bra.s     dchrloop  ;springe...
dchr1:    
          cmp.b     d5,d0     ;Spezbyte ?
          beq.s     dchr2     ;wenn ja ...
          move.b    d0,(a3)+  ;sonst Byte kopieren
          subq.w    #1,d2     ;Gesamt-1
          bmi.s     stad_end  ;wenn negativ ...
          bra.s     dchr10    ;sonst ...
dchr2:    
          move.b    (a2)+,d1  ;Datenbyte>d1
          bne       dchr3     ;???
          tst.b     (a2)      ;???
          beq.s     stad_end
dchr3:    
          move.b    (a2)+,d7  ;n>d7
dchrloop:           ;                                      |
          move.b    d1,(a3)+  ;Datenbyte>Bildschirm |
          subi.w    #1,d2     ;Gesamt-1             |
          bmi.s     stad_end  ;wenn negativ         |
          dbra      d7,dchrloop         ;loop                 |
          bra.s     dchr10
stad_end: 
          rts       



