'
' 4.13 - 4.20 sound_effects2                                     SOUNDS_2.LST
' ===========================================================================
' This routine consists of eight separate sound effect procedures which use
' pre-recorded sound samples loaded via INLINE commands. The sound effects
' procedures included are:
'
'   pompom, caution, explosion3, glassbreak, pullup, taps, warning, welcome
'
' NOTE: All procedures EXCEPT pompom (an XBIOS 32 format sound routine) must
' be intialized by loading the sound sample player BASCODE.EXE via the
' procedure init_samples.  This init routine only needs to be called once.
'
' NOTE: Do NOT edit or place comments on the program lines which contain an
' INLINE statement!  Do not SAVE,A any procedure with an INLINE statement or
' you will have to reload the *.INL code from disk.
' ===========================================================================
'
'
PROCEDURE init_samples
  ' *** initialization routine for sound samples
  ' BASCODE.EXE is an ML routine for playing sound samples compatible with
  ' the ST Replay sound digitizer by MicroDeal.
  ' *** load BASCODE.EXE (8000 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE bascode%,8000
RETURN
'
'
PROCEDURE pompom                                ! 1
  ' *** play Pompom-tune (XBIOS 32 format)
  ' *** load POMPOM.INL (384 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE pompom.snd%,384
  ~XBIOS(32,L:pompom.snd%)
  PAUSE 400
  WAVE 0,0
RETURN
'
'
PROCEDURE caution                               ! 2
  '  Sound sample courtesy of Spectrum HoloByte Software.
  LOCAL caution%,start%
  ' *** load CAUTION.INL (4608 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE caution%,4608
  start%=bascode%+28
  LONG{start%+2}=caution%
  LONG{start%+6}=4608
  LONG{start%+10}=0
  CALL start%
RETURN
'
'
PROCEDURE explosion3                            ! 3
  '  Sound sample courtesy of Spectrum HoloByte Software.
  LOCAL explosion3%,start%
  ' *** load EXPLOSION.INL (12406 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE explosion3%,12406
  start%=bascode%+28
  LONG{start%+2}=explosion3%
  LONG{start%+6}=12406
  LONG{start%+10}=0
  CALL start%
RETURN
'
'
PROCEDURE glassbreak                            ! 4
  LOCAL glassbreak%,start%
  ' *** load GLASSBREAK.INL (12856 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE glassbreak%,12856
  start%=bascode%+28
  LONG{start%+2}=glassbreak%
  LONG{start%+6}=12856
  LONG{start%+10}=2
  CALL start%
RETURN
'
'
PROCEDURE pullup                                ! 5
  '  Sound sample courtesy of Spectrum HoloByte Software.
  LOCAL pullup%,start%
  ' *** load PULLUP.INL (2304 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE pullup%,2304
  start%=bascode%+28
  LONG{start%+2}=pullup%
  LONG{start%+6}=2304
  LONG{start%+10}=0
  CALL start%
RETURN
'
'
PROCEDURE taps                                  ! 6
  '  Sound sample courtesy of Spectrum HoloByte Software.
  LOCAL taps%,start%
  ' *** load TAPS.INL (20350 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE taps%,20350
  start%=bascode%+28
  LONG{start%+2}=taps%
  LONG{start%+6}=20350
  LONG{start%+10}=0
  CALL start%
RETURN
'
'
PROCEDURE warning                               ! 7
  '  Sound sample courtesy of Spectrum HoloByte Software.
  LOCAL warning%,start%
  ' *** load WARNING.INL (2880 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE warning%,2880
  start%=bascode%+28
  LONG{start%+2}=warning%
  LONG{start%+6}=2880
  LONG{start%+10}=0
  CALL start%
RETURN
'
'
PROCEDURE welcome                               ! 8
  LOCAL welcome%,start%
  ' *** load WELCOME.INL (16980 bytes) here
  ' NOTE: Do NOT edit or place comments on the following line!
  INLINE welcome%,16980
  start%=bascode%+28
  LONG{start%+2}=welcome%
  LONG{start%+6}=16980
  LONG{start%+10}=3
  CALL start%
RETURN
'
