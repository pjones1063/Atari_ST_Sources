' 2.08 - 2.25 bitblit_effects
' ===========================================================================
' BITBLIT.LST
'
' This routine consists of seventeen separate BITBLT type video effect
' procedures which are to be called independently.  No parameters
' are required.  The effects procedures included in this routine are:
'
'      iris, rndom, cross, assemble, checker, vert_blind, curtains,
'      spiral, puzzle, wipe_right, wipe_left, wipe_up, wipe_down,
'      appear_down, appear_up, appear_left, appear_right
'
' The intended use for these routines is to load or build a screen display
' to a hidden, alternate screen address then call a BITBLT routine to
' display it to the physical screen.  Potential is unlimited, of course.
'
' This routine also includes the procedure setup_bitblit, which must be
' called from each BITBLT video procdure.  Ensure this procedure is
' merged into your program along with the desired effects procedures.
'
' You must initialize these procedures by setting aside screen memory
' and dimensioning temporary arrays.  Also, the procedure check_res
' must be called prior to setup_bitblit.  For example:
'
'      scr0%=XBIOS(2)                   ! physical screen address
'      scr1$=STRING$(32767,0)           ! reserve some space
'      scr1%=V:scr1$                    ! background screen address
'      DIM s%(5),d%(5),p%(8)            ! dimension BITBLT arrays
'      check_res                        ! find resolution
'
' *** NOTE: Most routines have been designed for LOW resolution use only.
'           Change the array elements accordingly for other resolutions.
'
' For those who wish to experiment with BITBLT, array definitions are:
'
' *** p%(0) thru p%(3) contain source block coordinates:
' p%(0) is left x-coordinate of source block
' p%(1) is upper y-coordinate of source block
' p%(2) is right x-coordinate of source block
' p%(3) is lower y-coordinate of source block
'
' *** p%(4) thru p%(7) contain destination block coordinates:
' p%(4) is left x-coordinate of destination block
' p%(5) is upper y-coordinate of destination block
' p%(6) is right x-coordinate of destination block
' p%(7) is lower y-coordinate of destination block
'
' p%(8) is the graphics copy mode (3, 6, 7 or 13)
' *** 3 = Replace, 6 = XOR, 7 = Transparent, 13 = Inverse Transparent
'
' *** s%() contains SMFDB (Source Memory Form Description Block)
' s%(0) is the source screen address
' s%(1) is the screen pixel width (must be divisible by 16)
' s%(2) is the screen pixel height
' s%(3) is the screen width in words (or number of pixels/16)
' s%(4) is reserved: always zero
' s%(5) is the number of bit planes: 1=high res, 2=med res, 4=low res
'
' *** d%() contains DMFDB (Destination Memory Form Description Block)
' d%(0) is the destination screen address
' d%(1) is the screen pixel width (must be divisible by 16)
' d%(2) is the screen pixel height
' d%(3) is the screen width in words (or number of pixels/16)
' d%(4) is reserved: always zero
' d%(5) is the number of bit planes: 1=high res, 2=med res, 4=low res
' ===========================================================================
'
PROCEDURE setup_bitblit
  ' *** Bitblit initialization routine
  p%(0)=0                               ! Left x-coordinate of source block
  p%(8)=3                               ! Replace copy mode
  s%(0)=scr1%                           ! source address is alternate screen
  s%(1)=320-320*(res<>0)                ! screen pixel width (divis. by 16)
  s%(2)=200-200*(res=2)                 ! screen pixel height
  s%(3)=INT((s%(1)+15)/16)              ! screen word width (pixels/16)
  s%(4)=0                               ! Reserved: always zero
  s%(5)=4-2*(res)-(res=2)               ! bit planes: 1=high, 2=med, 4=low res
  d%(0)=scr0%                           ! destination address is physical screen
  d%(1)=s%(1)                           ! screen pixel width (divis. by 16)
  d%(2)=s%(2)                           ! screen pixel height
  d%(3)=s%(3)                           ! screen word width (pixels/16)
  d%(4)=0                               ! Reserved: always zero
  d%(5)=s%(5)                           ! bit planes: 1=high, 2=med, 4=low res
RETURN
'
'
PROCEDURE iris                          ! 1
  ' *** Bitblit video effect
  LOCAL i%
  setup_bitblit                         ! initialize bitblit arrays
  FOR i%=1 TO 39
    p%(0)=s%(1)/2-i%*s%(1)/80
    p%(4)=p%(0)
    p%(1)=s%(2)/2-i%*s%(2)/80
    p%(5)=p%(1)
    p%(2)=s%(1)/2+i%*s%(1)/80-1
    p%(6)=p%(2)
    p%(3)=s%(2)/2+i%*s%(2)/80-1
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
  NEXT i%
  BMOVE scr1%,scr0%,32000
RETURN
'
'
PROCEDURE rndom                         ! 2
  ' *** Bitblit video effect
  setup_bitblit                         ! initialize bitblit arrays
  LOCAL a$,i%,r%,j%
  a$=SPACE$(400)
  FOR i%=0 TO 399
    DPOKE VARPTR(a$)+i%*2,i%
  NEXT i%
  FOR i%=399 DOWNTO 0
    r%=RANDOM(i%)
    j%=DPEEK(VARPTR(a$)+r%*2)
    p%(0)=(j% MOD 20)*INT(s%(1)/20)
    p%(1)=INT(j%/20)*INT(s%(2)/20)
    p%(2)=p%(0)+INT(s%(1)/20)
    p%(3)=p%(1)+INT(s%(2)/20)
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    DPOKE VARPTR(a$)+r%*2,DPEEK(VARPTR(a$)+i%*2)
    BITBLT s%(),d%(),p%()
  NEXT i%
RETURN
'
'
PROCEDURE cross                         ! 3
  ' *** Bitblit video effect
  LOCAL i
  setup_bitblit                         ! initialize bitblit arrays
  FOR i=1 TO 20
    p%(0)=0
    p%(1)=0
    p%(2)=i*s%(1)/40-1
    p%(3)=i*s%(2)/40
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(1)=s%(2)-p%(3)
    p%(3)=s%(2)-1
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(0)=s%(1)-p%(2)-1
    p%(2)=s%(1)-1
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(1)=0
    p%(3)=i*s%(2)/40
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
  NEXT i
RETURN
'
'
PROCEDURE assemble                      ! 4
  ' *** Bitblit video effect
  LOCAL i,j
  setup_bitblit                         ! initialize bitblit arrays
  FOR i=0 TO 39
    FOR j=0 TO 7
      p%(1)=j*s%(2)/8
      p%(3)=p%(1)+s%(2)/8
      IF EVEN(j)
        p%(0)=i*s%(1)/40
      ELSE
        p%(0)=s%(1)-i*s%(1)/40-s%(1)/40
      ENDIF
      p%(2)=p%(0)+s%(1)/40-1
      p%(4)=p%(0)
      p%(5)=p%(1)
      p%(6)=p%(2)
      p%(7)=p%(3)
      BITBLT s%(),d%(),p%()
    NEXT j
  NEXT i
RETURN
'
'
PROCEDURE checker                       ! 5
  ' *** Bitblit video effect
  LOCAL i,j%
  setup_bitblit                         ! initialize bitblit arrays
  FOR i=0 TO 99
    j%=i*2-ODD(INT(i*2/10))+99*(i>49)+2*(ODD(INT(i*2/10)) AND i>49)
    p%(0)=(j% MOD 10)*INT(s%(1)/10)
    p%(1)=INT(j%/10)*INT(s%(2)/10)
    p%(2)=p%(0)+INT(s%(1)/10)
    p%(3)=p%(1)+INT(s%(2)/10)
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
  NEXT i
RETURN
'
'
PROCEDURE vert_blind                    ! 6
  ' *** Bitblit video effect
  LOCAL x
  setup_bitblit                         ! initialize bitblit arrays
  FOR x=0 TO 39
    p%(0)=x
    p%(1)=0
    p%(2)=x
    p%(3)=199
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(0)=x+40
    p%(1)=0
    p%(2)=x+40
    p%(3)=199
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(0)=x+80
    p%(1)=0
    p%(2)=x+80
    p%(3)=199
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(0)=x+120
    p%(1)=0
    p%(2)=x+120
    p%(3)=199
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(0)=x+160
    p%(1)=0
    p%(2)=x+160
    p%(3)=199
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(0)=x+200
    p%(1)=0
    p%(2)=x+200
    p%(3)=199
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(0)=x+240
    p%(1)=0
    p%(2)=x+240
    p%(3)=199
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
    p%(0)=x+280
    p%(1)=0
    p%(2)=x+280
    p%(3)=199
    p%(4)=p%(0)
    p%(5)=p%(1)
    p%(6)=p%(2)
    p%(7)=p%(3)
    BITBLT s%(),d%(),p%()
  NEXT x
RETURN
'
'
PROCEDURE curtains                      ! 7
  ' *** Bitblit video effect
  LOCAL x
  setup_bitblit                         ! initialize bitblit arrays
  FOR x=160 TO 0 STEP -1
    p%(0)=x
    p%(1)=0
    p%(2)=x
    p%(3)=199
    p%(4)=x
    p%(5)=0
    p%(6)=x
    p%(7)=199
    BITBLT s%(),d%(),p%()
    p%(0)=319-x
    p%(1)=0
    p%(2)=319-x
    p%(3)=199
    p%(4)=319-x
    p%(5)=0
    p%(6)=319-x
    p%(7)=199
    BITBLT s%(),d%(),p%()
  NEXT x
RETURN
'
'
PROCEDURE spiral                        ! 8
  ' *** Bitblit video effect
  LOCAL x%
  setup_bitblit                         ! initialize bitblit arrays
  FOR x%=0 TO 319
    p%(0)=x%
    p%(1)=0
    p%(2)=x%
    p%(3)=20
    p%(4)=x%
    p%(5)=0
    p%(6)=x%
    p%(7)=20
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=0 TO 199
    p%(0)=287
    p%(1)=x%
    p%(2)=319
    p%(3)=x%
    p%(4)=287
    p%(5)=x%
    p%(6)=319
    p%(7)=x%
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=287 TO 0 STEP -1
    p%(0)=x%
    p%(1)=179
    p%(2)=x%
    p%(3)=199
    p%(4)=x%
    p%(5)=179
    p%(6)=x%
    p%(7)=199
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=179 TO 21 STEP -1
    p%(0)=0
    p%(1)=x%
    p%(2)=32
    p%(3)=x%
    p%(4)=0
    p%(5)=x%
    p%(6)=32
    p%(7)=x%
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=21 TO 299
    p%(0)=x%
    p%(1)=21
    p%(2)=x%
    p%(3)=40
    p%(4)=x%
    p%(5)=21
    p%(6)=x%
    p%(7)=40
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=40 TO 179
    p%(0)=255
    p%(1)=x%
    p%(2)=286
    p%(3)=x%
    p%(4)=255
    p%(5)=x%
    p%(6)=286
    p%(7)=x%
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=279 TO 0 STEP -1
    p%(0)=x%
    p%(1)=159
    p%(2)=x%
    p%(3)=179
    p%(4)=x%
    p%(5)=159
    p%(6)=x%
    p%(7)=179
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=159 TO 41 STEP -1
    p%(0)=33
    p%(1)=x%
    p%(2)=64
    p%(3)=x%
    p%(4)=33
    p%(5)=x%
    p%(6)=64
    p%(7)=x%
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=41 TO 255
    p%(0)=x%
    p%(1)=41
    p%(2)=x%
    p%(3)=60
    p%(4)=x%
    p%(5)=41
    p%(6)=x%
    p%(7)=60
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=61 TO 159
    p%(0)=222
    p%(1)=x%
    p%(2)=254
    p%(3)=x%
    p%(4)=222
    p%(5)=x%
    p%(6)=254
    p%(7)=x%
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=221 TO 64 STEP -1
    p%(0)=x%
    p%(1)=139
    p%(2)=x%
    p%(3)=159
    p%(4)=x%
    p%(5)=139
    p%(6)=x%
    p%(7)=159
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=139 TO 61 STEP -1
    p%(0)=65
    p%(1)=x%
    p%(2)=96
    p%(3)=x%
    p%(4)=65
    p%(5)=x%
    p%(6)=96
    p%(7)=x%
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=97 TO 221
    p%(0)=x%
    p%(1)=61
    p%(2)=x%
    p%(3)=80
    p%(4)=x%
    p%(5)=61
    p%(6)=x%
    p%(7)=80
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=81 TO 139
    p%(0)=189
    p%(1)=x%
    p%(2)=221
    p%(3)=x%
    p%(4)=189
    p%(5)=x%
    p%(6)=221
    p%(7)=x%
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=188 TO 97 STEP -1
    p%(0)=x%
    p%(1)=119
    p%(2)=x%
    p%(3)=139
    p%(4)=x%
    p%(5)=119
    p%(6)=x%
    p%(7)=139
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=119 TO 80 STEP -1
    p%(0)=97
    p%(1)=x%
    p%(2)=130
    p%(3)=x%
    p%(4)=97
    p%(5)=x%
    p%(6)=130
    p%(7)=x%
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=131 TO 190
    p%(0)=x%
    p%(1)=81
    p%(2)=x%
    p%(3)=100
    p%(4)=x%
    p%(5)=81
    p%(6)=x%
    p%(7)=100
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=190 TO 131 STEP -1
    p%(0)=x%
    p%(1)=100
    p%(2)=x%
    p%(3)=119
    p%(4)=x%
    p%(5)=100
    p%(6)=x%
    p%(7)=119
    BITBLT s%(),d%(),p%()
  NEXT x%
RETURN
'
'
PROCEDURE wipe_right                    ! 9
  ' *** Bitblit video effect
  LOCAL x%
  setup_bitblit                         ! initialize bitblit arrays
  FOR x%=0 TO 319
    p%(0)=x%
    p%(1)=0
    p%(2)=x%
    p%(3)=199
    p%(4)=x%
    p%(5)=0
    p%(6)=x%
    p%(7)=199
    BITBLT s%(),d%(),p%()
  NEXT x%
RETURN
'
'
PROCEDURE wipe_left                     ! 10
  ' *** Bitblit video effect
  LOCAL x%
  setup_bitblit                         ! initialize bitblit arrays
  FOR x%=319 TO 0 STEP -1
    p%(0)=x%
    p%(1)=0
    p%(2)=x%
    p%(3)=199
    p%(4)=x%
    p%(5)=0
    p%(6)=x%
    p%(7)=199
    BITBLT s%(),d%(),p%()
  NEXT x%
RETURN
'
'
PROCEDURE wipe_up                       ! 11
  ' *** Bitblit video effect
  LOCAL x
  setup_bitblit                         ! initialize bitblit arrays
  FOR x=199 TO 0 STEP -1
    p%(0)=0
    p%(1)=x
    p%(2)=319
    p%(3)=x
    p%(4)=0
    p%(5)=x
    p%(6)=319
    p%(7)=x
    BITBLT s%(),d%(),p%()
    PAUSE 1
  NEXT x
RETURN
'
'
PROCEDURE wipe_down                     ! 12
  ' *** Bitblit video effect
  LOCAL x
  setup_bitblit                         ! initialize bitblit arrays
  FOR x=0 TO 199
    p%(0)=0
    p%(1)=x
    p%(2)=319
    p%(3)=x
    p%(4)=0
    p%(5)=x
    p%(6)=319
    p%(7)=x
    BITBLT s%(),d%(),p%()
    PAUSE 1
  NEXT x
RETURN
'
'
PROCEDURE puzzle                        ! 13
  ' *** Bitblit video effect
  setup_bitblit                         ! initialize bitblit arrays
  p%(0)=0
  p%(1)=0
  p%(2)=100
  p%(3)=50
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5                              ! adjust PAUSE durations as desired
  p%(0)=160
  p%(1)=50
  p%(2)=210
  p%(3)=170
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=50
  p%(1)=170
  p%(2)=100
  p%(3)=199
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=265
  p%(1)=100
  p%(2)=319
  p%(3)=199
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=260
  p%(1)=0
  p%(2)=319
  p%(3)=50
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=0
  p%(1)=150
  p%(2)=50
  p%(3)=199
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=100
  p%(1)=0
  p%(2)=160
  p%(3)=75
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=100
  p%(1)=170
  p%(2)=210
  p%(3)=199
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=0
  p%(1)=50
  p%(2)=50
  p%(3)=150
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=210
  p%(1)=50
  p%(2)=319
  p%(3)=100
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=50
  p%(1)=50
  p%(2)=100
  p%(3)=75
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=100
  p%(1)=0
  p%(2)=160
  p%(3)=75
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=210
  p%(1)=100
  p%(2)=265
  p%(3)=199
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=160
  p%(1)=0
  p%(2)=260
  p%(3)=50
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
  p%(0)=50
  p%(1)=75
  p%(2)=160
  p%(3)=170
  p%(4)=p%(0)
  p%(5)=p%(1)
  p%(6)=p%(2)
  p%(7)=p%(3)
  BITBLT s%(),d%(),p%()
  PAUSE 5
RETURN
'
'
PROCEDURE appear_dn                     ! 14
  ' *** Bitblit video effect
  LOCAL x
  setup_bitblit                         ! initialize bitblit arrays
  FOR x=0 TO 199 STEP 2
    p%(0)=0
    p%(1)=x
    p%(2)=319
    p%(3)=x
    p%(4)=0
    p%(5)=x
    p%(6)=319
    p%(7)=x
    BITBLT s%(),d%(),p%()
  NEXT x
  FOR x=1 TO 198 STEP 2
    p%(0)=0
    p%(1)=x
    p%(2)=319
    p%(3)=x
    p%(4)=0
    p%(5)=x
    p%(6)=319
    p%(7)=x
    BITBLT s%(),d%(),p%()
  NEXT x
RETURN
'
'
PROCEDURE appear_up                     ! 15
  ' *** Bitblit video effect
  LOCAL x
  setup_bitblit                         ! initialize bitblit arrays
  FOR x=199 TO 0 STEP -2
    p%(0)=0
    p%(1)=x
    p%(2)=319
    p%(3)=x
    p%(4)=0
    p%(5)=x
    p%(6)=319
    p%(7)=x
    BITBLT s%(),d%(),p%()
  NEXT x
  FOR x=198 TO 1 STEP -2
    p%(0)=0
    p%(1)=x
    p%(2)=319
    p%(3)=x
    p%(4)=0
    p%(5)=x
    p%(6)=319
    p%(7)=x
    BITBLT s%(),d%(),p%()
  NEXT x
RETURN
'
'
PROCEDURE appear_left                   ! 16
  ' *** Bitblit video effect
  LOCAL x%
  setup_bitblit                         ! initialize bitblit arrays
  FOR x%=319 TO 0 STEP -2
    p%(0)=x%
    p%(1)=0
    p%(2)=x%
    p%(3)=199
    p%(4)=x%
    p%(5)=0
    p%(6)=x%
    p%(7)=199
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=318 TO 1 STEP -2
    p%(0)=x%
    p%(1)=0
    p%(2)=x%
    p%(3)=199
    p%(4)=x%
    p%(5)=0
    p%(6)=x%
    p%(7)=199
    BITBLT s%(),d%(),p%()
  NEXT x%
RETURN
'
'
PROCEDURE appear_right                  ! 17
  ' *** Bitblit video effect
  LOCAL x%
  setup_bitblit                         ! initialize bitblit arrays
  FOR x%=0 TO 319 STEP 2
    p%(0)=x%
    p%(1)=0
    p%(2)=x%
    p%(3)=199
    p%(4)=x%
    p%(5)=0
    p%(6)=x%
    p%(7)=199
    BITBLT s%(),d%(),p%()
  NEXT x%
  FOR x%=1 TO 318 STEP 2
    p%(0)=x%
    p%(1)=0
    p%(2)=x%
    p%(3)=199
    p%(4)=x%
    p%(5)=0
    p%(6)=x%
    p%(7)=199
    BITBLT s%(),d%(),p%()
  NEXT x%
RETURN
