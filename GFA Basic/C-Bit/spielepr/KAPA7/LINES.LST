' ***********************
' *                     *
' *  STARS mit LINIEN   *
' *  statt Punkten      *
' *                     *
' ***********************
'
' Auch dieses Programm ist nur ein kleines Demonstrationsprogramm
' und nicht als eigenstÑndige (GEM konforme) Aplikation gedacht
'
' + mehr Linien
' - weniger Linien
'
' Q = Quit
'
' Tasten 1 .. 0 Geschwindigkeit
'
RESERVE 10000 ! Speicher an das Betriebssystem zurÅckgeben
ON BREAK GOSUB ende
' ********************************************************************
' Initialisieren der Variablen fÅr auflîsungsunhabhÑngige Bildausgabe
DIM px%(500),py%(500),dx&(500),dy&(500),scmem%(3)
xmax&=WORK_OUT(0)*10
ymax&=WORK_OUT(1)*10
xmh&=xmax&/2
ymh&=ymax&/2
xinc|=xmax&/800
yinc|=ymax&/500
' *********************************************************************
' momentaner Bildschrimspeicher
scmem%=XBIOS(3)
' berechnen des Speicherbedarfs der Auflîsung (nicht fÅr Falcon Direct Color)
mem%=(WORK_OUT(0)+1)*(WORK_OUT(1)+1)*LOG(WORK_OUT(13))/LOG(2)/8
scbuf%=MALLOC(3*mem%+256) ! neue Bildspeicher allocieren
IF scbuf%=0
  END
ENDIF
scb%=AND(scbuf%,&HFFFFFFF0)+256 ! auf 256 Byte Grenze bringen
scmem%(1)=scb%
scmem%(2)=scmem%(1)+mem%
scmem%(3)=scmem%(2)+mem%
VSETCOLOR 0,0,0,0
VSETCOLOR 1,7,7,7
' Anfangswerte der Variablen
n|=1 ! Nummer des physikalischen Bildschirmspeichers
nn|=3 ! Nummer des logischen Bildschirmsp.
xw|=5 ! Faktor X
yw|=5 ! Faktor Y
ssp|=1 ! Verzîgerung der Ausdehnung
menge&=20 ! Menge der Sterne, muû < 500 sein
FOR t&=1 TO 500
  init
NEXT t&
COLOR 1
DO
  steuerung
  IF INP(-2)=-1
    c|=INP(2)
    IF c|>48 AND c|<58 ! Tasten 1 2 3 ... 0 Geschwindigkeit
      ssp|=10-(c|-48)
    ELSE IF c|=43 ! +
      INC menge&
    ELSE IF c|=45 ! -
      DEC menge&
    ELSE IF BCLR(c|,5)=81 ! Q = Quit
      ende
    ENDIF
    IF menge&=500
      menge&=1
    ENDIF
    IF menge&=0
      menge&=500
    ENDIF
  ENDIF
  VOID XBIOS(5,L:scmem%(n|),L:scmem%(nn|),-1)
  INC n|
  INC nn|
  IF nn|>3
    nn|=1
  ENDIF
  IF n|>3
    n|=1
  ENDIF
  CLS
  t&=1
  FOR t&=1 TO menge&
    DRAW  TO x&+px%(t&)/xw|,y&+py%(t&)/yw|
    ADD px%(t&),dx&(t&)/ssp|
    ADD py%(t&),dy&(t&)/ssp|
    IF px%(t&)<0 OR py%(t&)<0 OR px%(t&)>xmax& OR py%(t&)>ymax&
      init
    ENDIF
  NEXT t&
LOOP
PROCEDURE init
  dx&(t&)=INT(120*RND)
  dy&(t&)=INT(120*RND)
  IF dx&(t&)=60
    dx&(t&)=59
  ENDIF
  IF dy&(t&)=60
    dy&(t&)=59
  ENDIF
  dy&(t&)=dy&(t&)-60
  dx&(t&)=dx&(t&)-60
  px%(t&)=xmh&+15*dx&(t&)
  py%(t&)=ymh&+15*dy&(t&)
RETURN
PROCEDURE steuerung
  IF viel|=0
    READ viel|
    IF viel|=0
      RESTORE
      READ viel|
    ENDIF
    READ v|
  ENDIF
  DEC viel|
  IF BTST(v|,0)=TRUE
    INC xw|
  ENDIF
  IF BTST(v|,1)=TRUE
    INC yw|
  ENDIF
  IF BTST(v|,2)=TRUE
    SUB x&,xinc|
  ENDIF
  IF BTST(v|,3)=TRUE
    SUB y&,yinc|
  ENDIF
  IF BTST(v|,4)=TRUE
    DEC xw|
  ENDIF
  IF BTST(v|,5)=TRUE
    DEC yw|
  ENDIF
  IF BTST(v|,6)=TRUE
    ADD x&,xinc|
  ENDIF
  IF BTST(v|,7)=TRUE
    ADD y&,yinc|
  ENDIF
RETURN
'
' Unteres Nibble
' %0001 X stauchen
' %0010 y stauchen
' %0100 x subtrahieren
' %1000 y subtrahieren
'
' Oberes Nibble
' %0001 X dehnen
' %0010 y dehnen
' %0100 x addieren
' %1000 y addieren
'
PROCEDURE ende
  VOID XBIOS(5,L:scmem%,L:scmem%,-1)
  VOID MFREE(scbuf%)
  VSYNC
  END
RETURN
DATA 30,%0011,30,%11000000,20,%110000,5,%110000,30,%1100,100,0,60,%11000011
DATA 30,%1000,30,%1100,30,%110100,37,%111100,50,0,37,%11000011,30,%110000
DATA 100,0,5,%110000,50,0,0
