

                                                 Bedburg,den 15.04.1989

               RESOURCE - ANALYSER UND REASSEMBLER   V1.20


DIESES PROGRAMM IST PUBLIC DOMAIN UND DARF BELIEBIG KOPIERT UND WEITERGEGEBEN
WERDEN.
ALLE ZUM PROGRAMM GEHôRENDEN DATEIEN MöSSEN SICH IM ORDNER 'R_A_U_R1.20' AUF
DEM LAUFWERK BEFINDEN VON DEM AUCH GFA-BASIC ODER DER BEILIEGENDE RUN-ONLY-
INTERPRETER GESTARTET WIRD!
DAS ERZEUGTE REASSEMBLERLISTING WIRD IN DIE ROOT DES LAUFWERKS GESCHRIEBEN
UND HAT IMMER DIE BEZEICHNUNG 'RSC_QUEL.Q'.

Da ich davon ausgehe, daû Leute,die RSC-Files analysieren und/oder in Assembler
programmieren, dies nicht mit einem Farbmonitor (iiiih !!) tun, habe ich mir 
auch nicht die MÅhe gemacht, dieses Programm an eine andere als die HOHE AUF-
LôSUNG anzupassen.

Das Programm ist dazu gedacht, bestehende RSC-Files zu analysieren und/oder zu
reassemblieren, um einen lesbaren Quelltext zu erhalten.
Diesen Quelltext kann man entweder direkt in ein Programm einbinden oder
bearbeiten und erneut assemblieren, um zu kÅrzeren RSC-Files zu gelangen.

Das Programm erstellt Quelltexte fÅr den Profimat Ω  und den GFA-Assembler Ω.
Mit kleinen énderungen mÅûten die Quelltexte aber auf jedem Assembler zu
verarbeiten sein, der mehr als 8 Zeichen fÅr Labels erlaubt.

Beim GFA - Assembler ist es mir bisher noch nicht gelungen, mit dem Linker
ein BinÑr-File zu erstellen. Immer bricht der Linker mit einer Fehlermeldung
"ungerade Adresse" ab.

Die Assemblierung mit dem Profimat mit der Option *.B ergibt im Allgemeinen 
keinerlei Probleme, bis auf die Fehlermeldung 'Puffer voll' bei zu vielen und
zu langen Strings. Die erzeugten Files sind aber immer um 8 Bytes zu lang,
sodaû sie um diese Anzahl Bytes gekÅrzt werden mÅssen.(4 Bytes beim GFA -
Assembler)

Um trotzdem zu einem neuen RSC-File zu kommen habe ich mich bisher eines
kleinen Tricks bedient.
Ich erzeuge mit dem Assembler zuerst eine normale Programmdatei(natÅrlich
ohne die Optimierungs-Optionen), die ich mir dann mit einem Monitorprogramm 
in den Speicher ziehe und ohne Header und anhÑngende Leerbytes (4 Nullbytes
bzw. 8 ) wieder auf die Diskette schiebe.

Den gleichen Erfolg erziehlt man auch mit BLOAD und BSAVE in Basic.
Folgendes kleine Programm kann dabei helfen:

    DIM feld%(66000/4)                    ! PLATZ AUCH FöR DAS LéNGSTE RSC-FILE
    adr%=V:feld%(0)
    OPEN "I",#1,"RSC_QUEL.PRG"            ! ERZEUGTES ASSEMBLERPROGRAMM
    len%=LOF(#1)                          ! LéNGE ERFRAGEN
    CLOSE #1
    BLOAD "RSC_QUEL.PRG",adr%             ! PROGRAMM ALS BLOCK LADEN
                                          ! UND WIEDER ABSPEICHERN
    BSAVE "RSC_QUEL.RSC",adr%+28,len%-32  ! - HEADER + 4 LEERBYTES AM ENDE
                                (len%-36) ! FöR PROFIMAT              
    END

Vieleicht kann mir ja mal einer den Trick mit dem Linker verraten.

Die so erzeugten RSC-Files laufen einwandfrei und kînnen auch wieder in ein
RSC-Construction Set eingeladen werden. Alle énderungen gehen dabei natÅrlich 
verloren.




 ICONBLK-Struktur:

In allen Dokumentationen wird angegeben, daû die ICONBLK-Struktur 36 Bytes
umfast und das letzte Word IB_RESVD = 0 sein muû.
In allen untersuchten RSC-Files (auch die im ROM meines Rechners) besteht diese
Struktur jedoch immer nur aus 34 Bytes, sodaû ich davon ausgehe, daû dieses 
Word vernachlÑssigt werden kann. Wird dieses Word jedoch mitgeschrieben, so 
verlÑngert sich das neue File pro Icon um 2 Byte.

 OB_FLAGS:

Das OB_flag "Indirect" wird von diesem Programm nicht ausgewertet.

    1.) weil eine vernÅnftige Anwendung diese Flags fÅr mich nicht erkennbar
        ist.
    2.) weil dieses Flag von allen mir bekannten RSC-Construction-Sets nicht
        gesetzt werden kann. Bisher ist mir auch noch kein RSC-File unter-
        gekommen, in dem diese Flag gesetzt war.

Files, in denen dieses Flag Verwendung findet, kînnen deshalb nicht korrekt
bearbeitet werden.

Flags, die nicht von DR dokumentiert sind und deshalb von Construction Set zu
Construction Set unterschiedlich gesetzt und interpretiert werden, kann dieses
Programm natÅrlich auch nicht bearbeiten,weil es ihren Sinn nicht erraten kann.
Diese Flags werden zwar als gesetzt erkannt, im Programm aber als "unbekannte
Flags" ausgewiesen. Je nach Sinn dieser Flags, kann es zu Fehlverhalten des
Programms kommen.(muû es aber nicht)


 OB_STATE:

Die Status-Flags "DRAW3D" und "WHITEBAK", die erst ab GEM 2.0 implementiert
sind werden erkannt und angezeigt.


 USERBLOCK-STRUKTUR:

Nach allen meinen bisherigen Erkenntnissen kann diese Struktur erst bei Lauf-
zeit des Programms erzeugt werden, sodaû sich eine Einbindung fÅr mich er-
Åbrigte.Diese Struktur wird also nicht unterstÅtzt.


Die Ausgabe der ObjektbÑume auf dem Bildschirm kann mit der ESC-Taste jederzeit
abgebrochen werden. Bei der Ausgabe der freien Strings und Images funktioniert
dies nicht.

WAS NATöRLICH NICHT FUNKTIONIEREN KANN, IST DIE RICHTIGE DRUCKERAUSGABE VON 
STEUERZEICHEN, DIE IN STRINGS ENTHALTEN SIND ODER AUCH FöR SONDERZEICHEN, FöR
DIE DER DRUCKER NICHT ANGEPAûT IST. (Z.B. Û,,˙,Ù)


Nun noch ein Wort die Assemblerbenutzer:

Beim Assemblieren (speziell der ROM-RSC Daten) kann es schon mal vorkommen,daû
die Fehlermeldung "Label nicht definiert" (oder etwas éhnliches) erscheint.
Dies hat seine Ursache in der Verwendung von 'Hochkommata' im String, was kein 
Assembler mag. Ersetzt man die Hochkommas durch den entsprechenden ASCII-Code,
so gibt der Assembler Ruhe.

FÅr alle, die sich einmal die RSC-Files im ROM anschauen wollen die Adressen:

           ROM-TOS vom                             BLITTER-TOS 1.2
           06.02.1986                               
      
             $FD49C2                                   $FD5BEC
             $FD5D10                                   $FD6E06
             $FD89D6                                   $FD977A


DIE REASSEMBLIERUNG VON RSC-FILES AUS DEN ROM'S FUNKTIONIERT NICHT KORREKT, 
DA DIESE VON HAND öBERARBEITET SIND UND TABELLEN ENTHALTEN, DEREN BEDEUTUNG 
MIR UNBEKANNT SIND.



FÅr jede Anregung und Kritik an meiner Arbeit bin ich dankbar, denn nichts ist
so gut, daû es nicht verbesserungsfÑhig wÑre.

         Meine Adresse: Heinz Lurz
                        SchÅtzendelle 63
                        5012 Bedburg


                        Dann viel Spass mit dem Programm

                         



 
