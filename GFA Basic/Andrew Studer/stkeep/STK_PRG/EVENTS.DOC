Event Handling for ST-Keep BBS
Copyright 1992 by Pandamonium Software

Events allow you to trigger special functions at specified times
while ST-Keep is waiting for a call or while a user is on-line.  Three
types of events are supported:  PREEMPTIVE , TIMEOUT, and NETWORK (on
the way).

You must create a file called STK_EVNT.SYS and place it in your
system folder.  The format for the file is as follows:

Line  1:  The number of events in this file.
Line  2:  Type of event (PREEMPTIVE, TIMEOUT, NETWORK).
Line  3:  Days to run (Mon, Tue, etc...)
Line  4:  Time to run
Line  5:  Duration in minutes
Line  6:  Disallow door entry time
Line  7:  Event name
Line  8:  Argument 1
Line  9:  Argument 2
Line 10:  Last date event was run

Lines 2-9 are duplicated for each event in this file.

You can have up to 32000 events.

EVENT TYPES

    PREEMPTIVE events will send a message to the user telling them
    that system maintenance is starting and how long it will run,
    then it will log the user off-line and save their account
    information before proceeding.  These are basically important
    tasks that can't wait until the user logs off (midnight game
    clean-up, for example).  Otherwise, the event will run from the
    waitcall screen.

    TIMEOUT events will not run until after the user has logged off,
    or at the waitcall screen.  Backing up your *.SYS files with the
    BBS_BACK.PRG fits nicely into this area.

    NETWORK events are pending completion.

EVENT DAYS:

    You can enter a single day (MON) or a list of days separated by
    commas (MON,TUE,FRI), in addition to (ALL) which will run this
    event every day at the specified time.

DURATION:

    Enter a number approximating the total amount of minutes this
    event will take until again allowing incoming calls.

DISALLOW DOOR ENTRIES:

    This option is unavailable at this time.

    Enter a number of minutes here.  If a user attempts to enter a
    door or execute a file transfer and the user has less than this
    number of minutes remaining of on-line time before a specified
    event is to occur, ST-Keep will notify the user that they do not
    have enough time before the event to initiate their request.  This
    will ensure that time critical events get processed on time
    (networking!).

NAME:

    At this time, event names are:  EXEC (run a specified program and
                                          allows any number of execs)
                                    NETWORK (pending)

ARGUMENT1:

    Used to pass the filename for EXEC to run ("c:\gfa\bbs.prg").

ARGUMENT2:

    Used to pass a command line to the EXEC program.

LAST RUN DATE:

    The last date this event processed.

Example:

3
preemptive
all
00:00
2
exec
n:\today\today.prg
n/a
03/14/1992
timeout
all
00:05
2
exec
h:\bbs\wizfile.prg
n/a
03/14/1992
timeout
mon,wed,fri
02:45
10
exec
c:\bbs\bbs_back.prg
n/a
03/14/1992

As you can see, I have three events.  The last event, backing up the
system files, only runs on the specified days at 02:45am.  The first
event runs every night at midnight (logging any users off) and
executes the today.prg (creates a famous dates in history file).  The
second event runs a program called WIZFILE every night after the
today.prg.

Be very careful when you're adding or deleting events from this file,
you must have 8 lines per event and they must be in this format.

Events should be configured chronologically in this file.  That is, if
you have 2 events and one runs at 1am and the other runs at midnight,
make sure the midnight even is first in this file.

