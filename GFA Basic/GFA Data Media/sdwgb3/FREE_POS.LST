' FREE_POS.LST
'
' Reserve storage space and load resource
RESERVE FRE(0)-2000
ok%=RSRC_LOAD("free_pos.rsc")
' in case the resource file does not load correctly:
IF ok%=0
  ALERT 1,"RSC not found",1," Return ",a%
  RESERVE FRE(0)+2000
  EDIT
ENDIF
' Determine tree address, width, and height
~RSRC_GADDR(0,0,tree_adr%)
~FORM_CENTER(tree_adr%,x%,y%,w%,h%)
' Object numbers of EXIT objects
DIM s%(6)
s%(1)=3
s%(2)=5
s%(3)=7
s%(4)=9
s%(5)=11
s%(6)=13
'
REPEAT
  ' if left mouse button is pressed
  IF MOUSEK=1
    x1%=MOUSEX
    y1%=MOUSEY
    PLOT x1%,y1%
    m_key(0)
    m_key(1)
    LINE x1%,y1%,MOUSEX,MOUSEY
    m_key(0)
  ENDIF
  ' if right mouse button is pressed
  IF MOUSEK=2
    x%=MOUSEX+40
    y%=MOUSEY
    IF x%>580
      x%=580
    ENDIF
    IF y%>300
      y%=300
    ENDIF
    ' Save screen segment
    GET x%,y%,x%+w%,y%+h%,r$
    ' Change object coordinates
    OB_X(tree_adr%,0)=x%
    OB_Y(tree_adr%,0)=y%
    ' Draw object
    ~OBJC_DRAW(tree_adr%,0,5,x%,y%,w%,h%)
    ' Pass control to GEM
    ex%=FORM_DO(tree_adr%,0)
    ' deselect EXIT object
    ~OBJC_CHANGE(tree_adr%,ex%,0,x%,y%,w%,h%,0,0)
    ' restore screen segment
    HIDEM
    PUT x%,y%,r$
    SHOWM
    ' Determine EXIT object
    FOR cnt%=1 TO 6
      EXIT IF s%(cnt%)=ex%
    NEXT cnt%
    DEFLINE cnt%
  ENDIF
UNTIL INKEY$="x" OR INKEY$="X"
'
' Remove resource from memory and free space
~RSRC_FREE()
RESERVE FRE(0)+2000
'
' Wait until mouse button status is equal to s%
PROCEDURE m_key(s%)
  REPEAT
  UNTIL MOUSEK=s%
RETURN
