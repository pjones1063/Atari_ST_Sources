' SPLINE .LST
'
init
main
EDIT
PROCEDURE init
  num_max&=100
  step_max&=100
  DIM a(num_max&),b(num_max&),c(num_max&),d(num_max&)
  DIM x_support(num_max&),y_support(num_max&)
  DIM x_spline(num_max&*step_max&)
  DIM y_spline(num_max&*step_max&)
RETURN
PROCEDURE main
  PRINT CHR$(27);"p" ! Turn on inverse text
  REPEAT
    CLS
    PRINT AT(1,1);SPACE$(80);
    PRINT AT(1,1);" Left Mouse : Set Support Positions"+SPACE$(5);
    PRINT "Right Mouse Button: Start Interpolation"
    '
    num&=-1
    REPEAT
      MOUSE mx&,my&,mk&
      '
      IF mk&=1 AND my&>16
        PCIRCLE mx&,my&,2
        INC num&
        x_support(num&)=mx&
        y_support(num&)=my&
        ATEXT mx&,my&+6,1,STR$(num&)
        REPEAT
        UNTIL MOUSEK=0
      ENDIF
      '
    UNTIL num&=num_max& OR mk&=2
    '
    IF num&<2
      ALERT 1,"Not enough Points|Selected",1,"Continue",back&
    ELSE
      ALERT 2,"Connect first Point|with last point ?",1,"Yes|No",back&
      '
      ' Set flag for closed curve
      IF back&=1
        connect!=TRUE
        ' Increment number of points
        ' and move to coordinates
        INC num&
        x_support(num&)=x_support(0)
        y_support(num&)=y_support(0) ! last point
      ELSE
        connect!=FALSE
      ENDIF
      '
      steps&=10
      '
      plane_splines(num&,steps&,connect!,x_support(),y_support(),x_spline(),y_spline())
      '
      ' Finished, now display it
      '
      ACLIP 1,0,0,639,399
      num_spl&=num&*steps&
      '
      FOR cnt&=1 TO num_spl&
        ALINE x_spline(PRED(cnt&)),y_spline(PRED(cnt&)),x_spline(cnt&),y_spline(cnt&),1,&HFFFF,0
      NEXT cnt&
      '
      ACLIP 0,0,0,639,399
      '
      PRINT AT(1,1);SPACE$(80);
      PRINT AT(1,1);"  Press any key to Continue, Cancel with <Esc>"
      '
      REPEAT
      UNTIL INKEY$="" ! Clear keyboard buffer
      key&=INP(2)
    ENDIF
    '
  UNTIL key&=27 ! End when <Esc> is pressed
  PRINT CHR$(27);"q" ! Turn off inverse text
RETURN
PROCEDURE plane_splines(n&,m&,connect!,VAR x_support(),y_support(),x_spline(),y_spline())
  LOCAL cnt&,j&,k&
  '
  ' Set equal at the support points
  ' 0 and n&
  IF connect!
    sx=(x_support(1)-x_support(n&-1))*0.5
    sy=(y_support(1)-y_support(n&-1))*0.5
  ELSE
    sx=0
    sy=0
  ENDIF
  '
  cub_splines(n&,sx,sx,x_support(),b(),c(),d())
  '
  h=1/m&
  k&=0
  FOR cnt&=1 TO n&
    t=-1
    FOR j&=0 TO m&-1
      x_spline(k&)=((d(cnt&)*t+c(cnt&))*t+b(cnt&))*t+x_support(cnt&)
      ADD t,h
      INC k&
    NEXT j&
  NEXT cnt&
  x_spline(k&)=x_support(n&)
  '
  cub_splines(n&,sy,sy,y_support(),b(),c(),d())
  '
  k&=0
  FOR cnt&=1 TO n&
    t=-1
    FOR j&=0 TO m&-1
      y_spline(k&)=((d(cnt&)*t+c(cnt&))*t+b(cnt&))*t+y_support(cnt&)
      ADD t,h
      INC k&
    NEXT j&
  NEXT cnt&
  y_spline(k&)=y_support(n&)
  '
RETURN
PROCEDURE cub_splines(n&,s0,sn,VAR a(),b(),c(),d())
  LOCAL n1&,cnt&,r,dr,s
  n1&=n&-1
  '
  b(0)=(a(1)-a(0)-s0)*6
  FOR cnt&=1 TO n1&
    b(cnt&)=(a(SUCC(cnt&))-a(cnt&)*2+a(PRED(cnt&)))*3
  NEXT cnt&
  b(n&)=(a(n1&)-a(n&)+sn)*6
  '
  c(0)=b(0)*0.5
  b(1)=b(1)-b(0)*0.25
  r=1.75
  dr=1/r
  c(1)=b(1)/1.75
  FOR cnt&=2 TO n1&
    s=-0.5*dr
    ADD b(cnt&),b(PRED(cnt&))*s
    r=s*0.5+2
    dr=1/r
    c(cnt&)=b(cnt&)*dr
  NEXT cnt&
  '
  s=-dr
  b(n&)=b(n&)+b(n1&)*s
  r=s*0.5+2
  c(n&)=b(n&)/r
  FOR cnt&=n1& TO 1 STEP -1
    IF b(cnt&)=0
      temp=1.0E-09
    ELSE
      temp=b(cnt&)
    ENDIF
    MUL c(cnt&),1-c(SUCC(cnt&))/temp*0.5
  NEXT cnt&
  '
  IF b(0)=0
    temp=1.0E-09
  ELSE
    temp=b(0)
  ENDIF
  '
  c(0)=c(0)*(1-c(1)/temp)
  FOR cnt&=1 TO n&
    i_pred&=PRED(cnt&)
    b(cnt&)=a(cnt&)-a(i_pred&)+(c(cnt&)*2+c(i_pred&))/6
    d(cnt&)=(c(cnt&)-c(i_pred&))/6
  NEXT cnt&
  '
  FOR cnt&=1 TO n&
    MUL c(cnt&),0.5
  NEXT cnt&
RETURN
