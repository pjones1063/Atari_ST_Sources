' ASM_TEXT.LST
'
DEFINT "a-z"
'
DIM asm(20) ! Storage space for Assembly Language routine
adr_asm=V:asm(0)  ! Address of the Assembly Language routine
a=adr_asm
'
DO
  READ r
  EXIT IF r=-1
  CARD{a}=r
  ADD a,2
LOOP
'
' Assembly Language
DATA 3092,0,26368,36,11339,17030,7196,52476
DATA 16,56774,15932,15,6814,56316,0,80
DATA 20943,65526,10826,21130,24790,20085
DATA -1
'
DIM font(4096/4)  ! Storage space for character set
adr_font=V:font(0)  ! Address of the character set
a=adr_font
'
' Here is an example of outlined text
DEFTEXT 1,16,0,13
FOR cnt=0 TO 255
  TEXT 0,12,CHR$(cnt)
  FOR j=XBIOS(2) TO XBIOS(2)+15*80 STEP 80
    INC a
    POKE a,PEEK(j)
  NEXT j
NEXT cnt
'
s$=STRING$(8," Test text")  ! Text String
' Address of the Text String
adr_string=V:s$
' Number of columns minus 1
columns=0
DIM reg(16) ! Register array
'
t=TIMER
FOR z=1 TO 10
  CLS
  FOR line=1 TO 24
  NEXT line
NEXT z
loop_time#=(TIMER-t)/200
'
t=TIMER
xb2=XBIOS(2)
FOR z=1 TO 10
  CLS
  FOR line=0 TO 23
    ' D5: Number of bytes to skip
    reg(5)=1280*line+columns
    ' A3: Address of the character set
    reg(11)=adr_font
    ' A4: Address of the string
    reg(12)=adr_string
    ' A5: Address of the start of first
    ' string output
    reg(13)=xb2+reg(5)
    ' A2: Output start of the second string
    reg(10)=reg(13)+1
    RCALL adr_asm,reg()
  NEXT line
NEXT z
asm_time#=(TIMER-t)/200-loop_time#
'
t=TIMER
FOR z=1 TO 10
  CLS
  FOR line=1 TO 24
    PRINT s$
  NEXT line
NEXT z
print_time#=(TIMER-t)/200-loop_time#
'
PRINT "Empty loop time:    "'loop_time#
PRINT "Time with ASM  :    "'asm_time#
PRINT "Time with PRINT:    "'print_time#
PRINT "Acceleration Factor:"'print_time#/asm_time#
