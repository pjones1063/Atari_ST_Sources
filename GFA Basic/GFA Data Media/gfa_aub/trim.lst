' TRIM.LST
' --------
'
gfa%=3
'
IF gfa%=2
  ' Including machine code programs in GFA-Basic 2.0 and 3.0
  ass_trim_r$=SPACE$(32)
  BLOAD "TRIM_R.INL",VARPTR(ass_trim_r$)
  trim_r%=VARPTR(ass_trim_r$)
  '
  ass_trim_l$=SPACE$(30)
  BLOAD "TRIM_L.INL",VARPTR(ass_trim_l$)
  trim_l%=VARPTR(ass_trim_l$)
ENDIF
'
IF gfa%=3
  ' Including machine code programs in GFA-Basic 3.0
  ' TRIM_R.INL, Length: 32
  INLINE trim_r%,32
  ' TRIM_L.INL, Length: 30
  INLINE trim_l%,30
ENDIF
'
ALERT 2,"Trim string |in GFA-Basic|or GFA-Assembler?",1,"Basic|Ass.",mode%
DEC mode%
'
PRINT "Test: Blanks left and right"
a$="   GFA-Basic  "
@trim(a$)
@control
PRINT
'
PRINT "Test: Blanks left"
a$="   GFA-Basic"
@trim(a$)
@control
PRINT
'
PRINT "Test: Blanks right"
a$="GFA-Basic  "
@trim(a$)
@control
PRINT
'
PRINT "Test: Blanks only"
a$="      "
@trim(a$)
@control
PRINT
'
PRINT "Test: Empty String"
a$=""
@trim(a$)
@control
'
PROCEDURE trim(a$)
  IF mode%
    trim_l$=RIGHT$(a$,C:trim_l%(L:V:a$,LEN(a$)))
    trim_r$=LEFT$(a$,C:trim_r%(L:V:a$,LEN(a$)))
  ELSE
    ' Basic in detail:
    '   b$=TRIM$(a$)
    '   c%=INSTR(a$,b$)
    '   trim_l$=RIGHT$(a$,(LEN(a$)-c%+1)*SGN(LEN(b$)))
    '   trim_r$=LEFT$(a$,MAX(c%+LEN(b$)-1,0))
    ' or
    trim_l$=RIGHT$(a$,(LEN(a$)-INSTR(a$,TRIM$(a$))+1)*SGN(LEN(TRIM$(a$))))
    trim_r$=LEFT$(a$,MAX(INSTR(a$,TRIM$(a$))+LEN(TRIM$(a$))-1,0))
  ENDIF
RETURN
'
PROCEDURE control
  PRINT "Length:"'LEN(a$);TAB(15);
  PRINT "Origin: #";a$;"#"
  PRINT "Length:"'LEN(trim_l$);TAB(15);
  PRINT "Trim-L:   #";trim_l$;"#"
  PRINT "Length:"'LEN(trim_r$);TAB(15);
  PRINT "Trim-R:   #";trim_r$;"#"
RETURN
