' 90_BSET3.LST
' ------------
'
' 90_GR.INL, Length: 178
INLINE rotate%,178
'
DEFFILL 1,3,8
PBOX 1,1,208,48
DEFTEXT 1,0,0,26
TEXT 13,36,"GFA - Basic"
'
' Height and width in pixels, must be divisible by 8'
x%=208
y%=48
' Height and width in pixels/8
xl%=x%/8
yl%=y%/8
'
' s$=Original graphic, s=source
GET 1,1,1+x%-1,1+y%-1,s$
' d$=Placeholder for rotated graphic, d=destination
d$=LEFT$(s$,6)+STRING$(xl%*y%,0)
' Change header of d$: XXYY -> YYXX
LPOKE V:d$,SWAP(LPEEK(V:d$))
'
' Address of graphic data (Byte 0)
s%=V:s$+6
'
' Address of last byte of graphic data
se%=s%+LEN(s$)-7
'
' Address of destination graphic (Byte 0)
d%=V:d$+6
' Address of last byte of destination graphic
de%=d%+LEN(s$)-7
'
ALERT 2,"Rotate graphic by 90 degrees |in GFA-Basic|or GFA-Assembler?",1,"Basic|Ass.",question%
'
' Rotate in GFA-Basic
IF question%=1
  t=TIMER
  ' Bit counter from 7 to 0
  bit%=7
  '
  dh%=0
  '
  ' examine graphic lines one by one
  FOR p%=s% TO se% STEP xl%
    ' Address of destination byte
    dd%=d%+(x%-1)*yl%+dh%
    ' go through line byte by byte
    FOR m%=p% TO p%+xl%-1
      ' read byte
      a%=BYTE{m%}
      ' examine all 8 bits
      FOR n%=7 DOWNTO 0
        b%=BTST(a%,n%)
        IF b%
          ' set bit in destination graphic, ie.:
          ' read byte, set bit, write byte back
          BYTE{dd%}=BSET(BYTE{dd%},bit%)
        ENDIF
        ' next graphic line up
        SUB dd%,yl%
      NEXT n%
    NEXT m%
    ' reduce bit number by 1 (for destination graphic)
    DEC bit%
    ' on to next byte
    IF bit%<0
      bit%=7
      INC dh%
    ENDIF
  NEXT p%
ENDIF
'
' Rotate in GFA-Assembler
IF question%=2
  ' Call assembler program, with
  ' s% and d% the addresses of the graphic data
  ' x% and y% the dimensions of the source graphic in pixels
  ' x% and y% must be divisible by 8
  t=TIMER
  VOID C:rotate%(L:s%,L:d%,x%,y%)
ENDIF
'
tt=(TIMER-t)/200
'
' set rotated graphic
PUT 222,1,d$
'
t$=STR$(tt)
IF question%=1
  ALERT 1,"Rotating graphic by 90 degrees |in GFA BASIC takes |"+t$+" seconds.",1," OK ",d%
ELSE
  ALERT 1,"Rotating graphic by 90 degrees |in GFA Assembler takes |"+t$+" seconds.",1," OK ",d%
ENDIF
'
EDIT
