' LARGE.LST
' Enlarging graphics by a factor of 2-8
' -------------------------------------
' Reserved memory for destination graphic
GET 0,0,639,399,d$
'
' create small graphic
BOX 10,10,61,45
LINE 10,10,61,45
DEFTEXT 1,0,0,13
TEXT 24,32,"GFA"
'
ALERT 2,"Take detour with a string?",1,"direct|String",dest%
DEC dest%
'
' Memory offset (source)
x%=10
y%=10
' Memory offset (destination)
xz%=3*32
yz%=10
' Height and width of section to be enlarged
w%=52
h%=36
' addresses source and destination
s%=XBIOS(2)
IF dest%
  d%=VARPTR(d$)+6
ELSE
  d%=XBIOS(2)
ENDIF
'
' Enlargement factor (1,2,3,4,5,6,7,8)
' Assembler solution only (1,2,  4,      8)
'
f%=8
'
ALERT 2,"Enlarge graphic|in GFA Basic|or GFA-Assembler?",1,"Basic|Ass.",question%
'
' Enlarge in GFA Basic
IF question%=1
  t=TIMER
  ' Define area for BITBLT
  DIM s%(8),d%(8),p%(8)
  ' Source = screen
  s%(0)=s%
  s%(1)=640
  s%(2)=400
  s%(3)=40
  s%(4)=0
  s%(5)=1
  ' Destination = d$
  d%(0)=d%
  d%(1)=640
  d%(2)=400
  d%(3)=40
  d%(4)=0
  d%(5)=1
  ' Copy in replace mode
  p%(8)=3
  '
  ' Enlarge in x direction
  help%=xz%
  ' p%(0) to p%(3) = source coordinates
  ' p%(4) to p%(7) = destination coordinates
  FOR m%=x% TO x%+w%-1
    ' read once
    p%(0)=m%
    p%(1)=yz%
    p%(2)=m%
    p%(3)=yz%+h%-1
    ' copy f% times
    FOR n%=1 TO f%
      p%(4)=help%
      p%(5)=yz%
      p%(6)=help%
      p%(7)=yz%+h%-1
      BITBLT s%(),d%(),p%()
      INC help%
    NEXT n%
  NEXT m%
  '
  ' Enlarge in y direction
  ' new address for source, i.e.
  ' source and destination address the same now
  s%(0)=d%
  DEC help%
  help2%=yz%+h%*f%-1
  FOR m%=45 TO 10 STEP -1
    ' read once
    p%(0)=xz%
    p%(1)=m%
    p%(2)=help%
    p%(3)=m%
    ' copy f% times
    FOR n%=1 TO f%
      p%(4)=xz%
      p%(5)=help2%
      p%(6)=help%
      p%(7)=help2%
      BITBLT s%(),d%(),p%()
      DEC help2%
    NEXT n%
  NEXT m%
ENDIF
'
' Enlarge in GFA-Assembler
IF question%=2
  '
  ' Calling assembler program,
  ' s% and d% being the addresses of the graphics data
  ' x% and y% being the offset for the source in pixels
  ' w% and h% being the width and height of the source in pixels
  ' xz% and yz% the Offset for the destination in pixels
  ' f% is the enlargement factor (2,4,8)
  '
  t=TIMER
  '
  ' LARGE.INL, Length: 254
  INLINE large%,254
  VOID C:large%(L:s%,L:d%,x%,y%,w%,h%,xz%,yz%,f%)
ENDIF
'
tt=(TIMER-t)/200
'
' place finished enlargement on screen in transparent (7) mode
IF dest%
  PUT 0,0,d$,7
ENDIF
'
t$=STR$(tt)
IF question%=1
  ALERT 1,"Enlarging graphic |in GFA Basic takes|"+t$+" seconds.",1," OK ",d%
ELSE
  ALERT 1,"Enlarging graphic |in GFA-Assembler takes|"+t$+" seconds.",1," OK ",d%
ENDIF
'
EDIT
