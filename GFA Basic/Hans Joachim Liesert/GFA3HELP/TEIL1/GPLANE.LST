DIM tos%(15),vdi%(15)
FOR i%=0 TO 15
READ tos%(i%)
NEXT i%
FOR i%=0 TO 15
READ vdi%(i%)
NEXT i%
DATA 0,15,1,2,4,6,3,5,7,8,9,10,12,14,11,13
DATA 0,2,3,6,4,7,5,8,9,10,11,14,12,15,13,1
DEFFILL 2,2,8
PBOX 295,5,318,21
FOR i%=0 TO 5
FOR j%=0 TO 13
READ a$
a%=VAL("&H"+a$)
COLOR vdi%(a%)
PLOT 300+j%,10+i%
NEXT j%
NEXT i%
DATA 5,5,5,6,6,6,6,6,6,6,6,5,5,5
DATA 5,6,6,B,B,B,B,B,B,B,B,6,6,5
DATA 6,B,B,B,B,B,B,B,B,B,B,B,B,6
DATA 6,B,B,B,B,B,B,B,B,B,B,B,B,6
DATA 5,6,6,B,B,B,B,B,B,B,B,6,6,5
DATA 5,5,5,6,6,6,6,6,6,6,6,5,5,5
GET 300,10,313,15,a$
adr%=VARPTR(a$)
bit4.3%=2^0*ABS((DPEEK(adr%+6+16) AND 2^12)>0)
bit4.3%=bit4.3%+2^1*ABS((DPEEK(adr%+6+18) AND 2^12)>0)
bit4.3%=bit4.3%+2^2*ABS((DPEEK(adr%+6+20) AND 2^12)>0)
bit4.3%=bit4.3%+2^3*ABS((DPEEK(adr%+6+22) AND 2^12)>0)
PRINT "Farbwert fÅr Ausschnitt-Pixel 4/3 : ";bit4.3%
br%=DPEEK(adr%)+1
ho%=DPEEK(adr%+2)+1
pl%=DPEEK(adr%+4)
bytes%=INT((br%)/16)+ABS(((br%) MOD 16)>0)*ho%*pl%*2
bytes%=bytes%+6
PRINT "Ausschnittbreite : ";br%
PRINT "Ausschnitthîhe   : ";ho%
PRINT "Anzahl Bitplanes : ";pl%
PRINT "Speicherbedarf des Ausschnitts : ";bytes%
PRINT "LÑnge des Speicherstrings : ";LEN(a$)
PRINT
FOR i%=0 TO ho%-1
FOR j%=0 TO br%-1
vdi_farbe%=POINT(300+j%,10+i%)
PRINT RIGHT$("0"+HEX$(tos%(vdi_farbe%)))'
NEXT j%
PRINT
NEXT i%
'
' Erst Grafik abspeichern:
'
BSAVE "BILD.DAT",VARPTR(a$),LEN(a$)
'
' Nachdem Sie das getan haben, wechseln Sie auf den Monochrom-Monitor
' und starten das folgende Program (mitsamt der Prozedur 'Gplane').
'
DIM feld!(1)
OPEN "i",#1,"BILD.DAT"
a$=INPUT$(LOF(#1),#1)
CLOSE #1
@gplane(a$,0)
PRINT AT(1,5);"4 Planes Åbereinander (<Taste>=Weiter)"
VOID INP(2)
CLS
@gplane(a$,1)
PRINT AT(1,5);"4 Planes separat (<Taste>=Weiter)"
VOID INP(2)
CLS
@gplane(a$,*feld!())
FOR i%=1 TO DPEEK(VARPTR(a$)+4)
FOR j%=1 TO DPEEK(VARPTR(a$))+1
FOR k%=1 TO DPEEK(VARPTR(a$)+2)+1
COLOR ABS(feld!(i%,j%,k%))
PLOT i%*br%+2+j%,2+k%
NEXT k%
NEXT j%
NEXT i%
PRINT AT(1,5);"4 Planes separat aus Bitfeld gelesen"
PROCEDURE gplane(pstr$,fld%)
LOCAL i%,j%,k%,l%,b$,adr%,br%,ho%,pl%,words%,offset%,ofs%
LOCAL pl2%,i2%,i3%,i4%,i5%,j2%,j3%,b2$
adr%=VARPTR(pstr$)
IF LEN(pstr$)=32000 OR LEN(pstr$)=32034
br%=320
ho%=200
pl%=4
IF LEN(pstr$)=32034
br%=640/(2-DPEEK(VARPTR(pstr$)))
pl%=2*(2-DPEEK(VARPTR(pstr$)))
ofs%=34
ENDIF
ELSE
br%=DPEEK(adr%)+1
ho%=DPEEK(adr%+2)+1
pl%=DPEEK(adr%+4)
ofs%=6
ENDIF
pl2%=pl%*2
words%=(INT((br%)/16)+ABS(((br%) MOD 16)>0))
b2$=STRING$(16,"0")
IF fld%>1
DIM bitfeld!(pl%,br%,ho%)
ENDIF
FOR i%=0 TO pl%-1
i2%=adr%+ofs%+i%*2
i3%=INT(i%/(pl%/2))*ho%
i4%=(i% MOD (pl%/2))*br%-1
i5%=(i% MOD (pl%/2))-1
FOR j%=0 TO ho%-1
j2%=j%*(words%*pl2%)
j3%=j%*XBIOS(4)+i%/(pl%/2)
CLR b$
FOR k%=0 TO words%-1
offset%=i2%+j2%+k%*pl2%
b$=b$+RIGHT$(b2$+BIN$(DPEEK(offset%)),16)
NEXT k%
b$=LEFT$(b$,br%)
FOR l%=1 TO br%
IF fld%>1
bitfeld!(i%+1,l%,j%+1)=(MID$(b$,+l%,1)="1")
ELSE
IF MID$(b$,+l%,1)="1"
IF fld%=0
PLOT l%*(pl%/2)+i5%,j3%
ELSE
PLOT l%+i4%,j%+i3%
ENDIF
ENDIF
ENDIF
NEXT l%
NEXT j%
NEXT i%
IF fld%>1
SWAP *fld%,bitfeld!()
ERASE bitfeld!()
ENDIF
RETURN
