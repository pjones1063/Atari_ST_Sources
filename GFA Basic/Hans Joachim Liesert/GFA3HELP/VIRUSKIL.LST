@Sysfont(1)
Do
A$=Space$(512)
Void @Rw_sek(2,Varptr(A$),1,0,0)
If Left$(A$,2)<>Mki$(0)
@Titel
@Showboot(1,A$,"alt")
B$=Right$(A$,501)
A$=Mki$(0)+String$(6,"N")+Mki$(Random(65535))+Chr$(Random(255))+B$
A$=Left$(A$,30)+String$(30,"N")+String$(12,0)+"JJJ"
A$=A$+Chr$(254)+"O"+Chr$(0)+Chr$(1)+Chr$(2)+Chr$(247)
A$=A$+String$(22,"N")+String$(12,0)+"JJJ"+Chr$(251)
A$=A$+String$(391,&HE5)+Mki$(Random(65535))
@Showboot(2,A$,"neu")
Al$="Bootsektor ist infiziert,|bzw.ausfÅhrbar/bootfÑhig."
Al$=Al$+"|Standard-Bootsektor  -"+Chr$(3)+"-"+Chr$(3)
Al$=Al$+"|drÅberschreiben ?"
Alert 3,Al$,2,"OKAY|NEIN",Back%
If Back%=1
Void @Rw_sek(3,Varptr(A$),1,0,0)
Endif
Else
@Titel
@Showboot(1,A$,"alt")
Al$="Disk ist gesund! ("+Str$(Asc(Mid$(A$,27,1)))+"-seitig)"
Al$=Al$+"|Diesen Bootsektor auf|kranke Disk kopieren ?"
Alert 2,Al$,2,"OKAY|NEIN",Back%
If Back%=1
Alert 1,"Kranke Disk einlegen!",2,"OKAY|Abbruch",Back%
If Back%=1
B$=Space$(512)
Void @Rw_sek(2,Varptr(B$),1,0,0)
Okay%=1
Clr Al$
If Mid$(B$,12,19)<>Mid$(A$,12,19)
Al$="Disketten haben|ungleiches Format!|"
Endif
If Okay%=1
@Showboot(2,B$,"alt")
Al$=Al$+"Bootsektor tatsÑchlich|Åbertragen?"
Alert 2,Al$,1,"OKAY|Abbruch",Back%
If Back%=1
Void @Rw_sek(3,Varptr(A$),1,0,0)
@Showboot(2,A$,"neu")
Alert 0,"               ",1,"Weiter",Back%
Endif
Endif
Endif
Endif
Endif
@Titel
Alert 1,"Neue Disk einlegen.",1,"OKAY|Abbruch",Back%
Exit If Back%=2
Loop
@Sysfont(2)
Edit
Procedure Titel
Graphmode 1
Deffill ,2,4
Pbox 0,0,639,399
Deffill ,0,0
Prbox 200,40,440,90
Graphmode 2
@Sysfont(2)
Print At(30,4);"*** GO HOME, VIRUS ***"
Print At(30,5);"   (PUBLIC  DOMAIN)"
Deffill ,2,2
Rbox 198,38,442,92
Prbox 200,40,440,90
@Sysfont(1)
Return
Procedure Showboot(Fl%,Sek$,Na$)
Graphmode 1
Deffill ,0,0
Pbox 3+409*(Fl%-1),301,225+409*(Fl%-1),395
Box 3+409*(Fl%-1),301,226+409*(Fl%-1),396
Pbox 3+472*(Fl%-1),4,162+472*(Fl%-1),298
Box 3+472*(Fl%-1),4,163+472*(Fl%-1),299
Print At(59*(Fl%-1)+2,2);"Bootsektor ";Str$(Fl%);"  *";Na$;"*"
Print At(59*(Fl%-1)+2,3);"-------------------"
Print At(59*(Fl%-1)+2,4);"1234567890123456"
Print At(59*(Fl%-1)+2,5);"-------------------"
For J%=0 To 31
Print At(59*(Fl%-1)+2,Crslin);
For I%=0 To 15
Byte%=Peek(Varptr(Sek$)+I%+J%*16)
If Byte%=0
Out 5,Asc(".")
Else
Out 5,Byte%
Endif
Next I%
Print "|";J%+1
Next J%
Print At(52*(Fl%-1)+2,39);"Bytes pro Sektor    : ";Cvi(Mid$(Sek$,13,1)+Mid$(Sek$,12,1))
Print At(52*(Fl%-1)+2,40);"Sektoren pro Cluster: ";Asc(Mid$(Sek$,14,1))
Print At(52*(Fl%-1)+2,41);"Reservierte Sektoren: ";Cvi(Mid$(Sek$,16,1)+Mid$(Sek$,15,1))
Print At(52*(Fl%-1)+2,42);"Anzahl der FATs     : ";Asc(Mid$(Sek$,17,1))
Print At(52*(Fl%-1)+2,43);"max. EintrÑge in Dir: ";Cvi(Mid$(Sek$,19,1)+Mid$(Sek$,18,1))
Print At(52*(Fl%-1)+2,44);"Anzahl der Sektoren : ";Cvi(Mid$(Sek$,21,1)+Mid$(Sek$,20,1))
Print At(52*(Fl%-1)+2,45);"Media Descriptor    : ";Asc(Mid$(Sek$,22,1))
Print At(52*(Fl%-1)+2,46);"Sektoren pro FAT    : ";Cvi(Mid$(Sek$,24,1)+Mid$(Sek$,23,1))
Print At(52*(Fl%-1)+2,47);"Sektoren pro Track  : ";Cvi(Mid$(Sek$,26,1)+Mid$(Sek$,25,1))
Print At(52*(Fl%-1)+2,48);"Seiten pro Disk     : ";Cvi(Mid$(Sek$,28,1)+Mid$(Sek$,27,1))
Print At(52*(Fl%-1)+2,49);"versteckte Sektoren : ";Cvi(Mid$(Sek$,30,1)+Mid$(Sek$,29,1))
Return
Procedure Sysfont(Size)
Local A$,A%
A$=Mki$(&HA000)+Mki$(&H2009)+Mki$(&H4E75)
A%=Varptr(A$)
Lpoke Intin,Lpeek(C:A%()+Size*4)
Dpoke Contrl+2,0
Dpoke Contrl+6,2
Dpoke Contrl+10,102
Vdisys 5
Return
Deffn Rw_sek(R%,S%,A%,S2%,D%)=Bios(4,R%,L:S%,A%,S2%,D%)
