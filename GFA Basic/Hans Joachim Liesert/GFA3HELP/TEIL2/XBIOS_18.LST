' XBIOS(18)-Beispiel  (Formatter)
'
DEFFILL ,2,4
PBOX 0,17,639,399
PRINT AT(36,1);"FORMATIEREN"
DEFFILL ,0,0
PBOX 150,100,490,299
PBOX 153,103,487,296
PBOX 154,104,486,295
PRINT AT(24,10);"Formatieren"
PRINT AT(24,12);"In Arbeit .."
BOX 180,230,460,248
DEFFILL ,2,2
x$=SPACE$(8000)
FOR i%=0 TO 79
VOID XBIOS(10,L:VARPTR(x$),L:0,0,9,i%,0,1,L:&H87654321,&HE5)
PBOX 180,230,180+280/80*(i%+1),248
NEXT i%
DEFFILL ,2,4
PBOX 0,17,639,399
boot$=MKI$(0)
boot$=boot$+STRING$(6,"N")
boot$=boot$+"000"
boot$=boot$+MKI$(&H2)
boot$=boot$+CHR$(2)
boot$=boot$+MKI$(&H100)
boot$=boot$+CHR$(2)
boot$=boot$+MKI$(&H7000)
boot$=boot$+MKI$(&HD002)
boot$=boot$+CHR$(248)
boot$=boot$+MKI$(&H500)
boot$=boot$+MKI$(&H900)
boot$=boot$+MKI$(&H100)
boot$=boot$+MKI$(0)
boot$=boot$+STRING$(30,"N")+STRING$(12,0)
boot$=boot$+STRING$(3,245)+CHR$(&HFE)+CHR$(&H4F)
boot$=boot$+CHR$(0)+CHR$(1)+CHR$(2)+CHR$(&HF7)
boot$=boot$+STRING$(22,"N")+STRING$(12,0)
boot$=boot$+STRING$(3,245)+CHR$(&HFB)+STRING$(391,&HE5)
boot$=boot$+MKI$(&H0)
VOID XBIOS(18,L:VARPTR(boot$),L:&H1FFFFFF,2,0)
VOID BIOS(7,0)
VOID XBIOS(9,L:VARPTR(boot$),L:0,0,1,0,0,1)
VOID BIOS(7,0)
a$=MKI$(&HF7FF)+CHR$(&HFF)+STRING$(2557,0)
a$=a$+a$
VOID BIOS(4,3,L:VARPTR(a$),10,1,0)
VOID BIOS(4,2,L:VARPTR(boot$),1,0,0)
@showboot(boot$)
ALERT 1,"Freier Speicher :| |    "+STR$(DFREE(0))+"| ",1,"Return",a%
PROCEDURE showboot(bootsek$)
LOCAL a$,a%,j%,i%,byte%
a$=MKI$(&HA000)+MKI$(&H2009)+MKI$(&H4E75)
VOID FRE(0)
a%=VARPTR(a$)
LPOKE INTIN,LPEEK(C:a%()+4)
DPOKE CONTRL+2,0
DPOKE CONTRL+6,2
DPOKE CONTRL+10,102
VDISYS 5
GRAPHMODE 1
DEFFILL ,0,0
PBOX 3,301,225,395
BOX 3,301,226,396
PBOX 3,4,162,298
BOX 3,4,163,299
PRINT AT(2,2);"Bootsektor ";STR$(fl%)
PRINT AT(2,3);"-------------------"
PRINT AT(2,4);"1234567890123456"
PRINT AT(2,5);"-------------------"
FOR j%=0 TO 31
PRINT AT(2,CRSLIN);
FOR i%=0 TO 15
byte%=PEEK(VARPTR(bootsek$)+i%+j%*16)
IF byte%=0
OUT 5,ASC(".")
ELSE
OUT 5,byte%
ENDIF
NEXT i%
PRINT "|";j%+1
NEXT j%
PRINT AT(2,39);"Bytes pro Sektor    : ";
PRINT CVI(MID$(bootsek$,13,1)+MID$(bootsek$,12,1))
PRINT AT(2,40);"Sektoren pro Cluster: ";
PRINT ASC(MID$(bootsek$,14,1))
PRINT AT(2,41);"Reservierte Sektoren: ";
PRINT CVI(MID$(bootsek$,16,1)+MID$(bootsek$,15,1))
PRINT AT(2,42);"Anzahl der FATs     : ";
PRINT ASC(MID$(bootsek$,17,1))
PRINT AT(2,43);"max. Eintr„ge in Dir: ";
PRINT CVI(MID$(bootsek$,19,1)+MID$(bootsek$,18,1))
PRINT AT(2,44);"Anzahl der Sektoren : ";
PRINT CVI(MID$(bootsek$,21,1)+MID$(bootsek$,20,1))
PRINT AT(2,45);"Media Descriptor    : ";
PRINT ASC(MID$(bootsek$,22,1))
PRINT AT(2,46);"Sektoren pro FAT    : ";
PRINT CVI(MID$(bootsek$,24,1)+MID$(bootsek$,23,1))
PRINT AT(2,47);"Sektoren pro Track  : ";
PRINT CVI(MID$(bootsek$,26,1)+MID$(bootsek$,25,1))
PRINT AT(2,48);"Seiten pro Disk     : ";
PRINT CVI(MID$(bootsek$,28,1)+MID$(bootsek$,27,1))
PRINT AT(2,49);"versteckte Sektoren : ";
PRINT CVI(MID$(bootsek$,30,1)+MID$(bootsek$,29,1))
VOID FRE(0)
a%=VARPTR(a$)
LPOKE INTIN,LPEEK(C:a%()+8)
VDISYS 5
RETURN
