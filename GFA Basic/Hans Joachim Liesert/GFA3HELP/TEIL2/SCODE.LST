DEFFILL ,2,4
PBOX 0,0,40,40
DEFFILL ,2,2
PCIRCLE 20,20,15
GET 0,0,40,40,a$
scode(VARPTR(a$),LEN(a$),"test","test")
PROCEDURE scode(d.sta%,d.anz%,d.var$,d.nam$)
OPEN "O",#99,d.nam$+".LST"
PRINT #99;"X0$=Chr$(0)";CHR$(13);"X10$=Chr$(10)";CHR$(13);
PRINT #99;"X13$=Chr$(13)";CHR$(13);"X34$=Chr$(34)";CHR$(13);
PRINT #99;"X02$=X0$+X0$";CHR$(13);"X03$=X0$+X02$";CHR$(13);
PRINT #99;"X04$=X02$+X02$"
LOCAL lco%,em1%,em2%,i%,buff$,buff2$
lco%=15
buff$=d.var$+"$="+CHR$(34)
FOR i%=0 TO d.anz%-1
em1%=PEEK(d.sta%+i%)
IF em1%=0 OR em1%=10 OR em1%=13 OR em1%=34
IF em2%<>34
buff$=buff$+CHR$(34)+"+X"+STR$(em1%)+"$"
em2%=ASC("$")
ELSE
buff$=LEFT$(buff$,LEN(buff$)-1)
buff$=buff$+"X"+STR$(em1%)+"$"
em2%=ASC("$")
ENDIF
IF lco%>230
GOTO setsta
ELSE
buff$=buff$+"+"+CHR$(34)
em2%=34
ADD lco%,13
ENDIF
ELSE
buff$=buff$+CHR$(em1%)
INC lco%
em2%=em1%
IF lco%>230
setsta:
@ersetzer
PRINT #99;buff$
buff$=d.var$+"$="+d.var$+"$+"+CHR$(34)
em2%=34
lco%=30
ENDIF
ENDIF
NEXT i%
@ersetzer
PRINT #99;buff$
CLOSE #99
RETURN
PROCEDURE ersetzer
' Nullstring-Packer (ErgÑnzung zur 'Rplc'-Routine)
rplc(1,1,buff$,"X0$+X0$","X02$",*buff$)
rplc(1,1,buff$,"X0$+X0$+X0$","X03$",*buff$)
rplc(1,1,buff$,"X02$+X0$","X03$",*buff$)
rplc(1,1,buff$,"X0$+X0$+X0$+X0$","X04$",*buff$)
rplc(1,1,buff$,"X03$+X0$","X04$",*buff$)
rplc(1,1,buff$,"X02$+X0$+X0$","X04$",*buff$)
rplc(1,1,buff$,"X02$+X02$","X04$",*buff$)
' FÅr einen 'Rplc'-Aufruf in V3.0 ist ausschlieûlich das
' Pointer-Sternchen vor der hinteren 'Buff$'-öbergabe
' (RÅckgabe) zu entfernen.
RETURN
'  '
PROCEDURE rplc(r.flg%,pos%,m.str$,s.str$,r.str$,r.adr%)
' FÅr V3.0 ist folgender Kopf gÅltig:
'  PROCEDURE rplc(rflg%,rpos%,mstr$,sstr$,rstr$,VAR radr$)
LOCAL gf%,ls$
REPEAT
gf%=INSTR(rpos%,mstr$,sstr$)
IF gf%
ls$=LEFT$(mstr$,gf%-1)
mstr$=ls$+rstr$+RIGHT$(mstr$,LEN(mstr$)-gf%-LEN(sstr$)+1)
rpos%=gf%+LEN(rstr$)+1
ENDIF
UNTIL gf%=0 OR rflg%=0
*radr%=mstr$      ! fÅr V2.xx
' Radr$=Mstr$     ! fÅr V3.0
RETURN
