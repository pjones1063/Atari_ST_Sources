'
'
TRON debbie
xt%=2-SGN(XBIOS(4))
yt%=MIN(2,3-XBIOS(4))
DEFFILL ,2,4
PBOX 0,0,640/xt%,400/yt%
DEFFILL ,0,0
PBOX 10/xt%,3/yt%,275/xt%,36/yt%
DEFTEXT ,1,,26/yt%
TEXT 10/xt%,30/yt%,264/xt%," DISTORT - Demo "
@distort(9/xt%,3/yt%,265/xt%,34/yt%,300/xt%,120/yt%,6/yt%,2,22,0,0,1,1,12)
@distort(28/xt%,7/yt%,145/xt%,30/yt%,310/xt%,220/yt%,-15/yt%,2,22,0,0,0,2,3)
@distort(9/xt%,3/yt%,265/xt%,34/yt%,430/xt%,190/yt%,35/yt%,2,1,0,1,0,0.7,13)
@distort(9/xt%,3/yt%,265/xt%,34/yt%,50/xt%,230/yt%,250,2,2,1,0,0,4,11)
DIM b$(20)
PRINT AT(2,24);"Bitte Geduld"
GET 20/xt%,56/yt%,270/xt%,170/yt%,a$
FOR i%=5 TO 100 STEP 5
@distort(28/xt%,7/yt%,145/xt%,30/yt%,(20+i%)/xt%,110/yt%,-30+i%/2,1,1,0,1,0,2-(i%/50),7)
GET 20/xt%,56/yt%,270/xt%,170/yt%,b$((i%-5)/5)
PUT 20/xt%,56/yt%,a$
NEXT i%
DO
FOR i%=0 TO 20
PUT 20/xt%,56/yt%+i%*2,b$(i%)
NEXT i%
FOR i%=20 DOWNTO 0
PUT 20/xt%,56/yt%+i%*2,b$(i%)
NEXT i%
LOOP
PROCEDURE distort(dxsl%,dyso%,dxsr%,dysu%,dxd%,dyd%,dwh%,dps,dsp,dvh%,dmd%,dsf%,dss,drm%)
LOCAL dbl%,dbr%,ds%,dl%,dvh,di,dlx%
dbl%=dxsr%-dxsl%
dbr%=dysu%-dyso%
xyd%=dyd%
IF dvh%
xyd%=dxd%
SWAP dbl%,dbr%
ENDIF
DIM darr$(dbl%)
FOR di=1 TO dbl%
IF dvh%
GET dxsl%,dyso%+di,dxsr%,dyso%+di,darr$(di)
ELSE
GET dxsl%+di,dyso%,dxsl%+di,dysu%,darr$(di)
ENDIF
NEXT di
FOR di=-PI TO PI STEP (PI/((dbl%)/(dps+1.0E-10)))
dl%=dwh%*ABS(SIN(di))^dsp+xyd%
INC ds%
dlx%=ds%
IF dsf%
dlx%=(dbl%-ds%)+1
ENDIF
IF dmd%=0
dvh=dbr%/(dwh%+1.0E-10)
dl%=xyd%-(ds%/dvh)
ENDIF
IF dvh%
PUT dl%,dyd%+ds%*dss,darr$(dlx%),drm%
PUT dl%,dyd%+ds%*dss+1,darr$(dlx%),drm%
ELSE
PUT dxd%+ds%*dss,dl%,darr$(dlx%),drm%
PUT dxd%+ds%*dss+1,dl%,darr$(dlx%),drm%
ENDIF
EXIT IF ds%=dbl%
NEXT di
ERASE darr$()
RETURN
' **************** Die Debugging-Prozedur ******************
PROCEDURE debbie
' vvvvvvv******FOLLOW******vvvvvvv
'
' tron_var|=INSTR(UPPER$(TRACE$),UPPER$("VARIABLENNAME"))*ABS(tron_nof!)
'
' ^^^^^^^******FOLLOW******^^^^^^^
IF (BIOS(11,-1) AND 15)=6 OR tron_new!=TRUE OR tron_var|
WHILE (BIOS(11,-1) AND 15)=6
WEND
tron_xtl|=2-SGN(XBIOS(4))
tron_ytl|=MIN(2,3-XBIOS(4))
tron_ylo%=XBIOS(2)+32000-1280
tron_clp|=16/tron_ytl|
tron_byt|=80*tron_ytl|
tron_new!=FALSE
tron_ono!=tron_ono! XOR TRUE
IF tron_ono!=TRUE
tron_clr$=STRING$(tron_byt|,0)
tron_flg!=TRUE
ELSE
BMOVE V:tron_pic$,tron_sta%,MAX(1,LEN(tron_pic$))
ENDIF
ENDIF
tron_pos|=INSTR(UPPER$(TRACE$),UPPER$(tron_seq$))
IF tron_ono!=TRUE OR tron_pos| OR tron_var|
PAUSE tron_pau|
IF tron_ono!=FALSE OR tron_flg!=TRUE
tron_flg!=FALSE
tron_ln2|=tron_ln1|
tron_ln3&=tron_ln2|*1280
tron_sta%=tron_ylo%-tron_ln3&-tron_scn|*tron_byt|
tron_pic$=SPACE$(tron_ln3&+1280+tron_scn|*tron_byt|)
BMOVE tron_sta%,V:tron_pic$,MAX(1,LEN(tron_pic$))
tron_ono!=TRUE
ENDIF
BMOVE V:tron_clr$,tron_ylo%+1280-tron_ln3&-tron_byt|,MAX(1,tron_byt|)
tron_sta%=tron_ylo%-tron_ln3&-tron_scn|*tron_byt|
FOR i%=0 TO 15/tron_ytl|
BMOVE tron_sta%+tron_byt|,tron_sta%,MAX(1,(1280-tron_byt|)+tron_scn|*tron_byt|)
NEXT i%
PRINT CHR$(27);"w";
tron_csc|=CRSCOL
tron_csl|=CRSLIN
PRINT AT(1,25-tron_ln2|);LEFT$(TRACE$,80/tron_xtl|);
PRINT CHR$(27);"K";
IF tron_pos|
PRINT CHR$(27);"p";
FOR tron_cnt|=1 TO MIN(80/tron_xtl|,LEN(TRACE$))
PRINT AT(tron_cnt|,25-tron_ln2|);MID$(TRACE$,tron_cnt|,1);
NEXT tron_cnt|
PRINT CHR$(27);"q";
PRINT AT(1,25-tron_ln2|);LEFT$(TRACE$,80/tron_xtl|);
IF tron_pos|<(80/tron_xtl|)
PRINT CHR$(27);"p";
PRINT AT(tron_pos|,25-tron_ln2|);LEFT$(tron_seq$,(80/tron_xtl|-tron_pos|+1));
PRINT CHR$(27);"q";
ENDIF
ENDIF
IF (BIOS(11,-1) AND 15)=2
KEYTEST tron_key%
LPOKE XBIOS(14,1)+6,0
SELECT tron_key%
CASE &H2480038
IF tron_scn|<96/tron_ytl| AND tron_ln2|<19
ADD tron_scn|,tron_clp|
tron_buf$=SPACE$(tron_clp|*tron_byt|)
tron_sta%=tron_ylo%-tron_ln3&-tron_scn|*tron_byt|
BMOVE tron_sta%,V:tron_buf$,MAX(1,tron_clp|*tron_byt|)
tron_pic$=tron_buf$+tron_pic$
ENDIF
CASE &H2500032
IF tron_scn|>0
SUB tron_scn|,tron_clp|
tron_sta%=tron_ylo%-tron_ln3&-tron_scn|*tron_byt|
BMOVE V:tron_pic$,tron_sta%-tron_clp|*tron_byt|,MAX(1,tron_clp|*tron_byt|)
tron_pic$=RIGHT$(tron_pic$,LEN(tron_pic$)-tron_clp|*tron_byt|)
ENDIF
CASE &H24B0034
IF tron_scn|=0
tron_ofs|=24
ELSE
tron_ofs|=18
ENDIF
IF tron_ln2|<tron_ofs|
tron_ln1|=MIN(tron_ln2|+1,tron_ofs|)
tron_ono!=FALSE
tron_new!=TRUE
PAUSE 2
ENDIF
CASE &H24D0036
IF tron_ln2|>0
tron_ln1|=MAX(tron_ln2|-1,0)
tron_ono!=FALSE
tron_new!=TRUE
PAUSE 2
ENDIF
CASE &H2470037
tron_pau|=(tron_pau|+4) MOD 44
PRINT AT(70-(40*(tron_xtl|-1)),25-tron_ln2|);"PAUSE:";tron_pau|;
CASE &H2610000
tron_stp!=TRUE
CASE &H253007F
tron_nof!=tron_nof! XOR TRUE
ENDSELECT
ENDIF
IF tron_stp!=TRUE OR tron_pos| OR tron_var|
tron_stp!=FALSE
' vvvvvvv******FOLLOW******vvvvvvv
IF tron_var|
' tron_var=dbl%
' PRINT AT(80/tron_xtl|-LEN(STR$(tron_var))-7,25-tron_ln2|);CHR$(27);"K";" |VAR:";tron_var;
'
'
' tron_var$=a$
' PRINT AT(1,25-tron_ln2|);CHR$(27);"K";"VAR$:";LEFT$(tron_var$,80/tron_xtl|-5);
' KEYGET tron_key%
' PRINT AT(1,25-tron_ln2|);LEFT$(TRACE$,80/tron_xtl|);
ENDIF
' ^^^^^^^******FOLLOW******^^^^^^^
REPEAT
KEYTEST tron_key%
SELECT tron_key%
CASE &H2620000
SGET tron_scr$
STOP
TRON debbie
SPUT tron_scr$
CLR tron_scr$
GOTO tron_lab
CASE &H2520030
SGET tron_scr$
PRINT AT(1,25-tron_ln2|);CHR$(27);"K";CHR$(27);"w";
PRINT "<1>=Sequenz|<2>=DUMP|<3>=Memo|<4>Screen|";
KEYGET tron_mod|
SELECT tron_mod|
CASE "1"
PRINT AT(1,25-tron_ln2|);CHR$(27);"K";CHR$(27);"w";
INPUT "Sequenz => ",tron_seq$
CASE "2"
PRINT AT(1,25-tron_ln2|);CHR$(27);"w";
PRINT "DUMP => ";
PRINT CHR$(27);"K";
FORM INPUT 2,tron_dmp$
CLS
DUMP tron_dmp$
PRINT CHR$(10);CHR$(13);" Weiter mit <Taste>";
KEYGET tron_key%
CASE "3"
PRINT AT(1,25-tron_ln2|);
PRINT "Start-Adresse (HEX='$....') => ";
PRINT CHR$(27);"K";
FORM INPUT 7,tron_adr$
tron_adr%=INT(VAL(tron_adr$)/2)*2
CLS
PRINT "Start-Adresse :"'tron_adr%;CHR$(10)
FOR tron_cnt|=0 TO 69-(42*(tron_xtl|-1))
IF tron_cnt| MOD 10=0
PRINT "Offset : +";tron_cnt|*4
ENDIF
tron_lon%=LPEEK(tron_adr%+tron_cnt|*4)
PRINT 'RIGHT$("00000000"+HEX$(tron_lon%),8);'
OUT 5,BYTE{V:tron_lon%},BYTE{V:tron_lon%+1},BYTE{V:tron_lon%+2},BYTE{V:tron_lon%+3}
PRINT '"|";SPACE$(4*(tron_xtl|-1));
NEXT tron_cnt|
PRINT CHR$(10);CHR$(13);" Weiter mit <Taste>";
KEYGET tron_key%
CASE "4"
PRINT AT(1,25-tron_ln2|);
PRINT "Start-Adresse (HEX='$....') => ";
PRINT CHR$(27);"K";
FORM INPUT 7,tron_adr$
tron_adr%=MAX(2048,INT(VAL(tron_adr$)/2)*2)
BMOVE tron_adr%,XBIOS(2),32000
PRINT AT(1,1);" Weiter mit <Taste>";
KEYGET tron_key%
ENDSELECT
SPUT tron_scr$
CLR tron_scr$
ENDSELECT
IF tron_key%=&H610000
tron_stp!=TRUE
PAUSE 10
ENDIF
EXIT IF tron_key%=&H2610000
EXIT IF (BIOS(11,-1) AND 15)=6
' <Control><Shift-links> gedrÅckt
UNTIL tron_stp!=TRUE
LPOKE XBIOS(14,1)+6,0
ENDIF
PRINT AT(tron_csc|,tron_csl|);CHR$(27);"v";
IF tron_ono!=FALSE
BMOVE V:tron_pic$,tron_sta%,MAX(1,LEN(tron_pic$))
ENDIF
ENDIF
tron_lab:
RETURN
