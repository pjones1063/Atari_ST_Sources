' Programm fÅr automatisches Backup einer Diskette
'
' Alten DTA-Buffer sichern
D%=Gemdos(&H2F)
' Quelldiskette anfordern
Print "Bitte legen Sie die Quelldiskette in Laufwerk A ein!"
Print "Weiter mit beliebiger Taste."
Print
Void Inp(2)
' Letztes Backup-Datum erfragen
Print "Bitte das Datum des letzten Backup eingeben:"
Input "Tag   ";Tag%
Input "Monat ";Monat%
Input "Jahr  ";Jahr%
Print
' Daten kodieren
Bdatum%=Tag%+Monat%*32+(Jahr%-1980)*512
' Alle relevanten Dateien auf RAM-Disk kopieren
Chdrive 1
Gosub Dir_suche("A:","")
' Zieldiskette anfordern
Print
Print "Bitte legen Sie die Zieldiskette in Laufwerk A ein!"
Print "Weiter mit beliebiger Taste."
Print
Void Inp(2)
' Alle Dateien von RAM-Disk nach Laufwerk A kopieren
Chdrive 4
Gosub Dir_suche("D:","")
Print
Print "Backup beendet!"
' Alte Einstellungen zurÅck
Chdrive 1
Void Gemdos(&H1A,L:D%)
' ----------------------------------------------------------------------
Procedure Dir_suche(L$,F$)
  ' Sucht alle Dateien im angegebenen Ordner F$ auf Laufwerk L$,
  ' die zum letzten Backupdatum passen und lÑût andere Ordner
  ' rekursiv durchsuchen
  Local A$,F2$,Dta$,Adr%,A%
  ' lokalen DTA-Buffer fÅr dieses Verzeichnis reservieren
  Dta$=Space$(44)
  Adr%=Varptr(Dta$)
  Void Gemdos(&H1A,L:Adr%)
  ' Suche starten
  F2$=F$+"\*.*"+Chr$(0)
  A%=Gemdos(&H4E,L:Varptr(F2$),&H10)
  ' ggf. kopieren
  Gosub Vergleich
  ' restliche Files in diesem Ordner untersuchen
  Repeat
    ' DTA-Buffer lîschen
    For I=Adr%+30 To Adr%+43
      Poke I,32
    Next I
    ' nÑchsten Eintrag suchen
    A%=Gemdos(&H4F)
    ' ggf. kopieren
    Gosub Vergleich
    ' Ist die gefundene Datei ein Ordner ?
    If (Peek(Adr%+21)=16) And (A%=0) And (A$<>"..") Then
      ' ja -> Ordner durchsuchen
      Gosub Dir_suche(L$,F$+"\"+A$)
      ' nach RÅckkehr alte DTA wieder herstellen
      Void Gemdos(&H1A,L:Adr%)
    Endif
  Until A%<>0
Return
' ----------------------------------------------------------------------
Procedure A_nach_d(Fm$,Am$)
  ' Kopiert Datei (Fm$+"\"+Am$) von Laufwerk A in die RAM-Disk
  Local Pointer%,Dateilaenge%,Anz%
  ' Wenn Ordner in RAM-Disk nicht existiert, dann erzeugen
  Gosub Ordner_erz("D:",Fm$)
  ' Dateien îffnen und Åbertragen
  Open "I",#1,"A:"+Fm$+"\"+Am$
  Open "O",#2,"D:"+Fm$+"\"+Am$
  Pointer%=0
  Dateilaenge%=Lpeek(Adr%+26)
  While Not Eof(#1)
    Anz%=Min(512,Dateilaenge%-Pointer%)
    Print #2,Input$(Anz%,#1);
    Pointer%=Pointer%+512
  Wend
  Close #1
  Close #2
Return
' ----------------------------------------------------------------------
Procedure D_nach_a(Fm$,Am$)
  ' Kopiert Datei (Fm$+"\"+Am$) von RAM-Disk nach Laufwerk A
  ' und lîscht dabei ggf. alte Backups
  Local Pointer%,Dateilaenge%,Anz%
  ' Wenn Ordner in Laufwerk A nicht existiert, dann erzeugen
  Gosub Ordner_erz("A:",Fm$)
  ' Testen, ob schon ein altes Backup vorliegt
  If Exist("A:"+Fm$+"\"+Am$) Then
    ' wenn ja -> lîschen
    Kill "A:"+Fm$+"\"+Am$
  Endif
  ' Dateien îffnen und Åbertragen
  Open "I",#1,"D:"+Fm$+"\"+Am$
  Open "O",#2,"A:"+Fm$+"\"+Am$
  Pointer%=0
  Dateilaenge%=Lpeek(Adr%+26)
  While Not Eof(#1)
    Anz%=Min(512,Dateilaenge%-Pointer%)
    Print #2,Input$(Anz%,#1);
    Pointer%=Pointer%+512
  Wend
  Close #1
  Close #2
Return
' ----------------------------------------------------------------------
Procedure Ordner_erz(Lw$,Fo$)
  ' testet, ob der Ordner Fo$ auf dem in Lw$ angegebenen Laufwerk
  ' existiert und erzeugt ihn nîtigenfalls
  Local Dta$,F2$,Dta%,Fc%
  ' neuen DTA-Buffer fÅr diese Prozedur reservieren
  Dta%=Gemdos(&H2F)
  Dta$=Space$(44)
  Void Gemdos(&H1A,L:Varptr(Dta$))
  ' Suche starten
  F2$=Lw$+Fo$+"\*.*"+Chr$(0)
  Fc%=Gemdos(&H4E,L:Varptr(F2$),&H10)
  If (Fc%<0) And (Len(Fo$)>0) Then
    ' Ordner existiert nicht, also erzeugen
    Mkdir Lw$+Fo$
  Endif
  ' alten DTA-Buffer wiederherstellen
  Void Gemdos(&H1A,L:Dta%)
Return
' ----------------------------------------------------------------------
Procedure Vergleich
  ' testet, ob eine Datei kopiert werden muû und veranlaût dies ggf.
  ' Filenamen aus Buffer lesen
  A$=""
  For I=Adr%+30 To Adr%+43
    Exit If Peek(I)<=32
    A$=A$+Chr$(Peek(I))
  Next I
  ' Datum holen und vergleichen
  Datum%=Dpeek(Adr%+24)
  If (Peek(Adr%+21)<>16) And (A$<>"") Then
    ' nur korrekte Filenamen und keine Ordner bearbeiten
    If (Bdatum%<Datum%) And (L$="A:") Then
      ' Neue Datei Laufwerk A -> kopieren
      Print "Kopiere Datei ";F$+"\"+A$
      Gosub A_nach_d(F$,A$)
    Endif
    If (L$="D:") Then
      ' Datei von RAM-Disk auf Laufwerk A kopieren, kein Datumstest
      Print "Sichere Datei ";F$+"\"+A$
      Gosub D_nach_a(F$,A$)
    Endif
  Endif
Return
