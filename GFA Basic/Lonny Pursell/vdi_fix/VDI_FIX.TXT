VDI Fix
Version 1.00
by Lonny Pursell and ENCOM
Public Domain
Released: 8/2/2003

Support
-------
http://www.q1.net/~atari/
atari@q1.net

Intro
-----
GFA-Basic has a fixed limit on the number of characters it can
display with the TEXT command.  Basically, it clips off all characters
past 128.  There are also limits to the polygon commands.  If you own
NVDI like I do and have a large screen display such as 1280x1024, then
this limit is easily discovered.  Over the years the VDI has been
updated to support larger displays, however GFA-Basic itself always
imposes this limit.  It's worth noting that newer TOS versions as well
as NVDI offer larger VDI parameter blocks.  The goal here is to get
around GFA-Basic's fixed limit.

Solution
--------
The solution is to patch GFA-Basic's internal VDI paramter block, with
larger arrays.  This has some pros and cons.  Most coders end up using
custom VDI bindings anyway, so from a coding stand point no extra work
it actually required.  This method can be applied easily to existing
code with only a few changes.

Pros:
  we get past the 128 count limit on parameters (TEXT)
  functions the same as custom bindings
  no real speed difference
  the built in VDI commands like TEXT, BOX still function
  no assembler or INLINE modules required
  works in the editor and compiled

Cons:
  the INTIN(), PTSIN() style arrays cannot be used
  the INTIN, PTSIN style pointers cannot be used
  the custom arrays must be used, and all custom VDI routines adjusted
  the patch must be undone in the editor before a program exits 

Code
----
The code provided uses no assembler or messy INLINE schemes to
accomplish this goal.  Instead, the internal VDI parameter block is
patched to match the current limits of the VDI.  This means if you
have NVDI and use this code, then GFA-Basic's internal VDI parameter
block will be adjusted to suit the limits of NVDI.

There is one exception to this rule.  If the current VDI reports back
"unlimited" for an arrays size, then that array is set to the current
width of the screen.  There is no easy way to deal with "unlimted" and
since I cannot predict how many parameters the end user might need,
this seemed like the best solution.  Feel free to adjust the patch as
needed if that scheme don't work for your particular application.

Example: If NVDI reports unlimted on a display that is 1280 pixels
wide, then the limit is adjusted to 1280.  If you set the font to the
smallest size (4) then the maximum characters one can display on such
a display is 1280/6 or about 216 characters.  As you can see by the
math, 1280 should be plenty!

Thus a 640 pixel wide display could only show about 106 (640/6)
characters, thus setting the array size to 640 should be plenty.

See code for VDI binding examples.

Demo
----
The code attempts to display a simple demo, which shows the built in
limitation of GFA-Basic as well as a line of text which exceeds
GFA-Basic's built in limitation.  Unless you happen to have a display
width of 1280 pixels then you won't easily be able to see the
demonstration.

Enjoy!

eof

