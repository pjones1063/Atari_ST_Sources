' #############################################################################
' #############################################################################
'
' Deutsch:
' =========
' Dieser Quellcode ist von Folke Rinneberg
' Webseite: http://www.Rinneberg.de/programming/gfa.htm
' E-Mail:   Folke_R@gmx.de
'
' Du kannst diesen Quellcode frei nutzen, Veraendern und Erweitern.
' Es waehre nett, wenn du mir mitteilen wuerdest, wenn du diesen Quellcode
' benutzt/veraenderst oder erweiterst. Verbesserungen/Erweiterung wuerde 
' ich vielleicht gerne uebernehmen, Nutzung wuerde ich vielleicht gerne an
' dieser Stelle verlinken.
'
' Die Softwarequalitaet ist vermutlich nicht besonders hoch, da ich noch
' jung und unerfahren war, als ich ihn schrieb. Eine UEberarbeitung ist
' nicht geplant.
'
'
' English:
' =========
' This source code was written by Folke Rinneberg
' Web Site: http://www.Rinneberg.de/programming/gfa.htm#english
' e-mail:  Folke_R@gmx.de
'
' You are free to use, modify and extend this source code.
' It would be nice, if you contact me (e.g. by e-mail) when you 
' use/modify or extend this source code. Perhaps I would 
' put Improvements or extensions to this web site.
' Usage of this source code may be linked here.
'
' The quality of this source code may be quite low, because I was young and 
' had few experiences with programming when I wrote this source code. 
' I have no plans to improve this source code by myself.
'
' #############################################################################
' #############################################################################
'
'
Cls
'
Open "o",#1,"opti_erg.txt"
'
'
Print "Programm zum Testen, welche Optimierungen im Compilat was bringen!"
Print #1,"Programm zum Testen, welche Optimierungen im Compilat was bringen!"
Print "--------------------------------------------------------------------------------";
'                                                                      Faktor
'
'    f"+Chr$(129)+"r x=0 .. 7 gilt 7-x       == 7 XOR x      ca 16-18% schneller | 1.2
@Xor_7minus_test
Print "--------------------------------------------------------------------------------";
Print "Press Any-Key"
~Inp(2)
'
'    f"+Chr$(129)+"r x>0      gilt x MOD 8   == x AND 7      ca 85-87% schneller | 6.6
'    (analog f"+Chr$(129)+"r andere 2er Potenzen)
@Mod_and_test
Print "--------------------------------------------------------------------------------";
Print "Press Any-Key"
~Inp(2)
'
'    f"+Chr$(129)+"r x>0      gilt x DIV 8   == SHR(x,3)     ca 19-21% schneller | 1.25
'    (analog f"+Chr$(129)+"r andere 2er Potenzen)
@Div_shr_test
Print "--------------------------------------------------------------------------------";
~Inp(2)
Print "Press Any-Key"
' !!!                  x * 8     == SHL(x,3)     langsamer !!!!!!!!!!!!!!!!!
' ------------------------------------------------------------------------------
'
@Local_global_test                     !         ca 45-54% schneller | 2.00
Print "--------------------------------------------------------------------------------";
Print "Press Any-Key"
~Inp(2)
'
'
'
'
Close #1
'
PROCEDURE Xor_7minus_test
  '
  ' f"+Chr$(129)+"r x=0 .. 7 gilt 7-x == 7 XOR x
  '
  ' f"+Chr$(129)+"r Integers&    : 18,166% (auf meinem MegaST 2)
  ' f"+Chr$(129)+"r Longinteger% : 16,375% (auf meinem MegaST 2)
  '
  ' ---------------------------------------------------------
  ' Test, ob die Ergebisse beider Operationen wirklich gleich
  For I&=0 To 7
    If (7-I&)<>(7 Xor I&)
      Print "f";
    Else
      Print "o";
    Endif
  Next I&
  Print
  '
  Print ""+Chr$(27)+"p7-x&     : x[0..7]"+Chr$(27)+"q     ";
  Print #1,"7-x&     : x[0..7]     ";                              !!! DATEI
  T%=Timer
  For I2&=0 To 5000
    For I&=0 To 7
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
      A&=7-I&
    Next I&
  Next I2&
  T1%=Timer-T%
  Print T1%
  Print #1,T1%                                                         !!! DATEI
  '
  Print ""+Chr$(27)+"p7 xor x& : x[0..7]"+Chr$(27)+"q     ";
  Print #1,"7 xor x& : x[0..7]     ";                              !!! DATEI
  T%=Timer
  For I2&=0 To 5000
    For I&=0 To 7
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
      A&=7 Xor I&
    Next I&
  Next I2&
  T2%=Timer-T%
  Print T2%
  Print #1,T2%                                                         !!! DATEI
  '
  Print ""+Chr$(27)+"p7-x%     : x[0..7]"+Chr$(27)+"q     ";
  Print #1,"7-x%     : x[0..7]     ";                              !!! DATEI
  T%=Timer
  For I2&=0 To 5000
    For I%=0 To 7
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
      A%=7-I%
    Next I%
  Next I2&
  T3%=Timer-T%
  Print T3%
  Print #1,T3%                                                         !!! DATEI
  '
  Print ""+Chr$(27)+"p7 xor x% : x[0..7]"+Chr$(27)+"q     ";
  Print #1,"7 xor x% : x[0..7]     ";                              !!! DATEI
  T%=Timer
  For I2&=0 To 5000
    For I%=0 To 7
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
      A%=7 Xor I%
    Next I%
  Next I2&
  T4%=Timer-T%
  Print T4%
  Print #1,T4%                                                         !!! DATEI
  '
  Print ""+Chr$(27)+"pleere schleife: &"+Chr$(27)+"q   ";
  Print #1,"leere schleife: &   ";                                 !!! DATEI
  T%=Timer
  For I2&=0 To 5000
    For I&=0 To 7
    Next I&
  Next I2&
  T5%=Timer-T%
  Print T5%
  Print #1,T5%                                                         !!! DATEI
  Print ""+Chr$(27)+"pleere schleife: %"+Chr$(27)+"q   ";
  Print #1,"leere schleife: %   ";                                 !!! DATEI
  T%=Timer
  For I2&=0 To 5000
    For I%=0 To 7
    Next I%
  Next I2&
  T6%=Timer-T%
  Print T6%
  Print #1,T6%                                                         !!! DATEI
  '
  Print "Ergebnise:"
  Print "7 XOR x&  ist ";(1-(T2%-T5%)/(T1%-T5%))*100;"% schneller als 7 - x&"
  Print "7 XOR x%  ist ";(1-(T4%-T5%)/(T3%-T5%))*100;"% schneller als 7 - x%"
  Print #1,"7 XOR x&  ist ";(1-(T2%-T5%)/(T1%-T5%))*100;"% schneller als 7 - x&" !!!DATEI
  Print #1,"7 XOR x%  ist ";(1-(T4%-T5%)/(T3%-T5%))*100;"% schneller als 7 - x%" !!! DATEI
Return
PROCEDURE Mod_and_test
  '
  '    f"+Chr$(129)+"r x>0      gilt x MOD 8   == x AND 7
  '    (analog f"+Chr$(129)+"r andere 2er Potenzen)
  '
  ' f"+Chr$(129)+"r Integers&    : 87.5169% (auf meinem MegaST 2)
  ' f"+Chr$(129)+"r Longinteger% : 85.7531% (auf meinem MegaST 2)
  '
  ' ---------------------------------------------------------
  ' Test, ob die Ergebisse beider Operationen wirklich gleich
  For I&=0 To 79 ! gilt auch bei gr"+Chr$(148)+""+Chr$(158)+"eren
    If (I& Mod 8)<>(I& And 7)
      Print "f";
    Else
      Print "o";
    Endif
  Next I&
  '
  Print ""+Chr$(27)+"px& Mod 8 : x>=0"+Chr$(27)+"q     ";
  Print #1,"x& Mod 8 : x>=0     ";                                !!! DATEI
  T%=Timer
  For I2&=0 To 30000
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
    A&=I& Mod 8
  Next I2&
  T1%=Timer-T%
  Print T1%
  Print #1,T1%                                      !!! DATEI
  '
  Print ""+Chr$(27)+"px& And 7 : x>=0"+Chr$(27)+"q     ";
  Print #1,"x& And 7 : x>=0     ";                         !!! DATEI
  T%=Timer
  For I2&=0 To 30000
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
    A&=I& And 7
  Next I2&
  T2%=Timer-T%
  Print T2%
  Print #1,T2%                         !!! DATEI
  '
  Print ""+Chr$(27)+"px% Mod 8 : x>=0"+Chr$(27)+"q     ";
  Print #1,"x% Mod 8 : x>=0     ";                   !!! DATEI
  T%=Timer
  For I%=0 To 30000
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
    A%=I% Mod 8
  Next I%
  T3%=Timer-T%
  Print T3%
  Print #1,T3%                        !!! DATEI
  '
  Print ""+Chr$(27)+"px% And 7 : x>=0"+Chr$(27)+"q     ";
  Print #1,"x% And 7 : x>=0     ";                        !!! DATEI
  T%=Timer
  For I%=0 To 30000
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
    A%=I% And 7
  Next I%
  T4%=Timer-T%
  Print T4%
  Print #1,T4%                                 !!! DATEI
  '
  Print ""+Chr$(27)+"pleere schleife: &"+Chr$(27)+"q    ";
  Print #1,"leere schleife: &    ";                       !!! DATEI
  T%=Timer
  For I2&=0 To 30000
  Next I2&
  T5%=Timer-T%
  Print T5%
  Print #1,T5%                                         !!! DATEI
  Print ""+Chr$(27)+"pleere schleife: %"+Chr$(27)+"q    ";
  Print #1,"leere schleife: %    ";                    !!! DATEI
  T%=Timer
  For I%=0 To 30000
  Next I%
  T6%=Timer-T%
  Print T6%
  Print #1,T6%                                             !!! DATEI
  '
  Print "Ergebnise:"
  Print "x& And 7  ist ";(1-(T2%-T5%)/(T1%-T5%))*100;"% schneller als x& Mod 8"
  Print "x% And 7  ist ";(1-(T4%-T5%)/(T3%-T5%))*100;"% schneller als x% Mod 8"
  Print #1,"x& And 7  ist ";(1-(T2%-T5%)/(T1%-T5%))*100;"% schneller als x& Mod 8" !!! DATEI
  Print #1,"x% And 7  ist ";(1-(T4%-T5%)/(T3%-T5%))*100;"% schneller als x% Mod 8" !!! DATEI
Return
PROCEDURE Div_shr_test
  '
  '    f"+Chr$(129)+"r x>0      gilt x DIV 8   == shr(x,3)
  '    (analog f"+Chr$(129)+"r andere 2er Potenzen)
  '
  ' f"+Chr$(129)+"r Integers&    : 21.52% (auf meinem MegaST 2)
  ' f"+Chr$(129)+"r Longinteger% : 19.723% (auf meinem MegaST 2)
  '
  ' ---------------------------------------------------------
  ' Test, ob die Ergebisse beider Operationen wirklich gleich
  For I&=0 To 79 ! gilt auch bei gr"+Chr$(148)+""+Chr$(158)+"eren
    If (I& Div 8)<>Shr(I&,3)
      Print "f";
    Else
      Print "o";
    Endif
  Next I&
  '
  Print ""+Chr$(27)+"px& Div 8  : x>=0"+Chr$(27)+"q     ";
  Print #1,"x& Div 8  : x>=0     ";                            !!! DATEI
  T%=Timer
  For I2&=0 To 30000
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
    A&=I& Div 8
  Next I2&
  T1%=Timer-T%
  Print T1%
  Print #1,T1%                                      !!! DATEI
  '
  Print ""+Chr$(27)+"pshr(x&,3) : x>=0"+Chr$(27)+"q     ";
  Print #1,"shr(x&,3) : x>=0     ";                       !!! DATEI
  T%=Timer
  For I2&=0 To 30000
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
    A&=Shr(I&,3)
  Next I2&
  T2%=Timer-T%
  Print T2%
  Print #1,T2%                                  !!! DATEI
  '
  Print ""+Chr$(27)+"px% Div 8  : x>=0"+Chr$(27)+"q     ";
  Print #1,"x% Div 8  : x>=0     ";                      !!! DATEI
  T%=Timer
  For I%=0 To 30000
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
    A%=I% Div 8
  Next I%
  T3%=Timer-T%
  Print T3%
  Print #1,T3%                                    !!! DATEI
  '
  Print ""+Chr$(27)+"pshr(x%,3) : x>=0"+Chr$(27)+"q     ";
  Print #1,"shr(x%,3) : x>=0     ";                            !!! DATEI
  T%=Timer
  For I%=0 To 30000
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
    A%=Shr(I%,3)
  Next I%
  T4%=Timer-T%
  Print T4%
  Print #1,T4%                                                 !!! DATEI
  '
  Print ""+Chr$(27)+"pleere schleife: &"+Chr$(27)+"q    ";
  Print #1,"leere schleife: &    ";                          !!! DATEI
  T%=Timer
  For I2&=0 To 30000
  Next I2&
  T5%=Timer-T%
  Print T5%
  Print #1,T5%                                         !!! DATEI
  Print ""+Chr$(27)+"pleere schleife: %"+Chr$(27)+"q    ";
  Print #1,"leere schleife: %    ";                            !!! DATEI
  T%=Timer
  For I%=0 To 30000
  Next I%
  T6%=Timer-T%
  Print T6%
  Print #1,T6%                                               !!! DATEI
  '
  Print "Ergebnise:"
  ' f"+Chr$(129)+"r x>0      gilt x DIV 8   == shr(x,3)
  Print "Shr(x&,3) ist ";(1-(T2%-T5%)/(T1%-T5%))*100;"% schneller als x& Div 8"
  Print "Shr(x%,3) ist ";(1-(T4%-T5%)/(T3%-T5%))*100;"% schneller als x% Div 8"
  Print #1,"Shr(x&,3) ist ";(1-(T2%-T5%)/(T1%-T5%))*100;"% schneller als x& Div 8" !!! DATEI
  Print #1,"Shr(x%,3) ist ";(1-(T4%-T5%)/(T3%-T5%))*100;"% schneller als x% Div 8" !!! DATEI
Return
PROCEDURE Local_global_test
  Local A1&,B1&,C1&,D1&,E1&,F1&
  Local A1%,B1%,C1%,D1%,E1%,F1%
  '
  '      local / global - Vergleich
  '
  ' global & ist 54.54545454545% schneller als local &  (auf meinem MegaST 2)
  ' global & ist 45.57195571956% schneller als local %  (auf meinem MegaST 2)
  '
  ' ---------------------------------------------------------
  Print "vergleich: Zugriff/Zuweisung aus locale und globale vareablen!"
  Print #1,"vergleich: Zugriff/Zuweisung aus locale und globale vareablen!" !!! DATEI
  Print ""+Chr$(27)+"p& global :"+Chr$(27)+"q";
  Print #1,"& global :";                                           !!! DATEI
  T%=Timer
  For I&=0 To 20000
    A&=B&
    B&=C&
    C&=D&
    D&=E&
    E&=F&
    A&=B&
    B&=C&
    C&=D&
    D&=E&
    E&=F&
    A&=B&
    B&=C&
    C&=D&
    D&=E&
    E&=F&
    A&=B&
    B&=C&
    C&=D&
    D&=E&
    E&=F&
  Next I&
  T1%=Timer-T%
  Print T1%
  Print #1,T1%                                                        !!! DATEI
  '
  Print ""+Chr$(27)+"p& local  :"+Chr$(27)+"q";
  Print #1,"& local  :";                                          !!! DATEI
  T%=Timer
  For I&=0 To 20000
    A1&=B1&
    B1&=C1&
    C1&=D1&
    D1&=E1&
    E1&=F1&
    A1&=B1&
    B1&=C1&
    C1&=D1&
    D1&=E1&
    E1&=F1&
    A1&=B1&
    B1&=C1&
    C1&=D1&
    D1&=E1&
    E1&=F1&
    A1&=B1&
    B1&=C1&
    C1&=D1&
    D1&=E1&
    E1&=F1&
  Next I&
  T2%=Timer-T%
  Print T2%
  Print #1,T2%                                                        !!! DATEI
  '
  Print ""+Chr$(27)+"p% global :"+Chr$(27)+"q";
  Print #1,"% global :";                                          !!! DATEI
  T%=Timer
  For I%=0 To 20000
    A%=B%
    B%=C%
    C%=D%
    D%=E%
    E%=F%
    A%=B%
    B%=C%
    C%=D%
    D%=E%
    E%=F%
    A%=B%
    B%=C%
    C%=D%
    D%=E%
    E%=F%
    A%=B%
    B%=C%
    C%=D%
    D%=E%
    E%=F%
  Next I%
  T3%=Timer-T%
  Print T3%
  Print #1,T3%                                                       !!! DATEI
  '
  Print ""+Chr$(27)+"p% local  :"+Chr$(27)+"q";
  Print #1,"% local  :";                                            !!! DATEI
  T%=Timer
  For I%=0 To 20000
    A1%=B1%
    B1%=C1%
    C1%=D1%
    D1%=E1%
    E1%=F1%
    A1%=B1%
    B1%=C1%
    C1%=D1%
    D1%=E1%
    E1%=F1%
    A1%=B1%
    B1%=C1%
    C1%=D1%
    D1%=E1%
    E1%=F1%
    A1%=B1%
    B1%=C1%
    C1%=D1%
    D1%=E1%
    E1%=F1%
  Next I%
  T4%=Timer-T%
  Print T4%
  Print #1,T4%                                                       !!! DATEI
  '
  Print ""+Chr$(27)+"pleere schleife: &"+Chr$(27)+"q    ";
  Print #1,"leere schleife: &    ";                               !!! DATEI
  T%=Timer
  For I&=0 To 20000
  Next I&
  T5%=Timer-T%
  Print T5%
  Print #1,T5%                                                      !!! DATEI
  Print ""+Chr$(27)+"pleere schleife: %"+Chr$(27)+"q    ";
  Print #1,"leere schleife: %    ";                               !!! DATEI
  T%=Timer
  For I%=0 To 20000
  Next I%
  T6%=Timer-T%
  Print T6%
  Print #1,T6%                                                     !!! DATEI
  '
  Print "Ergebnise:"
  Print "global & ist ";(1-(T1%-T5%)/(T2%-T5%))*100;"% schneller als local &"
  Print "global % ist ";(1-(T3%-T5%)/(T4%-T5%))*100;"% schneller als local %"
  Print #1,"global & ist ";(1-(T1%-T5%)/(T2%-T5%))*100;"% schneller als local &" !!! DATEI
  Print #1,"global % ist ";(1-(T3%-T5%)/(T4%-T5%))*100;"% schneller als local %" !!! DATEI
Return
'
' Weitere Optimierungen:
' -----------------------
' 1. MEHR SPEICHER ZUR LAUFZEIT
'    Wenn Du w"+Chr$(132)+"hrend der entwicklung deines Programms oft Vareablen verwendet
'    hast, die in der endg"+Chr$(129)+"ltigen Version nicht mehr vorkommen, dann solltest
'    du wissen, das diese trotzdem zur Laufzeit des compilierten Programms auch
'    weiterhin Arbeitsspeicher wegnehmen.
'    (obwohl sie nirgends im Programm auftauchen!!!)
'    L"+Chr$(148)+"sung: Speicher dein Programm einmal mit Save,A als Listing ab
'            (erst alle proceduren/Funktionen aufklaoppen) und lade das
'            Programm dann wieder mit Merge. Nun kannst du es wieder mit
'            Save speichern (Programml"+Chr$(132)+"nge ist wir vor der ganzen Prozedur)
'            (auch die l"+Chr$(132)+"nge des Comilierten Programms sollte sich nicht
'             ge"+Chr$(132)+"ndert haben!) Nun steht dier zur Laufzeit mehr speicher zur
'            Verf"+Chr$(129)+"gung!!!
'    Hinweis:Inlines m"+Chr$(129)+"ssen mach dem Merge neu geladen werden!!!
