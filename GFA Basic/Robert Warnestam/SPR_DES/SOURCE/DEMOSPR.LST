' Demonstration program...
' For sprites created with the Sprite Designer
' May 1990 - Robert Warnestam
'
@Init
@Gemcol
Dim X%(15),Y%(15),Rx(15),Ry(15),A%(15)
@Load_spr(0,"sprites\cherry.spr")
@Load_spr(1,"sprites\pacman3.spr")
@Load_spr(2,"sprites\ship1.spr")
@Load_spr(3,"sprites\robot1.spr")
@Load_spr(4,"sprites\sprite.spr")
@Load_spr(5,"sprites\stars1.spr")
Hidem
@Test4
@Test0
@Test1
@Test2
@Test3
@End_it
Cls
End
'
Procedure Test0
  @Set_palette(0)
  Cls
  @Screen_changed
  For I%=1 To 10
    @Set_sprite(I%,20*I%+10,100,0,1)
    @Update
    @Wait(10)
  Next I%
  @Wait(50)
  For I%=2 To 12
    For J%=1 To 10
      @Set_sprite(J%,20*J%+10,100,0,I%)
    Next J%
    @Update
    @Wait(3)
  Next I%
  @All_sprite_off
  @Wait(50)
Return
'
Procedure Test1
  @Set_palette(1)
  Cls
  @Screen_changed
  A%=0
  Ac%=8
  As%=1
  X%=0
  Repeat
    @Set_sprite(0,X%,150,1,A%)
    Dec Ac%
    If Ac%=0 Then
      Ac%=8
      A%=A%+As%
      If (A%+As%)=-1 Or (A%+As%)=5 Then
        As%=-As%
      Endif
    Endif
    @Update
    Inc X%
  Until X%>180
  @Wait(10)
  For A%=5 To 13
    @Set_sprite(0,X%,150,1,A%)
    @Update
    @Wait(15)
  Next A%
  @Wait(40)
  For A%=13 To 5 Step -1
    @Set_sprite(0,X%,150,1,A%)
    @Update
    @Wait(10)
  Next A%
  Repeat
    @Set_sprite(0,X%,150,1,A%)
    Dec Ac%
    If Ac%=0 Then
      Ac%=4
      A%=A%+As%
      If (A%+As%)=-1 Or (A%+As%)=5 Then
        As%=-As%
      Endif
    Endif
    @Update
    Inc X%
    Inc X%
  Until X%>350
  @Sprite_off(0)
  @Wait(50)
Return
'
Procedure Test2
  @Set_palette(2)
  Cls
  For X%=0 To 310 Step 10
    Line X%,0,X%,190
  Next X%
  For Y%=0 To 190 Step 10
    Line 0,Y%,310,Y%
  Next Y%
  @Screen_changed
  For I%=1 To 10
    A%(I%)=-1
  Next I%
  For I%=1 To 200
    For J%=1 To 10
      If A%(J%)=-1 Then
        A%(J%)=Random(16)
        If (A%(J%) Mod 4)=0 Then
          X%(J%)=Random(350)
          Y%(J%)=230
          Rx(J%)=0
          Ry(J%)=-(1+Random(10))
        Endif
        If (A%(J%) Mod 4)=1 Then
          X%(J%)=0
          Y%(J%)=Random(230)
          Rx(J%)=1+Random(10)
          Ry(J%)=0
        Endif
        If (A%(J%) Mod 4)=2 Then
          X%(J%)=Random(350)
          Y%(J%)=0
          Rx(J%)=0
          Ry(J%)=1+Random(10)
        Endif
        If (A%(J%) Mod 4)=3 Then
          X%(J%)=350
          Y%(J%)=Random(230)
          Rx(J%)=-(1+Random(10))
          Ry(J%)=0
        Endif
      Endif
      @Set_sprite(J%,X%(J%),Y%(J%),2,A%(J%))
      Add X%(J%),Rx(J%)
      Add Y%(J%),Ry(J%)
      Rx(J%)=1.1*Rx(J%)
      Ry(J%)=1.1*Ry(J%)
      If X%(J%)<0 Or X%(J%)>350 Or Y%(J%)<0 Or Y%(J%)>230 Then
        A%(J%)=-1
      Endif
    Next J%
    @Update
  Next I%
  @All_sprite_off
  @Wait(50)
Return
'
Procedure Test3
  @Set_palette(3)
  Cls
  Deffill Gemcol%(4)
  Pbox 0,0,319,99
  Deffill Gemcol%(5)
  Pbox 0,100,319,101
  Deffill Gemcol%(6)
  Pbox 0,102,319,103
  Deffill Gemcol%(7)
  Pbox 0,104,319,105
  Deffill Gemcol%(14)
  Pbox 0,106,319,107
  Deffill Gemcol%(13)
  Pbox 0,108,319,109
  Deffill Gemcol%(12)
  Pbox 0,110,319,199
  @Screen_changed
  A%=0
  Ac%=2
  For X%=0 To 350
    @Set_sprite(0,X%,112,3,A%)
    @Update
    Dec Ac%
    If Ac%=0 Then
      Ac%=2
      A%=A%+1-(9 And A%=8)
    Endif
    If X%=200 Then
      For I%=1 To 10
        X%(I%)=Random(320)+32
        Y%(I%)=Random(200)+32
      Next I%
      For I%=1 To 200
        For J%=1 To 10
          @Set_sprite(J%,X%(J%),Y%(J%),0,0)
          Add Y%(J%),5
          If Y%(J%)>230 Then
            Y%(J%)=0
          Endif
        Next J%
        @Update
      Next I%
      For J%=1 To 10
        @Sprite_off(J%)
      Next J%
    Endif
  Next X%
  @Sprite_off(0)
  @Update
  @Wait(50)
Return
'
Procedure Test4
  @Set_palette(4)
  Cls
  @Screen_changed
  Restore Test4_data
  For I%=0 To 13
    Read X%(I%),Y%(I%),A%(I%)
  Next I%
  For R%=25 To 1 Step -1
    For J%=1 To 4
      For I%=0 To 13
        X%=X%(I%)+Random(R%)-Random(R%)
        Y%=Y%(I%)+Random(R%)-Random(R%)
        @Set_sprite(I%,X%,Y%,4,A%(I%))
      Next I%
      @Update
    Next J%
  Next R%
  @Set_palette(5)
  A%(14)=-1
  A%(15)=-1
  For I%=1 To 200
    For J%=14 To 15
      If A%(J%)=-1 Then
        If Random(100)>90 Then
          A%(J%)=0
          X%(J%)=Random(320)+32
          Y%(J%)=Random(200)+32
        Endif
      Else
        @Set_sprite(J%,X%(J%),Y%(J%),5,A%(J%))
        Inc A%(J%)
        If A%(J%)=12 Then
          A%(J%)=-1
          @Sprite_off(J%)
        Endif
      Endif
    Next J%
    @Update
  Next I%
  @Sprite_off(14)
  @Sprite_off(15)
  For I%=1 To 100
    Deffill Random(16)
    Pcircle Random(320),Random(200),10
    @Screen_changed
  Next I%
  For I%=1 To 60
    For J%=0 To 5
      Y%(J%)=Y%(J%)+3
      X%(J%)=X%(J%)-1
      @Set_sprite(J%,X%(J%),Y%(J%),4,A%(J%))
    Next J%
    For J%=6 To 13
      Y%(J%)=Y%(J%)-3
      X%(J%)=X%(J%)+1
      @Set_sprite(J%,X%(J%),Y%(J%),4,A%(J%))
    Next J%
    @Update
  Next I%
  @All_sprite_off
  @Wait(50)
  Test4_data:
  Data 75,50,0,110,50,1,145,50,2,180,50,3,215,50,4,250,50,5
  Data 40,130,6,75,130,5,110,130,0,145,130,3,180,130,7,215,130,8,250,130,5,285,130,2
Return
End
' ***************************************************
'
Procedure Set_palette(Bank_nr%)
  Poke Mc%+0,1
  Poke Mc%+1,Bank_nr%
  Call Mcstart%
Return
'
Procedure Screen_changed
  Poke Mc%+0,2
  Call Mcstart%
Return
'
Procedure All_sprite_off
  Poke Mc%+0,3
  Call Mcstart%
Return
'
Procedure Sprite_off(Sprite_nr%)
  Poke Mc%+0,4
  Poke Mc%+2,Sprite_nr%
  Call Mcstart%
Return
'
Procedure Set_sprite(Sprite_nr%,X%,Y%,Bank_nr%,Image_nr%)
  Poke Mc%+0,5
  Poke Mc%+2,Sprite_nr%
  Dpoke Mc%+4,X%
  Dpoke Mc%+6,Y%
  Poke Mc%+1,Bank_nr%
  Poke Mc%+3,Image_nr%
  Call Mcstart%
Return
'
Procedure Update
  Poke Mc%+0,6
  Call Mcstart%
Return
'
Procedure Begin_it(Phys_scr%,Log_scr%,Spr_scr%)
  Poke Mc%+0,7
  Lpoke Mc%+8,Log_scr%
  Lpoke Mc%+12,Phys_scr%
  Lpoke Mc%+16,Spr_scr%
  Call Mcstart%
Return
'
Procedure End_it
  Poke Mc%+0,8
  Call Mcstart%
Return
'
Procedure Set_bank(Bank_nr%,Bank_ptr%)
  Poke Mc%+0,9
  Poke Mc%+1,Bank_nr%
  Lpoke Mc%+20,Bank_ptr%
  Call Mcstart%
Return
'
' *******************
Procedure Gemcol
  Restore Gemcol_data
  Dim Gemcol%(15)
  For I%=0 To 15
    Read Gemcol%(I%)
  Next I%
  Gemcol_data:
  Data 0,2,3,6,4,7,5,8,9,10,11,14,12,15,13,1
Return
'
Procedure Wait(A%)
  Local I%
  For I%=1 To A%
    Vsync
  Next I%
Return
'
Procedure Load_spr(Bank_nr%,File$)
  Local Bank_ptr%
  Bank$(Bank_nr%)=String$(32+4+16*512,0)
  Bank_ptr%=Varptr(Bank$(Bank_nr%))
  Bload File$,Bank_ptr%
  @Set_bank(Bank_nr%,Bank_ptr%)
Return
'
Procedure Init
  Mc$=String$(2500,0)
  Mc%=Varptr(Mc$)
  Spr_screen$=String$(32000,0)
  Spr_screen%=Varptr(Spr_screen$)
  Bload "sprite.mc",Mc%
  Mc%=Mc%+28
  Mcstart%=Mc%+30
  '
  Phys%=Xbios(2)
  Log$=String$(32256,0)
  Log%=(Varptr(Log$)+255) And &HFFFFFF00
  '
  Dim Bank$(15)
  '
  @Begin_it(Phys%,Log%,Spr_screen%)
Return
