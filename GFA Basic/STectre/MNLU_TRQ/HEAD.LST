' A simple 'Header' file                             (C) STectre 1995
' To demonstrate how to write 'proper' and use a few special Compiler
' functions . ...
'
Cmnd$=""
If Bios(&H6321)=101 Then              ! running under the compiler?
  On Break Cont                       ! if so disable the break
  On Error Gosub Error_rout           ! and install our own error handler
  '
  X%=Bios(&H6322)                     ! adr of cmnd line
  If Peek(X%)>0 Then
    For Y%=1 To Peek(X%)
      Cmnd$=Cmnd$+Chr$(Peek(X%+Y%))      ! build up the cmnd line
    Next Y%
  Endif
  Print "Command line passed to the program: ";Cmnd$
Endif
Goto Program_start                       ! go on with the real program
'
'
Error_rout:
Procedure Error_rout
  Print Chr$(27);"p";" Error Occured! ";Err;" ";Chr$(27);"q"
  Print "Any key to exit .. ."
  Void Inp(2)                 ! wait for keypress
  @P_end                      ! it's best to ALWAYS exit after such an error
Return                        ! when running under Mnilu
'
P_end:
Procedure P_end
  If Bios(&H6321)=101 Then
    System                 ! return to desktop if running under the compiler
  Else
    End                    ! or else back to the editor / can also use Edit
  Endif
Return
'
'
Program_start:
'
' Put in your own program here . .. WHENEVER you want to quit call the
' P_end procedure.
'
' This prog does nothing special ,just figures out the free memory .. .
'
Print "Free RAM GFA:                 ";Fre(0)
Print
Lb%=Gemdos(&H48,L:-1)                               ! grab the largest block
Adr%=Gemdos(&H48,L:Lb%)
Print "Largest GEMDOS memory block:  ";Lb%
Print "Second largest memory block:  ";Gemdos(&H48,L:-1)  ! 0 here is common
Void Gemdos(&H49,L:Adr%)
'
Repeat
Until Mousek<>0 Or Inkey$<>""
'
@P_end                                    ! exit . ..
'
