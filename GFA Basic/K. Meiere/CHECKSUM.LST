'
'                   ROLAND CHECKSUM CALCULATION UTILITY
'                              by K.MEIERE
'
'                                  for
'                  ATARI ST COMPUTERS with GFA BASIC 2.0
'
Print "This utility program is provided for people wishing to program System"
Print "Exclusive Messages on Roland Synthesizers, Samplers, & Sequencers."
Print "It will take Hexadecimal ADDRESSES and block SIZES and calculate"
Print "the CHECKSUM number needed to communicate with equipment via Roland"
Print "Handshake Transfer Procedure.  The MIDI Implimentation Chart of your"
Print "owners manual should provide the ADDRESSES and block SIZES you will"
Print "need to get started.  The ADDRESS will contain the Most Significant"
Print "Bit (MSB), Middle Significant Bit (MIDDLESB), and Least Significant Bit"
Print "(LSB).  The block SIZE is configured the same way with the MSB, MIDDLESB"
Print "and LSB."
Print
Print "Values are entered in the following way:"
Print "? 08,00,00","MSB,MIDDLESB,LSB   for the ADDRESS start of  --> 08 00 00"
Print "? 02,08,00","MSB,MIDDLESB,LSB   for a total block SIZE of --> 02 08 00"
Print "           6E   <-----------  CHECKSUM (in Hexadecimal)"
Print
Print "As an example of what this does, when used with the Roland S-50 Sampler,"
Print "a SYS-EX Request RQ1 11H command with an ADDRESS of 08 00 00, block SIZE of"
Print "02 08 00, and a CHECKSUM of 6E will dump approx. 1.6 seconds of wave data"
Print "from Bank A into the Atari ST MIDI buffer area."
Print "         *******************************************************"
Print "         ALL VALUES FOR THIS PROGRAM ARE IN HEXADECIMAL !!!!!!!!"
Print "         *******************************************************"
Print "< press any key to continue >"
Repeat
  Z$=Inkey$
Until Z$<>""
Do_it_again:
Cls
Print "Enter the MSB, MIDDLESB, & LSB of the ADDRESS    --> i.e.  08,00,00 <RETURN>"
Input Msb1$,Midbit1$,Lsb1$
If Len(Msb1$)=1
  Msb1$="0"+Msb1$                  ! Screen display pourposes only
Endif
Msb1_display$=Upper$(Msb1$)        !   "        "
If Len(Midbit1$)=1
  Midbit1$="0"+Midbit1$
Endif
Midbit1_display$=Upper$(Midbit1$)  !   "        "
If Len(Lsb1$)=1
  Lsb1$="0"+Lsb1$
Endif
Lsb1_display$=Upper$(Lsb1$)        !   "        "
Msb1$="&"+Msb1$                    ! Converts MSB into Hex string format (ADDR)
Midbit1$="&"+Midbit1$              !    "     MIDDLESB "      "     "      "
Lsb1$="&"+Lsb1$                    !    "     LSB      "      "     "      "
Print
Print "Enter the MSB, MIDDLESB, & LSB of the block SIZE --> i.e.  02,08,00 <RETURN>"
Input Msb2$,Midbit2$,Lsb2$
If Len(Msb2$)=1
  Msb2$="0"+Msb2$                  ! Screen display
Endif
Msb2_display$=Upper$(Msb2$)        !   "       "
If Len(Midbit2$)=1
  Midbit2$="0"+Midbit2$
Endif
Midbit2_display$=Upper$(Midbit2$)  !   "       "
If Len(Lsb2$)=1
  Lsb2$="0"+Lsb2$
Endif
Lsb2_display$=Upper$(Lsb2$)        !   "       "
Msb2$="&"+Msb2$                    ! Converts MSB into Hex string format (SIZE)
Midbit2$="&"+Midbit2$              !    "     MIDDLESB  "     "     "       "
Lsb2$="&"+Lsb2$                    !    "     LSB       "     "     "       "
Print
Print
Print
Sum=Val(Msb1$)+Val(Midbit1$)+Val(Lsb1$)+Val(Msb2$)+Val(Midbit2$)+Val(Lsb2$)
'                           ! Sum=addrMSB+sizeMSB+addrMIDDLESB+sizeMIDDLESB
'                           !     +addrLSB+sizeLSB
Print "  ";Msb1_display$;" ";      ! Screen display
Print Midbit1_display$;" ";
Print Lsb1_display$,"ADDRESS Start"
Print "  ";Msb2_display$;" ";
Print Midbit2_display$;" ";
Print Lsb2_display$,"Block SIZE"   !   "      "
Print "-------------------------------------"
Temporary_checksum=&HFF-Sum+1              ! Subtracts Sum from 100H (or FFH +1)
Final_checksum=Temporary_checksum And &H7F ! AND's temporary_checksum with 7FH
'                                          ! because of Roland base 128 counting
'                                          ! system. i.e......
'
'                                            00 00 7C
'                                            00 00 7D
'                                            00 00 7E
'                                            00 00 7F
'                                            00 01 00  (Instead of 00 00 80)
'                                            00 01 01
'                                            00 01 02
Print "           ";Hex$(Final_checksum),"<---------  CHECKSUM (in Hexadecimal)"
Print
Print
Print "Press RETURN to run again or 'X' to return to Desktop"
Repeat
  Z$=Inkey$
  If Z$="x" Or Z$="X"
    End
  Endif
Until Z$<>""
Goto Do_it_again
