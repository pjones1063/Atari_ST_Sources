' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
' *                                                             *
' *                      FLEABYTE\SX, 0.8                       *
' *                simple calculator w. wormhole                *
' *                                                             *
' *                   by Henry K. van Eyken,                    *
' *         11 Falcon, Lakefield, Que. J0V 1K0.  Canada         *
' *                                                             *
' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
'
' High or medium resolution only
' SESSION OF NOV.15, 1991
'
'
$m22528
ap_id&=APPL_INIT()
@init
@main
'
> PROCEDURE init
  me_id&=MENU_REGISTER(ap_id&,"  Fleabyte\sx")
  ry%=XBIOS(4)
  OPTION BASE 0
  DIM memo$(25,2)
  all!=TRUE
  leftover!=FALSE
RETURN
> PROCEDURE main
  IF ap_id&<>0
    DO
      ~EVNT_MESAG(0)
      IF XBIOS(4)=0
        ALERT 1," | |  In high or medium|  resolution only",1," sorry ",a%
      ENDIF
      message
    LOOP
  ELSE
    TITLEW #1,"| fleabyte.sx\henry fac. |"
    OPENW #1,0,170*ry%-2,638,30*ry%,&X1111
    handle&=W_HAND(#1)
    ON MENU MESSAGE GOSUB message
    exit!=FALSE
    REPEAT
      ON MENU
    UNTIL exit!
  ENDIF
RETURN
> PROCEDURE message
  x&=MENU(5)
  y&=MENU(6)
  w&=MENU(7)
  h&=MENU(8)
  '
  SELECT MENU(1)
  CASE 20,23
    ~WIND_UPDATE(1)
    ~WIND_GET(handle&,11,x&,y&,w&,h&)
    ~WIND_GET(handle&,4,wx&,wy&,ww&,wh&)
    REPEAT
      IF RC_INTERSECT(wx&,wy&,ww&,wh&,x&,y&,w&,h&)
        CLIP x&,y&,w&,h& OFFSET wx&,wy&
        @finder
        CLIP 0,0,WORK_OUT(0),WORK_OUT(1)
      ENDIF
      ~WIND_GET(handle&,12,x&,y&,w&,h&)
    UNTIL w&=0 AND h&=0
    ~WIND_UPDATE(0)
  CASE 21
    TOPW #1
  CASE 22,41
    CLOSEW #1
    exit!=TRUE
  CASE 28
    ~WIND_SET(handle&,5,0,MIN(170*ry%-2,y&),w&,h&)
  CASE 40
    TITLEW #1,"| fleabyte.sx\henry fac. |"
    OPENW #1,0,170*ry%-2,638,30*ry%,&X1111
    handle&=W_HAND(#1)
  ENDSELECT
RETURN
> PROCEDURE finder
  LOCAL entry$,error$,sub_mc%
  LPOKE XBIOS(14,1)+6,0
  IF leftover!=FALSE
    REPEAT
      leave_finder!=TRUE
      entry$=""
      error$=""
      DEFFILL 2,2,1
      PBOX 0,0,PRED(ww&),PRED(wh&)
      IF mc%=0
        PRINT AT(2,2);"simplex 0.8 & wormhole";
        PRINT AT(35,2);"[info at @]";
      ELSE IF mc%=1
        PRINT AT(2,2);"m1: ";ans1$;
      ELSE IF mc%>1
        PRINT AT(2,2);"m1: ";ans1$;
        PRINT AT(LEN(ans1$)+12,2);"m2: ";ans2$;
      ENDIF
      IF all!=TRUE
        PRINT AT(64,2);"[wh:l]";
      ELSE IF all!=FALSE
        PRINT AT(64,2);"[wh:b]";
      ENDIF
      '
      LOCATE 2,1
      FORM INPUT 75,entry$
      IF LEN(entry$)=75
        PRINT CHR$(7);
        entry$=entry$+"?"
        LOCATE 2,1
        FORM INPUT 76 AS entry$
      ENDIF
      '
      IF entry$<>""
        SELECT LEFT$(entry$)
        CASE "="
          IF all!=TRUE
            all!=FALSE
          ELSE
            all!=TRUE
          ENDIF
          leave_finder!=FALSE
        CASE "!"
          IF LEN(entry$)>1
            INC mc%
            memo$(mc%,1)=entry$
          ENDIF
          leave_finder!=FALSE
        CASE "?"
          FOR sub_mc%=INT(mc%/2) TO mc%
            DEFFILL 2,2,1
            PBOX 0,0,PRED(ww&),PRED(wh&)
            IF LEFT$(memo$(sub_mc%,1))="!"
              PRINT AT(2,1);MID$(memo$(sub_mc%,1),2)
            ELSE
              PRINT AT(2,1);memo$(sub_mc%,1)
              PRINT AT(79-LEN(memo$(sub_mc%,2)),2);memo$(sub_mc%,2);
            ENDIF
            PRINT AT(33,2);"[memo #";sub_mc%;" of ";mc%;"]";
            REPEAT
              key$=INKEY$
              IF key$="m" OR key$="M"
                ans2$=ans1$
                ans1$=memo$(sub_mc%,2)
                sub_mc%=mc%
              ELSE IF key$="<" AND sub_mc%>1
                sub_mc%=sub_mc%-2
              ELSE IF key$<>"" AND key$<>CHR$(13) AND key$<>">"
                sub_mc%=mc%
              ENDIF
            UNTIL key$<>""
          NEXT sub_mc%
          leave_finder!=FALSE
        CASE "@"
          DEFFILL 2,2,1
          PBOX 0,0,PRED(ww&),PRED(wh&)
          PRINT AT(11,1);"= wormhole toggle (long, brief)"
          PRINT AT(47,1);"! note"
          PRINT AT(58,1);"annotation !"
          PRINT AT(11,2);"? memo array (use < and > for browsing, m or M for capture)";
          ~INP(2)
          DEFFILL 2,2,1
          PBOX 0,0,PRED(ww&),PRED(wh&)
          PRINT AT(13,1);"Shareware from Fleabyte \ Contributions of $15 solicited"
          PRINT AT(6,2);"Henry K. van Eyken \ 11, ch Falcon \ Lakefield, Que.  J0V 1K0 \ Canada";
          ~INP(2)
          leave_finder!=FALSE
        DEFAULT
          REPEAT
            error$=""
            DEFFILL 2,2,1
            PBOX 0,0,PRED(ww&),PRED(wh&)
            @error_filter
            IF error$=""
              IF RIGHT$(entry$,1)<>"="
                PRINT AT(2,1);entry$+"=";
              ENDIF
              @parser
            ENDIF
            IF error$=""
              IF mc%<24
                INC mc%
              ELSE IF mc%=24
                FOR no%=1 TO 23
                  memo$(no%,1)=memo$(no%+1,1)
                  memo$(no%,2)=memo$(no%+1,2)
                NEXT no%
              ENDIF
              memo$(mc%,1)=entry$+"="
              memo$(mc%,2)=make$
              ans2$=ans1$
              ans1$=make$
              PRINT AT(79-LEN(make$),2);make$;
            ELSE
              PRINT AT(79-LEN(error$),2);error$;
              LOCATE 2,1
              FORM INPUT 76 AS entry$
            ENDIF
          UNTIL error$=""
        ENDSELECT
        IF leave_finder!=TRUE
          REPEAT
            key$=INKEY$
            IF key$=CHR$(13)
              leave_finder!=FALSE
            ELSE IF key$=CHR$(27)
              IF all!=TRUE
                string$=entry$+" = "+ans1$
                IF LEN(string$)<=54+pass%
                  @wormhole(string$)
                ELSE
                  string1$=LEFT$(string$,54+pass%)
                  string2$=MID$(string$,55+pass%)
                  @wormhole(string1$)
                  leftover!=TRUE
                ENDIF
              ELSE
                @wormhole(ans1$)
              ENDIF
            ENDIF
          UNTIL key$<>""
        ENDIF
      ENDIF
    UNTIL leave_finder!=TRUE
  ELSE
    @wormhole(string2$)
    leftover!=FALSE
  ENDIF
RETURN
> PROCEDURE error_filter
  LOCAL bracket%,next$
  FOR i%=INSTR(entry$,"!")+1 TO LEN(entry$)
    next$=MID$(entry$,i%+1,1)
    SELECT MID$(entry$,i%,1)
    CASE "(","{","["
      bracket%=bracket%+1
      IF next$="^" OR next$="*" OR next$="/" OR next$=":"
        error$="sign after bracket"
      ENDIF
    CASE ")","}","]"
      bracket%=bracket%-1
    CASE "^","*","/","+","-"
      IF next$="^" OR next$="*" OR next$="/" OR next$=")" OR next$="}" OR next$="]"
        error$="check signs"
      ENDIF
    ENDSELECT
  NEXT i%
  IF bracket%<>0
    error$="check brackets"
  ENDIF
RETURN
> PROCEDURE parser
  LOCAL excl%,i%,j%,jj%,parsnips%,pp%,a$,b$,c$
  excl%=INSTR(entry$,"!")
  make$="("+MID$(entry$,excl%+1)+")|"
  REPEAT
    INC i%
    IF MID$(make$,i%,1)=" "
      make$=LEFT$(make$,i%-1)+MID$(make$,i%+1)
      DEC i%
    ELSE IF MID$(make$,i%,1)=":"
      make$=LEFT$(make$,i%-1)+"/"+MID$(make$,i%+1)
    ELSE IF MID$(make$,i%,1)=","
      make$=LEFT$(make$,i%-1)+"."+MID$(make$,i%+1)
    ELSE IF MID$(make$,i%,2)="PI" OR MID$(make$,i%,2)="pi"
      make$=LEFT$(make$,i%-1)+"3.14159265358979"+MID$(make$,i%+2)
      i%=i%+14
    ELSE IF MID$(make$,i%,2)="M1" OR MID$(make$,i%,2)="m1"
      make$=LEFT$(make$,i%-1)+ans1$+MID$(make$,i%+2)
      DEC i%
    ELSE IF MID$(make$,i%,2)="M2" OR MID$(make$,i%,2)="m2"
      make$=LEFT$(make$,i%-1)+ans2$+MID$(make$,i%+2)
      DEC i%
    ENDIF
  UNTIL MID$(make$,i%)="|"
  REPEAT
    INC j%
    SELECT MID$(make$,j%,1)
    CASE "(","[","{"
      parsnips%=parsnips%+1
      jj%=j%
    CASE ")","]","}"
      parsnips%=parsnips%-1
    ENDSELECT
    IF parsnips%<pp%
      a$=LEFT$(make$,jj%-1)
      b$=MID$(make$,jj%+1,j%-jj%-1)
      c$=MID$(make$,j%+1)
      j%=0
      parsnips%=0
      @calculator
      make$=a$+b$+c$
    ENDIF
    pp%=parsnips%
  UNTIL MID$(make$,j%)="|"
  make$=LEFT$(make$,LEN(make$)-1)
RETURN
> PROCEDURE calculator
  LOCAL k%,m%,mm%,round%,bb,x,y
  LOCAL aa$,bb$,cc$,sign1$,sign2$,sign$,signstring$
  signstring$="^^*/-+"
  FOR k%=1 TO 6 STEP 2
    calculation!=FALSE
    sign1$=MID$(signstring$,k%,1)
    sign2$=MID$(signstring$,k%+1,1)
    FOR m%=1 TO LEN(b$)-1
      IF calculation!=FALSE
        x=VAL(MID$(b$,m%))
        mm%=m%
        m%=m%+VAL?(MID$(b$,m%))
        IF MID$(b$,m%,1)=sign1$ OR MID$(b$,m%,1)=sign2$
          sign$=MID$(b$,m%,1)
          m%=m%+1
          y=VAL(MID$(b$,m%))
          m%=m%+VAL?(MID$(b$,m%))
          SELECT sign$
          CASE "^"
            IF x>=0
              bb$=STR$(x^y)
            ELSE IF x<0
              IF FRAC(y)<1.0E-11 AND FRAC(y)>-1.0E-11
                y%=y
                bb$=STR$(x^y%)
              ELSE IF FRAC(ABS(1/(2*y)))<0.5+1.0E-11 AND FRAC(ABS(1/(2*y)))>0.5-1.0E-11
                bb=(-x)^ABS(y)
                round%=LEN(STR$(bb))-INSTR(STR$(bb),".")-1
                bb=ROUND(bb,round%)
                IF y>0
                  bb$=STR$(-bb)
                ELSE IF y<0
                  bb$=STR$(-1/bb)
                ENDIF
              ELSE
                error$="root of negative number"
                k%=10000
                m%=10000
              ENDIF
            ENDIF
            calculation!=TRUE
          CASE "*"
            bb$=STR$(x*y)
            calculation!=TRUE
          CASE "/"
            IF y=0
              error$="division by 0"
              k%=10000
              m%=10000
            ELSE
              bb$=STR$(x/y)
              calculation!=TRUE
            ENDIF
          CASE "-"
            bb$=STR$(x-y)
            calculation!=TRUE
          CASE "+"
            bb$=STR$(x+y)
            calculation!=TRUE
          ENDSELECT
          aa$=LEFT$(b$,mm%-1)                   !
          cc$=MID$(b$,m%)
          b$=aa$+bb$+cc$
        ENDIF
      ENDIF
    NEXT m%
    IF calculation!=TRUE
      k%=k%-2
    ENDIF
  NEXT k%
RETURN
> PROCEDURE wormhole(string$)
  LOCAL iorec%,k%
  IF pass%=0
    string$=">>>>>>>>"+string$
    pass%=pass%+8
  ENDIF
  iorec%=XBIOS(14,1)
  FOR k%=0 TO LEN(string$)
    LPOKE LPEEK(iorec%)+(4*k%),ASC(MID$(string$,k%))
  NEXT k%
  DPOKE iorec%+6,0
  DPOKE iorec%+8,4*LEN(string$)
RETURN
' end of listing
